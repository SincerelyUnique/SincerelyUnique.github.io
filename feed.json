{
    "version": "https://jsonfeed.org/version/1",
    "title": "Follow your heart",
    "subtitle": "A happy life",
    "icon": "http://jalen.site/images/favicon.ico",
    "description": "٩(●˙▿˙●)۶…⋆ฺ ->",
    "home_page_url": "http://jalen.site",
    "items": [
        {
            "id": "http://jalen.site/H3%E4%BB%8B%E7%BB%8D/",
            "url": "http://jalen.site/H3%E4%BB%8B%E7%BB%8D/",
            "title": "H3 Geocoding",
            "date_published": "2024-08-06T06:34:43.000Z",
            "content_html": "<h1 id=\"什么是geocoding\"><a class=\"anchor\" href=\"#什么是geocoding\">#</a> 什么是 geocoding？</h1>\n<p>Geocoding 是将地址描述（例如街道地址、城市名称、邮政编码等）转换为地理坐标（即纬度和经度）的过程。<br />\n这个过程使得基于地址的地理数据能够在地图上显示和使用。<br />\n例如，将地址 &quot;1600 Amphitheatre Parkway, Mountain View, CA&quot; 转换为地理坐标 (37.423021, -122.083739)。</p>\n<h2 id=\"geocoding-通常用于以下应用场景\"><a class=\"anchor\" href=\"#geocoding-通常用于以下应用场景\">#</a> Geocoding 通常用于以下应用场景：</h2>\n<ul>\n<li>地图显示：将地址信息转换为坐标后，可以在地图上显示具体位置。</li>\n<li>位置搜索：允许用户输入地址来查找特定位置。</li>\n<li>路线规划：基于起点和终点的地址进行导航和路线规划。</li>\n<li>位置分析：在地理信息系统（GIS）中进行空间分析和数据可视化。</li>\n</ul>\n<h2 id=\"逆向地理编码-reverse-geocoding\"><a class=\"anchor\" href=\"#逆向地理编码-reverse-geocoding\">#</a> 逆向地理编码 (Reverse Geocoding)</h2>\n<p>逆向地理编码是将地理坐标转换为地址描述的过程。例如，将坐标 (37.423021, -122.083739) 转换为 &quot;1600 Amphitheatre Parkway, Mountain View, CA&quot;。</p>\n<h2 id=\"geocoding-服务\"><a class=\"anchor\" href=\"#geocoding-服务\">#</a> Geocoding 服务</h2>\n<p>有许多在线服务和 API 可以执行 geocoding 和逆向地理编码，例如：</p>\n<ul>\n<li>Google Maps Geocoding API：提供全球范围的 geocoding 和逆向地理编码服务。</li>\n<li>OpenStreetMap (Nominatim)：一个开源的地理编码服务，基于 OpenStreetMap 数据。</li>\n<li>Bing Maps API：微软提供的地理编码和逆向地理编码服务。</li>\n<li>Mapbox Geocoding API：提供高性能的地理编码和逆向地理编码服务。</li>\n</ul>\n<h1 id=\"uber-h3-是什么\"><a class=\"anchor\" href=\"#uber-h3-是什么\">#</a> uber h3 是什么？</h1>\n<ol>\n<li>Uber H3 是一个用于地理空间数据处理的开源库，旨在对地球表面进行空间划分和索引，形成一个离散的全球网格系统，用于将地理位置索引到六边形网格中。。</li>\n<li>H3 是一个由 Uber 开发的六边形网格系统，其设计用于高效的地理位置编码和区域分析，每个坐标可以索引到单元格 ID，每个单元格 ID 代表一个唯一的单元格。</li>\n<li>索引数据可以跨不同的数据集快速连接，并以不同的精度级别进行聚合。</li>\n<li>H3 支持一系列基于网格的算法和优化，包括最近邻、最短路径、梯度平滑等。</li>\n<li>通过使用 H3，开发人员可以在地理空间应用程序中实现高效的数据处理和分析。</li>\n</ol>\n<p>uber 研发初衷：用于有效优化乘车定价和调度，以及可视化和探索空间数据，H3 能够分析地理信息，以设定动态价格并在全市范围内做出其他决策，来分析和优化整个市场。</p>\n<p>为什么不对最细粒度进行分析呢？ 因为对最细粒度（即事件发生的确切位置）进行分析非常困难且昂贵。对区域（例如城市内的社区）的分析更为实用。主要体现以下几方面：</p>\n<ul>\n<li>数据量庞大：高密度数据，例如，在一个繁忙的城市中，每分钟可能有成千上万的事件发生。</li>\n<li>存储需求：存储和管理这些数据的成本也会显著增加。</li>\n<li>高计算需求：例如，计算每个位置的交通模式、事件频率或热点分布等，都需要复杂的算法和处理能力。</li>\n<li>性能问题：处理和分析大规模的细粒度数据可能会导致性能瓶颈，尤其是在实时数据流和大数据环境中。</li>\n<li>个人隐私：细粒度位置数据可能涉及到用户的私人信息，如他们的具体行踪。</li>\n<li>数据保护：保护用户隐私和数据安全增加了额外的复杂性和成本。需要采取加密、数据去标识化等措施来确保数据安全。</li>\n<li>数据清洗：处理原始位置数据通常需要进行数据清洗和预处理，包括去除噪声、纠正错误和填补缺失值等。</li>\n<li>高级分析：进行空间分析、模式识别和预测分析需要先进的分析工具和技术，这些通常需要高水平的专业知识和资源。</li>\n<li>复杂的可视化：展示每个具体位置的数据可能需要复杂的可视化技术，以便于理解和决策。这些可视化工具的开发和维护也会增加成本。</li>\n<li>模式识别：从细粒度数据中识别出有意义的模式和趋势可能非常困难，需要高级的分析方法和机器学习技术。</li>\n</ul>\n<p>反观 h3 有以下几点好处：</p>\n<ul>\n<li>数据简化：将数据按区域聚合，减少数据量，降低存储和计算需求。</li>\n<li>易于处理：区域级分析更易于处理和分析，因为数据被分成了更管理和分析友好的块。</li>\n<li>隐私保护：聚合数据可以减少对个人隐私的影响，更易于遵守隐私保护法规。</li>\n</ul>\n<blockquote>\n<p>H3 开源时间：2018 年，实现语言：C 语言</p>\n</blockquote>\n<p>主要特点和功能：</p>\n<ul>\n<li>六边形网格：H3 将地球表面划分为六边形网格，这种划分方式可以提供均匀的空间分布，使得地理区域的分析和处理更加简便。</li>\n<li>空间索引：H3 提供了一个空间索引系统，可以用于高效地存储和查询地理空间数据。</li>\n<li>分辨率：H3 网格系统支持不同的分辨率，从较大的区域到较小的区域都可以通过调整分辨率来表示。分辨率越高，网格的细节越精细。</li>\n<li>空间分析：H3 允许进行各种空间分析任务，例如区域查询、邻域分析和聚合计算。它支持多种几何操作，如计算距离、查找相邻单元等。</li>\n<li>开源：H3 是一个开源项目，用户可以根据自己的需要进行修改和扩展。它支持多种编程语言，包括 C、Python、JavaScript 和 Go。</li>\n</ul>\n<p>典型应用：</p>\n<ul>\n<li>地理数据可视化：使用 H3 的六边形网格，可以将地理数据以可视化方式呈现，帮助理解地理分布和模式。</li>\n<li>位置服务：在位置服务应用中，可以使用 H3 进行高效的区域查询和分析。</li>\n<li>城市规划和分析：H3 可以用于城市规划和区域分析，帮助优化资源分配和管理。</li>\n<li>大数据处理：对于大规模的地理数据集，H3 提供了一种高效的处理和分析方法。</li>\n</ul>\n<h1 id=\"了解h3\"><a class=\"anchor\" href=\"#了解h3\">#</a> 了解 H3</h1>\n<p>首先看下效果图</p>\n<p><img data-src=\"../images/h3001.png\" alt=\"h3 overview\" /></p>\n<p>现实中点和区域效果</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img data-src=\"../images/h30021.png\" alt=\"h3 overview\" /></td>\n<td><img data-src=\"../images/h3002.png\" alt=\"h3 overview\" /></td>\n<td><img data-src=\"../images/h3003.png\" alt=\"h3 overview\" /></td>\n</tr>\n</tbody>\n</table>\n<p>为什么选择六边形，uber 给的理由是：因为城市中的人们经常在运动，而六边形可以最大限度地减少用户在城市中移动时引入的量化误差。六边形还允许轻松地近似半径，因为目前能够做网格空间索引的形状只有三角形、矩形和六边形，而六边形因为边数最多，最接近圆，所以理论上来说在某些场景下是最优的选择。详细体现在以下几点</p>\n<ul>\n<li>均匀性：六边形能够在平面上均匀地覆盖区域，没有明显的重叠或缝隙。与正方形网格相比，六边形的边界与邻接网格的边界之间的对接更加自然。</li>\n<li>空间紧凑性：六边形的每个角都与其他六边形的角对接，这样可以更紧凑地填充空间，从而减少空白区域或重叠区域。</li>\n<li>边界效应最小化：在六边形网格中，每个单元的边界长度是固定的，且与邻接单元的边界接触平滑，这样可以最小化在计算过程中由于边界分割引起的误差。</li>\n<li>一致的距离：六边形的每个边长都相同，使得从一个六边形到其邻近六边形的距离保持一致。这种一致性有助于减少因距离不均匀引起的计算误差。</li>\n<li>稳定的邻接关系：六边形网格的每个单元有六个邻接单元，这种稳定的邻接关系简化了空间计算，如距离计算和邻接查询。与其他形状相比，六边形的邻接关系更加均匀和一致。</li>\n<li>减少 “边界效应”：由于六边形的形状，网格之间的边界效应减少了。这使得在进行区域分析时，边界上的数据不会因为与邻接单元的不规则接触而产生误差。</li>\n<li>多分辨率支持：六边形网格可以支持多种分辨率，通过改变六边形的大小来适应不同的分析需求。例如，可以使用较大的六边形进行宏观分析，使用较小的六边形进行微观分析。</li>\n<li>比例一致性：由于六边形的对称性，其空间覆盖的比例在各个方向上是一致的，这有助于在进行比例分析时减少偏差。</li>\n<li>与自然特征对接：在复杂的城市环境中，六边形网格比其他形状更能适应自然地理特征和城市道路布局，减少了人工创建网格时对自然地形的不适配。</li>\n</ul>\n<p>在 GIS 领域中，对空间填充曲线熟悉的同学应该知道，不论是 GeoHash, Z2 或者 Hilbert，虽然看起来都是将空间按照经纬度分割成了一个个大小相等的网格，但实际上这些网格的实际面积并不相等。对于靠近极地的网格，虽然经纬度的间隔没变，但由于地球的曲率，这些网格的实际面积远小于靠近赤道的网格。这种实际面积不相等的网格索引可能会造成一个问题，那就是由于网格大小不一致导致网格内数据量不一致，造成热网格和冷网格，Uber 认为这会大大降低空间查询效率。</p>\n<h2 id=\"投影-网格\"><a class=\"anchor\" href=\"#投影-网格\">#</a> 投影 + 网格</h2>\n<p>投影和网格是地理空间分析中的两个重要概念。投影是将地球表面的三维曲面转换为二维平面的过程。</p>\n<p>投影类型：</p>\n<ul>\n<li>等距投影：保持距离不变，但可能扭曲面积和角度。例如，墨卡托投影。</li>\n<li>等角投影：保持角度不变，但可能扭曲距离和面积。例如，兰伯特正形投影。</li>\n<li>等面积投影：保持面积不变，但可能扭曲距离和角度。例如，阿尔贝斯等面积投影。</li>\n</ul>\n<p>投影的影响：</p>\n<ul>\n<li>变形：不同的投影方式会对地图的面积、距离、角度和形状产生不同程度的变形。</li>\n<li>应用选择：根据应用需求选择合适的投影方式，例如，导航应用通常使用墨卡托投影，而统计地图可能使用等面积投影。</li>\n</ul>\n<p>网格是将地理区域划分为规则的单元格，用于数据存储、分析和可视化。网格可以有不同的形状，如正方形、矩形或六边形等。<br />\n选择合适的投影和网格系统可以减少数据处理中的变形和误差，确保地理数据的准确性和实用性。</p>\n<h2 id=\"h3-投影\"><a class=\"anchor\" href=\"#h3-投影\">#</a> H3 投影</h2>\n<ul>\n<li>H3 以二十面体面（左）为中心的心轴投影进行 H3 的地图投影，将地球投影为球形二十面体（右）。</li>\n<li>这将地球从一个球体投射到一个二十面体，即二十面的柏拉图立体，基于二十面体的地图投影会产生二十个独立的二维平面，而不是单个平面。</li>\n<li>将地球当作一个二十面体，这个二十面体的每一个面都是球面三角形，有 12 个顶点，称为球形二十面体，在这个球形十二面体的每个面上都有相同排列方式的六边形。由于这个球形二十面体的 12 个顶点每一个都在地球上的水里，可以保证对于每个面做处理时不会遇到边界</li>\n<li>二十面体可以通过多种方式展开，每次都会生成一个二维地图。</li>\n<li>H3 并没有展开二十面体来构建其网格系统，而是将其网格放置在二十面体本身的表面上，形成测地离散全局网格系统。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img data-src=\"../images/h3005.png\" alt=\"h3 overview\" /></td>\n<td><img data-src=\"../images/h3006.png\" alt=\"h3 overview\" /></td>\n<td><img data-src=\"../images/h3007.png\" alt=\"h3 overview\" /></td>\n</tr>\n</tbody>\n</table>\n<p>uber 自身认为使用六边形作为单元形状对于 H3 至关重要。因为从一个六边形中点到其邻域距离相等，只有一个距离 (注：正方形有两个距离，三角形有三个距离)，如下：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img data-src=\"../images/h3008.png\" alt=\"h3 overview\" /></td>\n<td><img data-src=\"../images/h3009.png\" alt=\"h3 overview\" /></td>\n<td><img data-src=\"../images/h3010.png\" alt=\"h3 overview\" /></td>\n</tr>\n</tbody>\n</table>\n<p>H3 网格是通过在地球上布置 122 个基本单元而构建的，每个面有 10 个单元。有些单元被多个面所包含。<br />\n由于不可能仅用六边形来平铺二十面体，因此我们选择引入十二个五边形，每个二十面体顶点都有一个五边形。<br />\n这些顶点由 R. Buckminster Fuller 使用球面二十面体方向定位，将所有顶点放置在水中。这有助于避免我们的工作中出现五边形。</p>\n<p><img data-src=\"../images/h3021.jpeg\" alt=\"h3021\" /><br />\n<img data-src=\"../images/h3022.jpeg\" alt=\"h3022\" /></p>\n<p>在二十面体的顶点处，有五个面交于这个顶点，每个面在这个顶点处都有一个小三角形，所以这些小三角形会形成一个五边形。也就是说，H3 并不能保证每个空间单元都是六边形，在一些地方还是会存在五边形，但是这样做也不会造成很大影响，因为根据球形二十面体每个顶点都在水里的特性，这种五边形只会出现在水域周围，不会对 Uber 的打车和外卖业务造成很大的影响。</p>\n<p><img data-src=\"../images/h3020.png\" alt=\"h3020\" /></p>\n<p>每个面上有 5.5 个六边形和 3/5 个五边形，即第 0 层一共有 110 个六边形和 12 个五边形。H3 将这 110 个六边形称为基网格（base cells）。H3 最高可以到 15 层，也就是说 H3 有 16 个层级的空间索引粒度，在粒度最细的第 15 层中，平均每个网格的大小为 0.9 平方米，平均边长为 0.509713 米。在往下一层划分时，每个父网格对应 7 个子网格</p>\n<p><img data-src=\"../images/h3011.png\" alt=\"h3 overview\" /></p>\n<p>H3 支持十六种分辨率。每个较精细分辨率的单元的面积是较粗分辨率的七分之一。六边形不能完美地细分为七个六边形，因此更精细的单元仅大致包含在母单元内。<br />\n这些子单元的标识符可以很容易地被截断，以更粗的分辨率找到它们的祖先单元，从而实现高效的索引。由于子单元仅被近似包含，因此截断过程会产生固定量的形状扭曲。这种失真仅在执行小区标识符截断时出现；当以特定分辨率索引位置时，单元边界是精确的。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img data-src=\"../images/h3012.png\" alt=\"h3 overview\" /></td>\n<td><img data-src=\"../images/h3013.png\" alt=\"h3 overview\" /></td>\n<td><img data-src=\"../images/h3014.png\" alt=\"h3 overview\" /></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"坐标索引\"><a class=\"anchor\" href=\"#坐标索引\">#</a> 坐标索引</h2>\n<p>对六边形索引，H3 使用了一种 IJK 坐标系来确定六边形的位置。IJK 坐标系长这样：</p>\n<p><img data-src=\"../images/h3017.png\" alt=\"h3017\" /></p>\n<p>当然，H3 不会简单地使用这种坐标系来对所有六边形进行编码，因为在每一个层级六边形的排列方式都不太一样。总的来说，在所有层级中，六边形的排列方式只有两种类型，称为 Class II 和 Class III。在这两种类型的排列方式中，IJK 坐标系的三个轴的方向不太一样。对于这种在一个二十面体的面上，根据不同的六边形排列方式使用不同方向坐标轴的坐标系，H3 称之为 FaceIJK 坐标系：</p>\n<p><img data-src=\"../images/h3018.png\" alt=\"h3018\" /></p>\n<p>那么对于一个面上所有层级的所有六边形，都使用 FaceIJK 坐标系编码，再加上面的唯一标识符可不可以？答案是可以，但没必要，因为如果这样做，H3 编码会更加表示不了层级之间的关系。H3 为了突出层级之间的关联性，使用了一种方法：每个六边形都包含其父六边形的坐标。这样只需要规定好每个网格的子网格坐标的计算方法，对于子网格，只需在父网格的坐标后面追加子网格的坐标即可。这样一来，只需关注一个网格的 7 个子网格如何计算坐标，所有层级的每个网格的坐标都可以递归得到，这 7 个网格坐标的计算方法见图 7，为了表述方便，我称之为 IJK 七网格坐标系。那么还有 12 个五边形咋办？不好意思，那 12 个五边形随着层级划分仍然是 12 个，层级越高这些五边形越小，并且都在海里，影响不大，直接不管了！</p>\n<p><img data-src=\"../images/h3019.png\" alt=\"h3019\" /></p>\n<p><img data-src=\"../images/h3023.png\" alt=\"h3023\" /></p>\n<h1 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h1>\n<p>H3 库的基本功能是索引位置，它将纬度和经度对转换为 64 位 H3 索引，识别网格单元。<br />\n函数 geoToH3 接受纬度、经度和分辨率（0 到 15 之间，0 表示最粗略，15 表示最精细），并返回一个索引。 h3ToGeo 和 h3ToGeoBoundary 是该函数的反函数，分别提供由 H3 索引指定的网格单元的中心坐标和轮廓。</p>\n<p>相邻的六边形具有使用网格系统近似圆形的有用属性。 kRing 函数提供原点索引的网格距离 k 内的网格单元。</p>\n<p>H3 的分层性质允许有效地截断索引的精度（或分辨率）并恢复原始索引。上面显示了一组六边形的非紧凑和紧凑表示。<br />\n非紧凑表示在分辨率为 6 时具有 10,633 个六边形，但紧凑表示在分辨率高达 6 时具有 901 个六边形。在这两种情况下，六边形索引都是 64 位整数。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img data-src=\"../images/h3015.png\" alt=\"h3 overview\" /></td>\n<td><img data-src=\"../images/h3016.png\" alt=\"h3 overview\" /></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oM2dlby5vcmcv\">H3 官网</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWJlci5jb20vZW4tSlAvYmxvZy9oMy8=\"> H3: Uber’s Hexagonal Hierarchical Spatial Index</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9vYnNlcnZhYmxlaHEuY29tL0BucmFiaW5vd2l0ei9oMy1pbmRleC1iaXQtbGF5b3V0\">H3 Index Bit Layout</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oM2dlby5vcmcvZG9jcy9jb3JlLWxpYnJhcnkvaDNpbmRleGluZw==\">H3 Index Structure</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oM2dlby5vcmcvZG9jcy9jb3JlLWxpYnJhcnkvcmVzdGFibGU=\">Tables of Cell Statistics Across Resolutions</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oM2dlby5vcmcvZG9jcy9jb3JlLWxpYnJhcnkvY29vcmRzeXN0ZW1z\">Coordinate systems</span></p>\n",
            "tags": [
                "uber"
            ]
        },
        {
            "id": "http://jalen.site/js%E8%8E%B7%E5%8F%96docker%20run%E6%97%B6%E6%8C%87%E5%AE%9A%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F/",
            "url": "http://jalen.site/js%E8%8E%B7%E5%8F%96docker%20run%E6%97%B6%E6%8C%87%E5%AE%9A%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F/",
            "title": "js获取docker run时指定的环境变量的一种方式",
            "date_published": "2024-04-22T06:34:43.000Z",
            "content_html": "<h1 id=\"background\"><a class=\"anchor\" href=\"#background\">#</a> Background</h1>\n<p>We want to get the  <code>ENV</code>  value which set from the  <code>docker run -e ENV='xxxx' --name xxx-container xxx-image'</code>  in client js script, so we need to expose it to client</p>\n<h1 id=\"environment\"><a class=\"anchor\" href=\"#environment\">#</a> Environment</h1>\n<ul>\n<li>framework: vue3 + vite</li>\n<li>detail<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>➜  dcc_front git:<span class=\"token punctuation\">(</span>develop<span class=\"token punctuation\">)</span> ✗ <span class=\"token function\">npm</span> <span class=\"token function\">ls</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>├── @element-plus/icons-vue@2.3.1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>├── @tsconfig/node20@20.1.2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>├── @types/node@20.11.26</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>├── @vitejs/plugin-vue@5.0.4</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>├── @vue/tsconfig@0.5.1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>├── date-fns@3.6.0</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>├── element-plus@2.6.3</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>├── npm-run-all2@6.1.2</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>├── pinia@2.1.7</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>├── rollup@4.13.2</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>├── typescript@5.4.2</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>├── vite@5.1.6</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>├── vue-tsc@2.0.6</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>├── vue@3.4.21</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>└── xlsx@0.18.5</pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"implement\"><a class=\"anchor\" href=\"#implement\">#</a> Implement</h1>\n<h2 id=\"maints-or-mainjs\"><a class=\"anchor\" href=\"#maints-or-mainjs\">#</a> main.ts (or main.js)</h2>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 1.append attribute to html tag</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 2.set the attribute to global property</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> htmlNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">let</span> <span class=\"token constant\">ENV_NOW</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>htmlNode <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token constant\">ENV_NOW</span> <span class=\"token operator\">=</span> htmlNode<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"env_now\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ENV_NOW</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    app<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>globalProperties<span class=\"token punctuation\">.</span>$<span class=\"token constant\">ENV_NOW</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token constant\">ENV_NOW</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ENV NOW is: \"</span> <span class=\"token operator\">+</span> <span class=\"token constant\">ENV_NOW</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"dockerfile\"><a class=\"anchor\" href=\"#dockerfile\">#</a> Dockerfile</h2>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> nginx</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># here the code tar generate steps are</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 1.npm run build</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 2.cd dist &amp;&amp; tar zcvf code.tar.gz * </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 3.upload to docker build server: scp code.tar.gz user@x.x.x.x:/users/xxx</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">ADD</span> code.tar.gz /etc/nginx/html</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">EXPOSE</span> 443/tcp 8080/tcp</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># please be attention about the html path</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"/bin/bash\"</span>, <span class=\"token string\">\"-c\"</span>, <span class=\"token string\">\"sed -i \\\"s@&lt;html@&lt;html env_now=\\\"$ENV\\\"@\\\" /etc/nginx/html/index.html; nginx\"</span>]</span></pre></td></tr></table></figure><h2 id=\"build-run\"><a class=\"anchor\" href=\"#build-run\">#</a> Build &amp; Run</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> image build <span class=\"token parameter variable\">--platform</span> linux/amd64 <span class=\"token parameter variable\">-f</span> Dockerfile  <span class=\"token parameter variable\">-t</span> <span class=\"token punctuation\">&#123;</span>image<span class=\"token punctuation\">&#125;</span>:<span class=\"token punctuation\">&#123;</span>tag<span class=\"token punctuation\">&#125;</span> ./ --no-cache</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> push <span class=\"token punctuation\">&#123;</span>image<span class=\"token punctuation\">&#125;</span>:<span class=\"token punctuation\">&#123;</span>tag<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-idt</span> <span class=\"token parameter variable\">--privileged</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">9090</span>:8080 <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">ENV</span><span class=\"token operator\">=</span><span class=\"token string\">'jalen12322222'</span> <span class=\"token parameter variable\">--name</span> test-env <span class=\"token punctuation\">&#123;</span>image<span class=\"token punctuation\">&#125;</span>:<span class=\"token punctuation\">&#123;</span>tag<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"demo\"><a class=\"anchor\" href=\"#demo\">#</a> Demo</h1>\n<p><img data-src=\"../images/jsdockerenv01.jpg\" alt=\"js get docker env 01\" /></p>\n<p><img data-src=\"../images/jsdockerenv02.jpg\" alt=\"js get docker env 02\" /></p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82OTAxOTQ0ODE3MTA2ODEyOTQy\">https://juejin.cn/post/6901944817106812942</span></p>\n",
            "tags": []
        },
        {
            "id": "http://jalen.site/d3%20sankey%20zoom/",
            "url": "http://jalen.site/d3%20sankey%20zoom/",
            "title": "d3 js sankey zoom and dragable",
            "date_published": "2024-02-22T06:34:45.000Z",
            "content_html": "<h1 id=\"effect\"><a class=\"anchor\" href=\"#effect\">#</a> effect</h1>\n<p><img data-src=\"../images/d3sankeyzoom.gif\" alt=\"d3sankey\" /></p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> reference</h1>\n<p>d3 version: 5.7.0</p>\n<p>d3-sankey version: 0.7.1</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlcGVuLmlvL2Jvcm50b2ZyYXBwZS9wZW4vS3JCeXBL\">https://codepen.io/borntofrappe/pen/KrBypK</span></li>\n</ul>\n<h1 id=\"dependency\"><a class=\"anchor\" href=\"#dependency\">#</a> dependency</h1>\n<p>├── d3-sankey@0.12.3<br />\n├── d3@7.2.1<br />\n├── dagre-d3@0.6.4</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"d3\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^7.2.1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"d3-sankey\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^0.12.3\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"dagre-d3\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^0.6.4\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"implementation\"><a class=\"anchor\" href=\"#implementation\">#</a> implementation</h1>\n<pre><code class=\"language-vue\">&lt;template&gt;\n  &lt;div class=&quot;sankey-d3-demo&quot;&gt;\n    &lt;div class=&quot;container&quot;&gt;&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport * as d3 from &quot;d3&quot;;\nimport * as d3Sankey from 'd3-sankey';\nimport &#123; zoom &#125; from 'd3-zoom';\n\nexport default &#123;\n  name: &quot;SankeyD3Demo&quot;,\n  data() &#123;\n    return &#123;\n\n    &#125;;\n  &#125;,\n  components: &#123;&#125;,\n  created() &#123;\n\n  &#125;,\n  mounted() &#123;\n    this.initChart()\n  &#125;,\n  methods: &#123;\n    initChart()&#123;\n      const container = d3.select('.container');\n\n      // visualization based on the example at the provided url\n      const source = 'https://beta.observablehq.com/@mbostock/d3-sankey-diagram';\n      const url = 'https://gist.githubusercontent.com/mbostock/ca9a0bb7ba204d12974bca90acc507c0/raw/398136b7db83d7d7fd89181b080924eb76041692/energy.json';\n\n      container\n          .append('h2')\n          .text('Sankey Diagram');\n\n      container\n          .append('p')\n          .text('Feel free to zoom in. The text is a tad small.');\n\n      container\n          .append('a')\n          .attr('href', source)\n          .text('Source.');\n\n      const tooltip = container\n          .append('div')\n          .attr('id', 'tooltipaaa');\n\n      // SVG frame\n      // the same margin, width and height are used for both visualizations\n      const margin = &#123;\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20,\n      &#125;;\n\n      const width = 1000 + (margin.left + margin.right);\n      const height = 600 + (margin.top + margin.bottom);\n\n      const containerFrame = container\n          .append('svg')\n          .attr('viewBox', `0 0 $&#123;width + (margin.left + margin.right)&#125; $&#123;height + (margin.top + margin.bottom)&#125;`)\n          .append('g')\n          .attr('transform', `translate($&#123;margin.left&#125;, $&#123;margin.top&#125;)`);\n\n      // ZOOM feature\n      // include a rectangle spanning the entire container, as to allow a translation on the wrapping group\n      containerFrame\n          .append('rect')\n          .attr('x', 0)\n          .attr('y', 0)\n          .attr('width', width)\n          .attr('height', height)\n          .attr('fill', 'transparent');\n\n\n\n      function zoomed(event) &#123;\n        // 从事件对象中获取缩放的转换信息\n        const &#123; x, y, k &#125; = event.transform;\n        // 使用缩放信息来进行操作\n        containerFrame.attr('transform', `translate($&#123;x&#125; $&#123;y&#125;) scale($&#123;k&#125;)`);\n      &#125;\n      const zoomBehavior = zoom().on(&quot;zoom&quot;, zoomed);\n      containerFrame\n          .call(zoomBehavior);\n\n\n\n      // function creating the sankey diagram, based on an input data and frame (in which the visualization is plotted)\n      function createSankeyDiagram(data, frame) &#123;\n        // detail a color scale\n        const color = d3\n            .scaleOrdinal(d3.schemeSet3);\n\n        // detail the sankey function\n        const sankey = d3Sankey\n            .sankey()\n            // limit the nodes and links within the containing group\n            .extent([[0, 0], [width, height]]);\n\n        // destructure the two arrays for the nodes and links in two variables\n        const &#123; nodes, links &#125; = sankey(data);\n\n        // detail in a defs block one linear gradient for each link\n        // detail a unique identifier as to later call the id with the specified index\n        const defs = frame\n            .append('defs');\n\n        const linearGradients = defs\n            .selectAll('linearGradient')\n            .data(links)\n            .enter()\n            .append('linearGradient')\n            .attr('id', d =&gt; `gradient$&#123;d.index&#125;`)\n            .attr('x1', '0%')\n            .attr('y1', '50%')\n            .attr('x2', '100%')\n            .attr('y2', '50%');\n\n        // linear gradient going from left to right and detailing a color based on the source and target values\n        linearGradients\n            .append('stop')\n            .attr('offset', '0%')\n            .attr('stop-color', d =&gt; color(d.source.index));\n\n        linearGradients\n            .append('stop')\n            .attr('offset', '100%')\n            .attr('stop-color', d =&gt; color(d.target.index));\n\n        // detail a generator function for the links\n        const sankeyLinks = d3Sankey\n            .sankeyLinkHorizontal();\n\n        // append a path element for each link\n        // using the generator function\n        frame\n            .selectAll('path.link')\n            .data(links)\n            .enter()\n            .append('path')\n            .attr('class', 'link')\n            .attr('d', sankeyLinks)\n            .attr('fill', 'none')\n            // stroke using the gradient\n            .attr('stroke', d =&gt; `url(#gradient$&#123;d.index&#125;)`)\n            // stroke width based on the width of each data point\n            .attr('stroke-width', d =&gt; d.width)\n            // alter the opacity on hover\n            // detail also the data through a simple tooltip\n            .attr('opacity', 0.5)\n            .on('mouseenter', function (event, d) &#123;\n              d3\n                  .select(this)\n                  .transition()\n                  .attr('opacity', 1);\n              tooltip\n                  .append('p')\n                  .html(`&lt;strong&gt;$&#123;d.source.name&#125;&lt;/strong&gt; - &lt;strong&gt;$&#123;d.target.name&#125;&lt;/strong&gt;`);\n\n              tooltip\n                  .append('p')\n                  .html(`Value: &lt;strong&gt;$&#123;d.value&#125;&lt;/strong&gt;`);\n\n              const mouseX = event.pageX;\n              const mouseY = event.pageY;\n              tooltip\n                  .style('opacity', 1)\n                  .style('left', `$&#123;mouseX&#125;px`)\n                  .style('top', `$&#123;mouseY&#125;px`);\n            &#125;)\n            .on('mouseout', function () &#123;\n              d3\n                  .select(this)\n                  .transition()\n                  .attr('opacity', 0.5);\n\n              tooltip\n                  .style('opacity', 0)\n                  .selectAll('p')\n                  .remove();\n            &#125;);\n\n        // append a rectangle for each node\n        // using the fabricated values and the color based on the index\n        frame\n            .selectAll('rect.node')\n            .data(nodes)\n            .enter()\n            .append('rect')\n            .attr('class', 'node')\n            .attr('x', d =&gt; d.x0)\n            .attr('y', d =&gt; d.y0)\n            .attr('width', d =&gt; (d.x1 - d.x0))\n            .attr('height', d =&gt; (d.y1 - d.y0))\n            .attr('pointer-events', 'none')\n            .attr('stroke', '#555')\n            .attr('stroke-width', '1px')\n            .attr('fill', d =&gt; color(d.index));\n\n        // for each node append also a text element, detailing the respective value\n        // horizontally position the text after or before the rectangle elements for each node\n        frame\n            .selectAll('text.node')\n            .data(nodes)\n            .enter()\n            .append('text')\n            .text(d =&gt; d.name)\n            .attr('font-size', '0.75rem')\n            .attr('fill', '#111')\n            .attr('x', (d) =&gt; &#123;\n              if (d.sourceLinks.length &gt; 0) &#123;\n                return d.x0 + sankey.nodeWidth() + 5;\n              &#125;\n              return d.x0 - 5;\n            &#125;)\n            .attr('y', d =&gt; (d.y1 + d.y0) / 2)\n            .attr('pointer-events', 'none')\n            .attr('alignment-baseline', 'middle')\n            .attr('text-anchor', d =&gt; ((d.sourceLinks.length &gt; 0) ? 'start' : 'end'));\n      &#125;\n\n      fetch(url)\n          .then(response =&gt; response.json())\n          .then(json =&gt; createSankeyDiagram(json, containerFrame));\n\n    &#125;\n  &#125;,\n&#125;;\n&lt;/script&gt;\n&lt;style lang=&quot;scss&quot;&gt;\n.sankey-d3-demo&#123;\n  .container&#123;\n    max-width: 800px;\n    margin: 1rem auto;\n    padding: 1rem 2rem;\n    border-radius: 2px;\n    background: #FFFFFF;\n    box-shadow: 0 0 2px #2D2C35;\n\n    div &#123;\n      margin-bottom: 1.5rem\n    &#125;\n\n    p &#123;\n      margin: 0.8rem 0 0.4rem\n    &#125;\n\n    a &#123;\n      color: inherit\n    &#125;\n\n\n  &#125;\n&#125;\n#tooltipaaa &#123;\n  pointer-events: none;\n  position: absolute;\n  opacity: 0;\n  padding: 1rem;\n  background: #FFFFFF;\n  box-shadow: 0 0 4px rgba(#42424E, 0.2);\n  line-height: 2;\n  transition: all 0.2s ease-out;\n&#125;\n&lt;/style&gt;\n</code></pre>\n",
            "tags": [
                "d3"
            ]
        },
        {
            "id": "http://jalen.site/echarts%20sankey%20zoom/",
            "url": "http://jalen.site/echarts%20sankey%20zoom/",
            "title": "echarts sankey zoom and dragable",
            "date_published": "2024-02-22T06:34:43.000Z",
            "content_html": "<h1 id=\"effect\"><a class=\"anchor\" href=\"#effect\">#</a> effect</h1>\n<p><img data-src=\"../images/sankeyzoom.gif\" alt=\"sankeyzoom\" /></p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> reference</h1>\n<ol>\n<li>\n<p>sankey diagram not support zoom</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGlnaGNoYXJ0cy5jb20vZm9ydW0vdmlld3RvcGljLnBocD90PTUxNjY2\">https://www.highcharts.com/forum/viewtopic.php?t=51666</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9lY2hhcnRzL2lzc3Vlcy8xMjIwMw==\">https://github.com/apache/echarts/issues/12203</span></li>\n</ul>\n<p>New feature (roaming):</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9lY2hhcnRzL2lzc3Vlcy8xNzQzMg==\">https://github.com/apache/echarts/issues/17432</span></li>\n</ul>\n</li>\n<li>\n<p>highcharts sankey example</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlcGVuLmlvL3g0NDQvcGVuL3ZZbVBkcWc=\">https://codepen.io/x444/pen/vYmPdqg</span></li>\n</ul>\n</li>\n<li>\n<p>current reference</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p0d2VsdmUvYXJ0aWNsZS9kZXRhaWxzLzEyODY0OTE3NA==\">https://blog.csdn.net/ztwelve/article/details/128649174</span></li>\n</ul>\n</li>\n</ol>\n<h1 id=\"packagejson\"><a class=\"anchor\" href=\"#packagejson\">#</a> package.json</h1>\n<p>├── @types/echarts@4.6.3<br />\n├── echarts@5.2.2<br />\n├── vue-echarts@6.0.0</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"echarts\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^5.2.2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"vue-echarts\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.0.0\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"vue-component\"><a class=\"anchor\" href=\"#vue-component\">#</a> vue component</h1>\n<pre><code class=\"language-vue\">&lt;template&gt;\n  &lt;div class=&quot;sankey-echarts-zoom-demo&quot;&gt;\n    &lt;div class=&quot;chartBox&quot;&gt;\n      &lt;v-chart\n          class=&quot;boxaaaa&quot;\n          v-loading=&quot;loading&quot;\n          ref=&quot;chart&quot;\n          style=&quot;width: 100%; min-width: 600px; min-height: 550px&quot;\n          autoresize\n          :option=&quot;options&quot;\n      &gt;&lt;/v-chart&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n\nimport VChart from &quot;vue-echarts&quot;;\nimport &#123;data&#125; from &quot;./data&quot;\n\nexport default &#123;\n  name: &quot;SankeyEchartsDemo&quot;,\n  data() &#123;\n    return &#123;\n      options: &#123;&#125;,\n      loading: false,\n      chartBox: &#123;&#125;,\n    &#125;;\n  &#125;,\n  components: &#123;VChart&#125;,\n  created() &#123;\n\n  &#125;,\n  mounted() &#123;\n    this.initChart()\n\n    //鼠标滚轮事件\n    let charData = this.options\n    this.chartBox = document.getElementsByClassName(&quot;chartBox&quot;)[0]\n    window.onmousewheel = (event) =&gt; &#123;\n      //容器位置，&#123; x, y &#125; 为鼠标位置，&#123; top, bottom, left, right &#125;容器边界位置\n      let &#123; x, y &#125; = event,\n          &#123; top, bottom, left, right &#125; = this.chartBox.getClientRects()[0]\n      //画布DOM\n      let box = document.getElementsByClassName(&quot;boxaaaa&quot;)[0]\n      if (x &gt; left &amp;&amp; x &lt; right &amp;&amp; y &gt; top &amp;&amp; y &lt; bottom) &#123; //判断鼠标滚动事件是否在容器内\n        if (event.deltaY &lt; 0) &#123;//小于0，向上滚动\n          box.style.height = box.clientHeight + 20 + 'px'//画布高度+20\n          box.style.width = box.clientWidth + 30 + 'px'//画布宽度+20\n          charData.series[0].nodeGap += 2 //桑基图节点间距+2，默认为8\n        &#125; else &#123;\n          box.style.height = box.clientHeight - 20 + 'px'\n          box.style.width = box.clientWidth - 30 + 'px'//画布宽度+20\n          charData.series[0].nodeGap = charData.series[0].nodeGap &lt; 10 ? 8 : charData.series[0].nodeGap - 2\n        &#125;\n        //画布高度小于容器高度后，节点间距不再缩小\n        if (box.style.height.split(&quot;px&quot;)[0] - this.chartBox.style.maxHeight.split(&quot;px&quot;)[0] &lt;= 0) &#123;\n          charData.series[0].nodeGap = 8\n        &#125;\n        //chart.setOption(charData)\n        this.options = charData\n        //chart.resize()\n      &#125;\n    &#125;\n\n\n\n    let dragging = false\n    let position = null\n    let box = document.getElementsByClassName(&quot;boxaaaa&quot;)[0]\n    box.addEventListener('mousedown', function (e) &#123;\n      dragging = true\n      position = [e.clientX, e.clientY]\n    &#125;)\n    document.addEventListener('mousemove', function (e) &#123;\n      if (dragging === false)  return\n      const x = e.clientX\n      const y = e.clientY\n      const deltaX = x - position[0]\n      const deltaY = y - position[1]\n      const left = parseInt(box.style.left || 0)\n      const top = parseInt(box.style.top || 0)\n      box.style.left = left + deltaX + 'px'\n      box.style.top = top + deltaY + 'px'\n      position = [x, y]\n    &#125;)\n    document.addEventListener('mouseup', function (e) &#123;\n      dragging = false\n    &#125;)\n\n  &#125;,\n  destroyed() &#123;\n    window.onmousewheel = null\n  &#125;,\n  methods: &#123;\n    initChart()&#123;\n      this.options = &#123;\n        title: &#123;\n          text: 'Sankey Echarts Diagram'\n        &#125;,\n        tooltip: &#123;\n          trigger: 'item',\n          triggerOn: 'mousemove'\n        &#125;,\n        series: [\n          &#123;\n            type: 'sankey',\n            left: 10.0,\n            top: 50.0,\n            right: 200.0,\n            bottom: 25.0,\n            data: data.nodes,\n            links: data.links,\n            emphasis: &#123;\n              focus: 'adjacency'\n            &#125;,\n            lineStyle: &#123;\n              color: 'gradient',\n              curveness: 0.5\n            &#125;\n          &#125;\n        ]\n      &#125;\n    &#125;\n  &#125;,\n&#125;;\n&lt;/script&gt;\n&lt;style scoped lang=&quot;scss&quot;&gt;\n.sankey-echarts-zoom-demo&#123;\n  width: 900px;\n  height: 600px;\n  overflow: hidden;\n&#125;\n&lt;/style&gt;\n</code></pre>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string-property property\">\"nodes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Agricultural 'waste'\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bio-conversion\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Liquid\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Losses\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solid\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gas\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Biofuel imports\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Biomass imports\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Coal imports\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Coal\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Coal reserves\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"District heating\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Industry\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Heating and cooling - commercial\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Heating and cooling - homes\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Over generation / exports\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"H2 conversion\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Road transport\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Agriculture\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Rail transport\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Lighting &amp; appliances - commercial\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Lighting &amp; appliances - homes\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gas imports\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ngas\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gas reserves\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Thermal generation\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Geothermal\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"H2\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hydro\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"International shipping\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Domestic aviation\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"International aviation\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"National navigation\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Marine algae\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Nuclear\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Oil imports\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Oil\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Oil reserves\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Other waste\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Pumped heat\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solar PV\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solar Thermal\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solar\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Tidal\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"UK land based bioenergy\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Wave\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Wind\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token string-property property\">\"links\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Agricultural 'waste'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bio-conversion\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">124.729</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bio-conversion\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Liquid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.597</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bio-conversion\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Losses\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">26.862</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bio-conversion\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">280.322</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bio-conversion\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gas\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">81.144</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Biofuel imports\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Liquid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Biomass imports\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Coal imports\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Coal\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">11.606</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Coal reserves\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Coal\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">63.965</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Coal\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">75.571</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"District heating\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Industry\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10.639</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"District heating\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Heating and cooling - commercial\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">22.505</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"District heating\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Heating and cooling - homes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">46.184</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Over generation / exports\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">104.453</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Heating and cooling - homes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">113.726</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"H2 conversion\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">27.14</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Industry\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">342.165</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Road transport\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">37.797</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Agriculture\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4.412</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Heating and cooling - commercial\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">40.858</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Losses\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">56.691</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Rail transport\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">7.863</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Lighting &amp; appliances - commercial\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">90.008</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Lighting &amp; appliances - homes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">93.494</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gas imports\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ngas\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">40.719</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gas reserves\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ngas\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">82.233</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gas\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Heating and cooling - commercial\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.129</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gas\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Losses\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1.401</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gas\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Thermal generation\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">151.891</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gas\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Agriculture\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2.096</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gas\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Industry\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">48.58</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Geothermal\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">7.013</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"H2 conversion\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"H2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20.897</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"H2 conversion\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Losses\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">6.242</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"H2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Road transport\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20.897</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hydro\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">6.995</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Liquid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Industry\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">121.066</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Liquid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"International shipping\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">128.69</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Liquid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Road transport\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">135.835</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Liquid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Domestic aviation\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">14.458</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Liquid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"International aviation\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">206.267</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Liquid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Agriculture\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3.64</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Liquid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"National navigation\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">33.218</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Liquid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Rail transport\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4.413</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Marine algae\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bio-conversion\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4.375</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ngas\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gas\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">122.952</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Nuclear\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Thermal generation\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">839.978</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Oil imports\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Oil\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">504.287</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Oil reserves\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Oil\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">107.703</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Oil\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Liquid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">611.99</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Other waste\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">56.587</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Other waste\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bio-conversion\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">77.81</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Pumped heat\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Heating and cooling - homes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">193.026</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Pumped heat\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Heating and cooling - commercial\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">70.672</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solar PV\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">59.901</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solar Thermal\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Heating and cooling - homes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">19.263</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solar\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solar Thermal\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">19.263</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solar\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solar PV\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">59.901</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Agriculture\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.882</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Thermal generation\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">400.12</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Solid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Industry\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">46.477</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Thermal generation\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">525.531</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Thermal generation\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Losses\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">787.129</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Thermal generation\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"District heating\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">79.329</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Tidal\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">9.452</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"UK land based bioenergy\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bio-conversion\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">182.01</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Wave\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">19.013</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Wind\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Electricity grid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">289.366</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "echarts"
            ]
        },
        {
            "id": "http://jalen.site/echarts%20dataZoom%E5%8F%AA%E6%98%BE%E7%A4%BA%E7%AC%AC%E4%B8%80%E4%B8%AAseries/",
            "url": "http://jalen.site/echarts%20dataZoom%E5%8F%AA%E6%98%BE%E7%A4%BA%E7%AC%AC%E4%B8%80%E4%B8%AAseries/",
            "title": "echarts dataZoom只显示第一个series",
            "date_published": "2024-01-02T06:34:43.000Z",
            "content_html": "<p>详细参考 git issue： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9lY2hhcnRzL2lzc3Vlcy8xOTI1NSNldmVudC0xMDg0MDUwMzkyNA==\">https://github.com/apache/echarts/issues/19255#event-10840503924</span></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>option <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token string\">'Stacked Line'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">tooltip</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token literal-property property\">trigger</span><span class=\"token operator\">:</span> <span class=\"token string\">'axis'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token literal-property property\">legend</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Email'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Union Ads'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token literal-property property\">grid</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> <span class=\"token string\">'3%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token literal-property property\">right</span><span class=\"token operator\">:</span> <span class=\"token string\">'4%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token literal-property property\">bottom</span><span class=\"token operator\">:</span> <span class=\"token string\">'10%'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token literal-property property\">containLabel</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token literal-property property\">toolbox</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token literal-property property\">feature</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token literal-property property\">saveAsImage</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token literal-property property\">xAxis</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'category'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token literal-property property\">boundaryGap</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Mon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Tue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Wed'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Thu'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Fri'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Sun'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token literal-property property\">yAxis</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'value'</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token literal-property property\">dataZoom</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'slider'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token literal-property property\">showDataShadow</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'inside'</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token literal-property property\">series</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Email'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token literal-property property\">stack</span><span class=\"token operator\">:</span> <span class=\"token string\">'Total'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">134</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">230</span><span class=\"token punctuation\">,</span> <span class=\"token number\">210</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Union Ads'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token literal-property property\">stack</span><span class=\"token operator\">:</span> <span class=\"token string\">'Total'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">220</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182</span><span class=\"token punctuation\">,</span> <span class=\"token number\">191</span><span class=\"token punctuation\">,</span> <span class=\"token number\">134</span><span class=\"token punctuation\">,</span> <span class=\"token number\">290</span><span class=\"token punctuation\">,</span> <span class=\"token number\">230</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://jalen.site/goland%E8%BF%9C%E7%A8%8Bdebug/",
            "url": "http://jalen.site/goland%E8%BF%9C%E7%A8%8Bdebug/",
            "title": "goland远程debug",
            "date_published": "2024-01-02T06:34:43.000Z",
            "content_html": "<p>1.Install golang</p>\n<p>Because my local machine golang version is 1.20.6, so I will install the same version on Alma8 Linux</p>\n<blockquote>\n<p>mkdir -p /home/jalchu/golang<br />\nwget <span class=\"exturl\" data-url=\"aHR0cHM6Ly9nby5kZXYvZGwvZ28xLjIwLjYubGludXgtYW1kNjQudGFyLmd6\">https://go.dev/dl/go1.20.6.linux-amd64.tar.gz</span><br />\ntar -zxvf go1.20.6.linux-amd64.tar.gz<br />\nvi ~/.bashrc    (set environment like below)<br />\nsource ~/.bashrc<br />\ngo version<br />\ntouch hello.go  (a go test file)<br />\ngo run -x hello.go<br />\ngo build -x hello.go<br />\nGOTMPDIR=/home/jalchu go run -x hello.go  (will set GOTMPDIR to env)</p>\n</blockquote>\n<p>2.Install dlv</p>\n<blockquote>\n<p>git clone <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvLWRlbHZlL2RlbHZl\">https://github.com/go-delve/delve</span><br />\ncd delve<br />\ngo install <span class=\"exturl\" data-url=\"aHR0cDovL2dpdGh1Yi5jb20vZ28tZGVsdmUvZGVsdmUvY21kL2Rsdg==\">github.com/go-delve/delve/cmd/dlv</span><br />\ngo install <span class=\"exturl\" data-url=\"aHR0cDovL2dpdGh1Yi5jb20vZ28tZGVsdmUvZGVsdmUvY21kL2RsdkBsYXRlc3Q=\">github.com/go-delve/delve/cmd/dlv@latest</span>   (go version &gt; 1.16)<br />\necho $GOPATH<br />\nll /home/jalchu/golang/path/bin/dlv    (dlv command is under <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi>O</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo stretchy=\"false\">)</mo><mi>v</mi><mi>i</mi><mtext> </mtext><mi mathvariant=\"normal\">/</mi><mi mathvariant=\"normal\">.</mi><mi>b</mi><mi>a</mi><mi>s</mi><mi>h</mi><mi>r</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mi>e</mi><mi>x</mi><mi>p</mi><mi>o</mi><mi>r</mi><mi>t</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">GOPATH)\nvi ~/.bashrc  (export PATH=</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">i</span><span class=\"mspace nobreak\"> </span><span class=\"mord\">/</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span>PATH:/home/jalchu/golang/go/bin:/home/jalchu/golang/path/bin)</p>\n</blockquote>\n<p>3.Start debug</p>\n<blockquote>\n<p>git clone your code<br />\ngo build -gcflags &quot;all=-N -l&quot; /home/jalchu/gotest/goflow/cmd/netflow/netflow.go<br />\ndlv --listen=:2345 --headless=true --api-version=2 --accept-multiclient exec ./netflow<br />\ndlv debug cmd/netflow/netflow.go --headless --listen=:9900 --api-version=2    (same as above 2 commands)<br />\nservice iptables status<br />\niptables -L -n<br />\nvi /etc/sysconfig/iptables<br />\niptables -A INPUT -p tcp --dport 2345 -j ACCEPT<br />\niptables -A OUTPUT -p tcp --sport 2345 -j ACCEPT<br />\niptables -L -n | grep 2345<br />\nservice iptables stop<br />\ncode sync to linux server with GoLand Deployment<br />\ntelnet ip port to judge whether you can connect to the linux server port<br />\nset remote debug from GoLand<br />\nexport your env variables on linux server before you run the dlv, so that you can get the initial variable from your code</p>\n</blockquote>\n<p>Reference</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eC5ob3cyc2hvdXQuY29tL2hvdy10by1pbnN0YWxsLWdvLWxhbmd1YWdlLW9uLWFsbWFsaW51eC1vci1yb2NreS1saW51eC04LTkv\">https://linux.how2shout.com/how-to-install-go-language-on-almalinux-or-rocky-linux-8-9/</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbG1hbGludXgub3JnL2Jsb2cvYWxtYWxpbnV4LTg4LW5vdy1hdmFpbGFibGUv\">https://almalinux.org/blog/almalinux-88-now-available/</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ncm91cHMuZ29vZ2xlLmNvbS9nL2dvbGFuZy1udXRzL2MvNGJKZXo4TlBmWE0/cGxpPTE=\">https://groups.google.com/g/golang-nuts/c/4bJez8NPfXM?pli=1</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvLWRlbHZlL2RlbHZl\">https://github.com/go-delve/delve</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nb2xhbmdmb3JhbGwuY29tL2VuL3Bvc3QvZ28tZG9ja2VyLWRlbHZlLXJlbW90ZS1kZWJ1Zy5odG1s\">https://golangforall.com/en/post/go-docker-delve-remote-debug.html</span></p>\n</blockquote>\n<p>Issues:<br />\nLinux Alma8 go build(run) error：</p>\n<p>[root@iany1zces0012 golang]# go build hello.go<br />\ngo: error obtaining buildID for go tool compile: fork/exec /home/jalchu/golang/go/pkg/tool/linux_amd64/compile: operation not permitted</p>\n<p>Fix：</p>\n<ol>\n<li>vi /etc/fapolicyd/rules.d/80-allow-go.rules</li>\n</ol>\n<p>allow perm=execute all : ftype=application/x-executable trust=0 exe=/opt/golang/go/bin/go</p>\n<ol start=\"2\">\n<li>systemctl restart fapolicyd</li>\n</ol>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzMudmk=\">3.vi</span> ~/.bashrc</p>\n<p>export GOROOT=/home/jalchu/golang/go<br />\nexport GOPATH=/home/jalchu/golang/path<br />\nexport GOTMPDIR=/home/jalchu/golang/tmp<br />\nexport PATH=$PATH:/home/jalchu/golang/go/bin</p>\n<p>go run 默认会在 tmp 下执行 tmp 目录没有执行权限 需要指定 GOTMPDIR</p>\n<p>4.hello.go</p>\n<p>package main</p>\n<p>import &quot;fmt&quot;</p>\n<p>func main(){<br />\nfmt.Printf(&quot;Hello world&quot;)<br />\n}</p>\n<p>export GOROOT=/home/jalchu/golang/go<br />\nexport GOPATH=/home/jalchu/golang/path<br />\nexport GOTMPDIR=/home/jalchu/golang/tmp<br />\nexport PATH=$PATH:/home/jalchu/golang/go/bin:/home/jalchu/golang/path/bin</p>\n",
            "tags": []
        },
        {
            "id": "http://jalen.site/%E6%8E%A7%E5%88%B6ssh%E5%AE%A2%E6%88%B7%E7%AB%AFlogin%E6%95%B0%E9%87%8F/",
            "url": "http://jalen.site/%E6%8E%A7%E5%88%B6ssh%E5%AE%A2%E6%88%B7%E7%AB%AFlogin%E6%95%B0%E9%87%8F/",
            "title": "控制ssh客户端login数量",
            "date_published": "2024-01-02T06:34:43.000Z",
            "content_html": "<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vi</span> /etc/security/limits.conf</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>*                -       maxlogins       <span class=\"token number\">8</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://jalen.site/learn/frontent/vue-js/node%E7%89%88%E6%9C%AC%E5%88%87%E6%8D%A2/",
            "url": "http://jalen.site/learn/frontent/vue-js/node%E7%89%88%E6%9C%AC%E5%88%87%E6%8D%A2/",
            "title": "node版本切换",
            "date_published": "2023-12-22T07:03:36.000Z",
            "content_html": "<h1 id=\"需求\"><a class=\"anchor\" href=\"#需求\">#</a> 需求</h1>\n<p>项目中需要多个 node 版本时使用此方法做切换</p>\n<h1 id=\"方法\"><a class=\"anchor\" href=\"#方法\">#</a> 方法</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 使用 n</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> n</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ <span class=\"token function\">sudo</span> n <span class=\"token number\">16.14</span>.0</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">sudo</span> n <span class=\"token function\">ls</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>$ <span class=\"token function\">node</span> <span class=\"token parameter variable\">-v</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>$ <span class=\"token function\">npm</span> <span class=\"token parameter variable\">-v</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 使用 nvm</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>$ <span class=\"token function\">curl</span> -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>$ <span class=\"token builtin class-name\">source</span> ~/.nvm/nvm.sh</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>$ nvm <span class=\"token parameter variable\">--version</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>$ nvm <span class=\"token function\">install</span> <span class=\"token number\">18.18</span>.2</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>$ nvm use <span class=\"token number\">18.18</span>.2</pre></td></tr></table></figure>",
            "tags": [
                "学习",
                "前端知识学习",
                "VueJS",
                "vue"
            ]
        },
        {
            "id": "http://jalen.site/learn/frontent/vue-js/%E8%87%AA%E5%AE%9A%E4%B9%89vue%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E6%8F%90%E7%A4%BA%E6%B6%88%E6%81%AF/",
            "url": "http://jalen.site/learn/frontent/vue-js/%E8%87%AA%E5%AE%9A%E4%B9%89vue%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E6%8F%90%E7%A4%BA%E6%B6%88%E6%81%AF/",
            "title": "自定义vue表单验证提示消息",
            "date_published": "2023-09-26T07:03:36.000Z",
            "content_html": "<h1 id=\"需求\"><a class=\"anchor\" href=\"#需求\">#</a> 需求</h1>\n<p>用户在表单中某个 input 框输入数据后，点击查询，这时访问后端 API，如果后端 API 没有返回数据，此时需要在 input 框下面显示红色的提示文字</p>\n<h1 id=\"通常表单验证写法\"><a class=\"anchor\" href=\"#通常表单验证写法\">#</a> 通常表单验证写法</h1>\n<pre><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;el-form\n        :rules=&quot;formRules&quot;\n        ref=&quot;form&quot;&gt;\n      &lt;el-form-item prop=&quot;xxx&quot;&gt;\n        &lt;el-input\n            v-model.trim=&quot;value&quot;\n            clearable&gt;\n        &lt;/el-input&gt;\n      &lt;/el-form-item&gt;\n    &lt;/el-form&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n  export default &#123;\n    methods: &#123;\n      test() &#123;\n        this.$refs['form'].fields[1].validateState = 'success';\n        this.$refs['form'].fields[1].validateMessage = '';\n      &#125;\n    &#125;\n  &#125;\n&lt;/script&gt;\n</code></pre>\n",
            "tags": [
                "学习",
                "前端知识学习",
                "VueJS",
                "vue"
            ]
        },
        {
            "id": "http://jalen.site/learn/go/gin/kafka%20sarama%20producer%E4%BC%98%E5%8C%96/",
            "url": "http://jalen.site/learn/go/gin/kafka%20sarama%20producer%E4%BC%98%E5%8C%96/",
            "title": "kafka sarama producer优化",
            "date_published": "2023-09-06T01:28:47.000Z",
            "content_html": "<h2 id=\"background\"><a class=\"anchor\" href=\"#background\">#</a> background</h2>\n<p>使用 goflow (<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Nsb3VkZmxhcmUvZ29mbG93\">https://github.com/cloudflare/goflow</span>) 获取各个设备 udp package， 基于 snmp 协议 (netflow), goflow 解析 json 后发送到 kafka 某个 topic, 下游消费</p>\n<p>压测:</p>\n<ul>\n<li>cpu (producer/consumer)</li>\n<li>memory (producer/consumer)</li>\n<li>kafka lag ()</li>\n<li>pps (netstat -su)</li>\n</ul>\n<p>压测峰值 (iptraf-ng)：</p>\n<ul>\n<li>2000 pps</li>\n<li>200M/s</li>\n</ul>\n<p>topic</p>\n<ul>\n<li>PartitionCount： 64</li>\n</ul>\n<p>producer：</p>\n<ul>\n<li>vm: cpu = 8 cores</li>\n<li>vm: mem = 32 G</li>\n<li>go app: channel = 8</li>\n<li>go app: worker = 300</li>\n</ul>\n<p>consumer：</p>\n<ul>\n<li>vm: cpu = 8 cores</li>\n<li>vm: mem = 32 G</li>\n<li>java thread = 64 （-&gt; map one partition）</li>\n</ul>\n<p>use samplicate in docker to distribute UDP package</p>\n<p>ref to: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0lCTS9zYXJhbWEvaXNzdWVzLzI2NDk=\">https://github.com/IBM/sarama/issues/2649</span></p>\n<p>sarama version: <span class=\"exturl\" data-url=\"aHR0cDovL2dpdGh1Yi5jb20vU2hvcGlmeS9zYXJhbWE=\">github.com/Shopify/sarama</span> v1.29.1</p>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> solution</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kafkaConfig<span class=\"token punctuation\">.</span>Producer<span class=\"token punctuation\">.</span>RequiredAcks <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tkafkaConfig<span class=\"token punctuation\">.</span>Producer<span class=\"token punctuation\">.</span>Retry<span class=\"token punctuation\">.</span>Max <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tkafkaConfig<span class=\"token punctuation\">.</span>Producer<span class=\"token punctuation\">.</span>Compression <span class=\"token operator\">=</span> sarama<span class=\"token punctuation\">.</span>CompressionLZ4   <span class=\"token comment\">//core</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tkafkaConfig<span class=\"token punctuation\">.</span>Producer<span class=\"token punctuation\">.</span>Flush<span class=\"token punctuation\">.</span>Messages <span class=\"token operator\">=</span> <span class=\"token number\">5044288</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tkafkaConfig<span class=\"token punctuation\">.</span>Producer<span class=\"token punctuation\">.</span>Flush<span class=\"token punctuation\">.</span>Frequency <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Duration</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Millisecond</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tkafkaConfig<span class=\"token punctuation\">.</span>Producer<span class=\"token punctuation\">.</span>Flush<span class=\"token punctuation\">.</span>Bytes <span class=\"token operator\">=</span> <span class=\"token number\">33554432</span></pre></td></tr></table></figure>",
            "tags": [
                "学习",
                "Go语言学习",
                "Gin框架",
                "go",
                "gin"
            ]
        },
        {
            "id": "http://jalen.site/introduce/",
            "url": "http://jalen.site/introduce/",
            "title": "欢迎访问",
            "date_published": "2023-05-30T12:45:48.000Z",
            "content_html": "<p>你好，我是 Jalen！</p>\n<p>很高兴能够在这里遇见你！希望你的每一天都是<span class=\"exturl\" data-url=\"aHR0cDovL2Zsb3dlci5qYWxlbi5zaXRlLw==\">开心</span>～</p>\n<p>假如再也见不到你，祝你早安，午安，晚安！😘</p>\n<p class=\"bulr\">!! Good Morning, and in case I don't see you, good afternoon, good evening, and good night!！！</p>\n<p><iframe src=\"//player.bilibili.com/player.html?bvid=BV1nx411373j\" width=\"800\" height=\"500\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></p>\n<p>来源：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW54NDExMzczai8/dmRfc291cmNlPTczYmQyYmYyZDEwYjhmMTkyODk5MTM4N2UyYWYyOWYy\">Blibli</span></p>\n",
            "tags": []
        },
        {
            "id": "http://jalen.site/learn/python/flask/python%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%8Ek8s/",
            "url": "http://jalen.site/learn/python/flask/python%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%8Ek8s/",
            "title": "Python flask微服务与k8s",
            "date_published": "2023-04-22T08:12:18.000Z",
            "content_html": "<h1 id=\"python-microservices-demo\"><a class=\"anchor\" href=\"#python-microservices-demo\">#</a> Python Microservices Demo</h1>\n<blockquote>\n<p>learn from: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVNHNHkxRzd1Tj9wPTE=\">https://www.bilibili.com/video/BV1SG4y1G7uN?p=1</span>  thanks author, and for the demo, the function is mainly focus on converting video to audio, then for user download.</p>\n</blockquote>\n<h2 id=\"architecture\"><a class=\"anchor\" href=\"#architecture\">#</a> Architecture</h2>\n<p><img data-src=\"../../../../images/micropythonk8s05.jpg\" alt=\"img_2.png\" /></p>\n<h2 id=\"os\"><a class=\"anchor\" href=\"#os\">#</a> OS</h2>\n<ul>\n<li>Windows11</li>\n</ul>\n<h2 id=\"language-files-format\"><a class=\"anchor\" href=\"#language-files-format\">#</a> Language &amp;&amp; Files format</h2>\n<ul>\n<li>Python3.10.x</li>\n<li>Yaml (for k8s)</li>\n<li>Dockerfile (build image)</li>\n<li>txt (python flask requirements.txt)</li>\n</ul>\n<h2 id=\"ide-tools\"><a class=\"anchor\" href=\"#ide-tools\">#</a> IDE &amp;&amp; Tools</h2>\n<ul>\n<li>Docker Desktop (required)</li>\n<li>Pycharm (optional, coding)</li>\n</ul>\n<h2 id=\"docker-images\"><a class=\"anchor\" href=\"#docker-images\">#</a> Docker Images</h2>\n<ul>\n<li>MySQL (mine is 8.0.x)</li>\n<li>Mongo (latest)</li>\n</ul>\n<h2 id=\"prepare\"><a class=\"anchor\" href=\"#prepare\">#</a> Prepare</h2>\n<ul>\n<li>Download kubectl from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvdGFza3MvdG9vbHMv\">https://kubernetes.io/docs/tasks/tools/</span>   (for me, I use binary package to install)</li>\n<li>Register an account from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=\">https://hub.docker.com/</span>, we will use it to push our build images</li>\n<li>Download minikube from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9taW5pa3ViZS5zaWdzLms4cy5pby9kb2NzL3N0YXJ0Lw==\">https://minikube.sigs.k8s.io/docs/start/</span> to install</li>\n<li>Install k9s command window from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RlcmFpbGVkL2s5cw==\">https://github.com/derailed/k9s</span></li>\n<li>Start docker desktop, start MySQL and Mongo images</li>\n</ul>\n<h2 id=\"for-auth-services\"><a class=\"anchor\" href=\"#for-auth-services\">#</a> For auth services</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>D:<span class=\"token punctuation\">\\</span>pycharm<span class=\"token punctuation\">\\</span>workspace<span class=\"token punctuation\">\\</span>system_design<span class=\"token punctuation\">\\</span>venv<span class=\"token punctuation\">\\</span>Scripts<span class=\"token punctuation\">\\</span>python.exe <span class=\"token parameter variable\">-m</span> pip <span class=\"token function\">install</span> <span class=\"token parameter variable\">--upgrade</span> pip</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pip <span class=\"token function\">install</span> pyjwt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pip <span class=\"token function\">install</span> flask_mysqldb</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pip <span class=\"token function\">install</span> flask</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pip3 freeze <span class=\"token operator\">></span> requirements.txt</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">docker</span> build <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">docker</span> tag 461161b3c7e3daf928f94fa025e04884fa75c72d1a0669da5cf98edcc5dce1ae chumingcheng/auth:latest</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">docker</span> images</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">docker</span> push chumingcheng/auth:latest</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">docker</span> pull chumingcheng/auth:latest</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>kubectl apply <span class=\"token parameter variable\">-f</span> ./</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>k9s</pre></td></tr></table></figure><h2 id=\"edit-hosts-file\"><a class=\"anchor\" href=\"#edit-hosts-file\">#</a> Edit hosts file</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># hosts file add(for k8s tunnel)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">127.0</span>.0.1 mp3converter.com</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span>.0.1 rabbitmq-manager.com</pre></td></tr></table></figure><h2 id=\"for-rabbitmq-service\"><a class=\"anchor\" href=\"#for-rabbitmq-service\">#</a> For rabbitmq service</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kubectl apply <span class=\"token parameter variable\">-f</span> ./</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>k9s</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>kubectl describe pod rabbitmq-0</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>kubectl describe pvc</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>kubectl delete <span class=\"token parameter variable\">-f</span> ./</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>kubectl apply <span class=\"token parameter variable\">-f</span> ./</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>rabbitmq-manager.com</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>minikube tunnel</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># close vpn and access rabbitmq-manager.com in browser (vpn will cause trouble)</span></pre></td></tr></table></figure><h2 id=\"for-gateway-service\"><a class=\"anchor\" href=\"#for-gateway-service\">#</a> For gateway service</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> pika</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pip freeze <span class=\"token operator\">></span> requirements.txt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">docker</span> build <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">docker</span> tag dc0763aca5dc102994eb25cad2796ba017939ad4ee5759c5443877cf1f6e552d chumingcheng/gateway:latest</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">docker</span> push chumingcheng/gateway:latest </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>minikube addons list</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#edit k8s yaml</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>minikube addons <span class=\"token builtin class-name\">enable</span> ingress</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>minikube tunnel</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>kubectl apply <span class=\"token parameter variable\">-f</span> ./</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>k9s</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>kubectl scale deployment <span class=\"token parameter variable\">--replicas</span><span class=\"token operator\">=</span><span class=\"token number\">0</span> gateway</pre></td></tr></table></figure><h2 id=\"for-converter-service\"><a class=\"anchor\" href=\"#for-converter-service\">#</a> For converter service</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python3 <span class=\"token parameter variable\">-m</span> venv venv</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">source</span> ./venv/bin/activate</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">env</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> ENV</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">cat</span> consumer.py <span class=\"token operator\">|</span><span class=\"token function\">head</span> <span class=\"token parameter variable\">-n</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pip <span class=\"token function\">install</span> pika, pymongo</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>pip <span class=\"token function\">install</span> moviepy</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>pip <span class=\"token function\">install</span> jedi pylint</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>pip freeze <span class=\"token operator\">></span> requirements.txt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">docker</span> build <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">docker</span> tag b590d490e3de34f4c080af6f07ee40655cdc1c2f4d34af352c0282fd2d2ee36a chumingcheng/converter:latest</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">docker</span> push chumingcheng/converter:latest</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>kubectl apply <span class=\"token parameter variable\">-f</span> ./</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>kubectl logs <span class=\"token parameter variable\">-f</span> converter-66f9d75b49-4cbcb</pre></td></tr></table></figure><h2 id=\"test-upload-service\"><a class=\"anchor\" href=\"#test-upload-service\">#</a> Test upload service</h2>\n<p>There are some troubles here, to fix and record below:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-X</span> POST http://mp3converter.com/login <span class=\"token parameter variable\">-u</span> georgio@email.com:Admin123</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>kubectl get pods</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>error: </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  TypeError: <span class=\"token string\">'str'</span> object cannot be interpreted as an integer</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  cur <span class=\"token operator\">=</span> mysql.connection.cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-X</span> POST http://127.0.0.1:5000/login <span class=\"token parameter variable\">-u</span> georgio@email.com:Admin123</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>server.config<span class=\"token punctuation\">[</span><span class=\"token string\">\"MYSQL_PORT\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> int<span class=\"token punctuation\">(</span>os.environ.get<span class=\"token punctuation\">(</span><span class=\"token string\">\"MYSQL_PORT\"</span><span class=\"token punctuation\">))</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>Lenovo<span class=\"token operator\">></span>curl <span class=\"token parameter variable\">-X</span> POST http://mp3converter.com/login <span class=\"token parameter variable\">-u</span> georgio@email.com:Admin123</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Imdlb3JnaW9AZW1haWwuY29tIiwiZXhwIjoxNjgyMjQ0MjY5LCJpYXQiOjE2ODIxNTc4NjksImFkbWluIjp0cnVlfQ.QFBDMEIQa9YzizNcUBRMoDBzvqmm5Xxa1kr0qv0F5qU</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-X</span> POST <span class=\"token parameter variable\">-F</span> <span class=\"token string\">'file=@./test.mp4'</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Imdlb3JnaW9AZW1haWwuY29tIiwiZXhwIjoxNjgyMjQ0MjY5LCJpYXQiOjE2ODIxNTc4NjksImFkbWluIjp0cnVlfQ.QFBDMEIQa9YzizNcUBRMoDBzvqmm5Xxa1kr0qv0F5qU'</span> http://mp3converter.com/upload</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>Invoke-WebRequest <span class=\"token builtin class-name\">:</span> 无法绑定参数“Headers”。无法将“System.String”类型的“Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Imdlb3JnaW9AZW1haWwuY29tIiwiZXh      </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>wIjoxNjgyMjQ0MjY5LCJpYXQiOjE2ODIxNTc4NjksImFkbWluIjp0cnVlfQ.QFBDMEIQa9YzizNcUBRMoDBzvqmm5Xxa1kr0qv0F5qU”值转换为“System.Collections.IDictionary”类型。</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>所在位置 行:1 字符: <span class=\"token number\">39</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>+ <span class=\"token punctuation\">..</span>. est.mp4<span class=\"token string\">' -H '</span>Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC <span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    + CategoryInfo          <span class=\"token builtin class-name\">:</span> InvalidArgument: <span class=\"token punctuation\">(</span>:<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>Invoke-WebRequest<span class=\"token punctuation\">]</span>，ParameterBindingException</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    + FullyQualifiedErrorId <span class=\"token builtin class-name\">:</span> CannotConvertArgumentNoMessage,Microsoft.PowerShell.Commands.InvokeWebRequestCommand</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>kubectl scale deployment <span class=\"token parameter variable\">--replicas</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> gateway</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>kubectl scale deployment <span class=\"token parameter variable\">--replicas</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> converter auth</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>kubectl get pods</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>kubectl logs <span class=\"token parameter variable\">-f</span> gateway-bb8b5b499-9w67p</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>kubectl get pods</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>kubectl logs <span class=\"token parameter variable\">-f</span> gateway-bb8b5b499-9w67p</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>kubectl get pods</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>kubectl logs <span class=\"token parameter variable\">-f</span> converter-66f9d75b49-d6pfr</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>windows powershell</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>Get-Help Invoke-WebRequest</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token function\">add</span> some logs:</pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token function\">import</span> logging</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>logging.basicConfig<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span>logging.INFO, <span class=\"token assign-left variable\">format</span><span class=\"token operator\">=</span><span class=\"token string\">\"%(asctime)s %(filename)s:%(lineno)d:%(levelname)s:%(message)s\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>logger <span class=\"token operator\">=</span> logging.getLogger<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token function\">docker</span> pull mongo  <span class=\"token operator\">&amp;&amp;</span> start</pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token number\">2023</span>-04-22 <span class=\"token number\">11</span>:44:22,246 util.py:33:INFO:Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>:</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  File <span class=\"token string\">\"/app/storage/util.py\"</span>, line <span class=\"token number\">23</span>, <span class=\"token keyword\">in</span> upload</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    channel.basic_publish<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  File <span class=\"token string\">\"/usr/local/lib/python3.10/site-packages/pika/adapters/blocking_connection.py\"</span>, line <span class=\"token number\">2259</span>, <span class=\"token keyword\">in</span> basic_publish</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    self._impl.basic_publish<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  File <span class=\"token string\">\"/usr/local/lib/python3.10/site-packages/pika/channel.py\"</span>, line <span class=\"token number\">423</span>, <span class=\"token keyword\">in</span> basic_publish</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    self._raise_if_not_open<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  File <span class=\"token string\">\"/usr/local/lib/python3.10/site-packages/pika/channel.py\"</span>, line <span class=\"token number\">1403</span>, <span class=\"token keyword\">in</span> _raise_if_not_open</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    raise exceptions.ChannelWrongStateError<span class=\"token punctuation\">(</span><span class=\"token string\">'Channel is closed.'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>pika.exceptions.ChannelWrongStateError: Channel is closed.</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>gateway: connection <span class=\"token operator\">=</span> pika.BlockingConnection<span class=\"token punctuation\">(</span>pika.ConnectionParameters<span class=\"token punctuation\">(</span><span class=\"token string\">\"rabbitmq\"</span>, <span class=\"token assign-left variable\">heartbeat</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">))</span></pre></td></tr></table></figure><h2 id=\"test-success-then-check-mongo\"><a class=\"anchor\" href=\"#test-success-then-check-mongo\">#</a> Test success then check mongo</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># connect local mongodb from pycharm</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>show databases</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>use mp3s</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>show collections</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>db.fs.files.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>db.fs.files.find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"_id\"</span>:ObjectId<span class=\"token punctuation\">(</span><span class=\"token string\">\"6443d2ca6e6dbcbca60dc3b4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># below command can export mp3 files from mongodb, according to GridFS</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># I use docker desktop in windows, I didn't find the mongofiles.exe executable file outside docker, I should mount the volume first but I forgot, so I didn't test it from windows</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mongofiles <span class=\"token parameter variable\">--db</span><span class=\"token operator\">=</span>mp3s get_id <span class=\"token parameter variable\">--local</span><span class=\"token operator\">=</span>test.mp3 <span class=\"token string\">'&#123;\"$oid\":\"6443d2ca6e6dbcbca60dc3b4\"&#125;'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># I just test it from docker internal</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>./mongofiles  <span class=\"token parameter variable\">--db</span><span class=\"token operator\">=</span>mp3s get_id <span class=\"token parameter variable\">--local</span><span class=\"token operator\">=</span>test.mp3 <span class=\"token string\">'&#123;\"$oid\":\"6443d2ca6e6dbcbca60dc3b4\"&#125;'</span></pre></td></tr></table></figure><h2 id=\"for-gateway-download-interface\"><a class=\"anchor\" href=\"#for-gateway-download-interface\">#</a> For gateway download interface</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># write download interface code and then execute below commands</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> build <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">docker</span> tag 46a12c0dae73bc34cf5bd54c63f29feaaf68324a927bd6c0ea03a5dc44337818 chumingcheng/gateway:latest</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">docker</span> push chumingcheng/gateway:latest</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>kubectl delete <span class=\"token parameter variable\">-f</span> .<span class=\"token punctuation\">\\</span>manifests<span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>kubectl apply <span class=\"token parameter variable\">-f</span> .<span class=\"token punctuation\">\\</span>manifests<span class=\"token punctuation\">\\</span></pre></td></tr></table></figure><h2 id=\"for-notification-service\"><a class=\"anchor\" href=\"#for-notification-service\">#</a> For notification service</h2>\n<ul>\n<li>copy Dockerfile from gateway and do some small modifications</li>\n<li>copy manifests from converter and do some small modifications</li>\n</ul>\n<h2 id=\"usage-shortcut\"><a class=\"anchor\" href=\"#usage-shortcut\">#</a> Usage shortcut</h2>\n<p><img data-src=\"../../../../images/micropythonk8s01.png\" alt=\"get_token\" /></p>\n<p><img data-src=\"../../../../images/micropythonk8s02.png\" alt=\"img_1.png\" /></p>\n<p><img data-src=\"../../../../images/micropythonk8s04.png\" alt=\"img_3.png\" /></p>\n<p><img data-src=\"../../../../images/micropythonk8s03.png\" alt=\"img_2.png\" /></p>\n<h2 id=\"github-repo\"><a class=\"anchor\" href=\"#github-repo\">#</a> Github Repo</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NpbmNlcmVseVVuaXF1ZS9weXRob24tbWljcm9zZXJ2aWNlcy1rOHMtZGVtbw==\">https://github.com/SincerelyUnique/python-microservices-k8s-demo</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NpbmNlcmVseVVuaXF1ZS9weXRob24tbWljcm9zZXJ2aWNlcy1rOHMtZGVtby5naXQ=\">https://github.com/SincerelyUnique/python-microservices-k8s-demo.git</span></p>\n",
            "tags": [
                "学习",
                "Python语言学习",
                "Flask",
                "flask",
                "k8s",
                "microservice"
            ]
        },
        {
            "id": "http://jalen.site/learn/java/java-basic/%E7%AE%80%E5%8D%95%E5%A4%84%E7%90%86Java%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E5%92%8COOM/",
            "url": "http://jalen.site/learn/java/java-basic/%E7%AE%80%E5%8D%95%E5%A4%84%E7%90%86Java%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E5%92%8COOM/",
            "title": "简单处理Java内存泄漏与OOM",
            "date_published": "2023-03-24T08:35:40.000Z",
            "content_html": "<blockquote>\n<p>背景：前端访问某个接口报 500，Cannot allocate new IntPointer (1): totalBytes = 0, physicalBytes = 7775M，但是访问其他的一些接口正常。</p>\n</blockquote>\n<h2 id=\"查看服务器日志\"><a class=\"anchor\" href=\"#查看服务器日志\">#</a> 查看服务器日志</h2>\n<p>服务器上有很多内存泄漏的 <code>警告</code> 日志和 <code>严重</code> 日志，很多。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker logs -f 1d75d7d2abcb | grep Exception</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">23</span>-Mar-2023 <span class=\"token number\">13</span>:12:50.636 警告 <span class=\"token punctuation\">[</span>Catalina-utility-1<span class=\"token punctuation\">]</span> org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads Web应用程序<span class=\"token punctuation\">[</span>xxx<span class=\"token punctuation\">]</span>似乎启动了一个名为<span class=\"token punctuation\">[</span>client_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>generic<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>T<span class=\"token comment\">#3]] 的线程，但未能停止它。这很可能会造成内存泄漏。线程的堆栈跟踪：[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> sun.misc.Unsafe.park<span class=\"token punctuation\">(</span>Native Method<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> java.util.concurrent.locks.LockSupport.park<span class=\"token punctuation\">(</span>LockSupport.java:175<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> java.util.concurrent.LinkedTransferQueue.awaitMatch<span class=\"token punctuation\">(</span>LinkedTransferQueue.java:737<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> java.util.concurrent.LinkedTransferQueue.xfer<span class=\"token punctuation\">(</span>LinkedTransferQueue.java:647<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> java.util.concurrent.LinkedTransferQueue.take<span class=\"token punctuation\">(</span>LinkedTransferQueue.java:1269<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> java.util.concurrent.ThreadPoolExecutor.getTask<span class=\"token punctuation\">(</span>ThreadPoolExecutor.java:1074<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> java.util.concurrent.ThreadPoolExecutor.runWorker<span class=\"token punctuation\">(</span>ThreadPoolExecutor.java:1134<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> java.util.concurrent.ThreadPoolExecutor<span class=\"token variable\">$Worker</span>.run<span class=\"token punctuation\">(</span>ThreadPoolExecutor.java:624<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> java.lang.Thread.run<span class=\"token punctuation\">(</span>Thread.java:748<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">23</span>-Mar-2023 <span class=\"token number\">13</span>:12:50.640 警告 <span class=\"token punctuation\">[</span>Catalina-utility-1<span class=\"token punctuation\">]</span> org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads Web应用程序<span class=\"token punctuation\">[</span>xxx<span class=\"token punctuation\">]</span>似乎启动了一个名为<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>_client_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>generic<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>T<span class=\"token comment\">#4]] 的线程，但未能停止它。这很可能会造成内存泄漏。线程的堆栈跟踪：[</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> sun.misc.Unsafe.park<span class=\"token punctuation\">(</span>Native Method<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> java.util.concurrent.locks.LockSupport.park<span class=\"token punctuation\">(</span>LockSupport.java:175<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> java.util.concurrent.LinkedTransferQueue.awaitMatch<span class=\"token punctuation\">(</span>LinkedTransferQueue.java:737<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> java.util.concurrent.LinkedTransferQueue.xfer<span class=\"token punctuation\">(</span>LinkedTransferQueue.java:647<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> java.util.concurrent.LinkedTransferQueue.take<span class=\"token punctuation\">(</span>LinkedTransferQueue.java:1269<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> java.util.concurrent.ThreadPoolExecutor.getTask<span class=\"token punctuation\">(</span>ThreadPoolExecutor.java:1074<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> java.util.concurrent.ThreadPoolExecutor.runWorker<span class=\"token punctuation\">(</span>ThreadPoolExecutor.java:1134<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> java.util.concurrent.ThreadPoolExecutor<span class=\"token variable\">$Worker</span>.run<span class=\"token punctuation\">(</span>ThreadPoolExecutor.java:624<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> java.lang.Thread.run<span class=\"token punctuation\">(</span>Thread.java:748<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">23</span>-Mar-2023 <span class=\"token number\">13</span>:12:50.650 严重 <span class=\"token punctuation\">[</span>Catalina-utility-1<span class=\"token punctuation\">]</span> org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks web应用程序<span class=\"token punctuation\">[</span>xxx<span class=\"token punctuation\">]</span>创建了一个Thre型为<span class=\"token punctuation\">[</span>java.lang.ThreadLocal<span class=\"token punctuation\">]</span>（值为<span class=\"token punctuation\">[</span>java.lang.ThreadLocal@36b9c3a3<span class=\"token punctuation\">]</span>），值类型为<span class=\"token punctuation\">[</span>io.netty.util.internal.InternalThreadLocalMap<span class=\"token punctuation\">]</span>（值为<span class=\"token punctuation\">[</span>io.netty.util.internal.InternalThreadLocalMap@web应用程序时未能将其删除。线程将随着时间的推移而更新，以尝试避免可能的内存泄漏</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token number\">23</span>-Mar-2023 <span class=\"token number\">13</span>:12:50.650 严重 <span class=\"token punctuation\">[</span>Catalina-utility-1<span class=\"token punctuation\">]</span> org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks web应用程序<span class=\"token punctuation\">[</span>xxx<span class=\"token punctuation\">]</span>创建了一个Threocal，其键类型为<span class=\"token punctuation\">[</span>java.lang.ThreadLocal<span class=\"token punctuation\">]</span>（值为<span class=\"token punctuation\">[</span>java.lang.ThreadLocal@36b9c3a3<span class=\"token punctuation\">]</span>），值类型为<span class=\"token punctuation\">[</span>io.netty.util.internal.InternalThreadLocalMap<span class=\"token punctuation\">]</span>（值为<span class=\"token punctuation\">[</span>io.netty.util.internal.InternalThr03），但在停止web应用程序时未能将其删除。线程将随着时间的推移而更新，以尝试避免可能的内存泄漏</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token number\">23</span>-Mar-2023 <span class=\"token number\">13</span>:12:50.651 严重 <span class=\"token punctuation\">[</span>Catalina-utility-1<span class=\"token punctuation\">]</span> org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks web应用程序<span class=\"token punctuation\">[</span>xxx<span class=\"token punctuation\">]</span>创建了一个Thre型为<span class=\"token punctuation\">[</span>java.lang.ThreadLocal<span class=\"token punctuation\">]</span>（值为<span class=\"token punctuation\">[</span>java.lang.ThreadLocal@36b9c3a3<span class=\"token punctuation\">]</span>），值类型为<span class=\"token punctuation\">[</span>io.netty.util.internal.InternalThreadLocalMap<span class=\"token punctuation\">]</span>（值为<span class=\"token punctuation\">[</span>io.netty.util.internal.InternalThreadLocalMap@web应用程序时未能将其删除。线程将随着时间的推移而更新，以尝试避免可能的内存泄漏</pre></td></tr></table></figure><h2 id=\"查看linux服务器内存使用\"><a class=\"anchor\" href=\"#查看linux服务器内存使用\">#</a> 查看 Linux 服务器内存使用</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 检查下内存</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># free -h</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>              total        used        <span class=\"token function\">free</span>      shared  buff/cache   available</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Mem:            31G         15G        <span class=\"token number\">7</span>.4G         35M        <span class=\"token number\">8</span>.0G         14G</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Swap:          <span class=\"token number\">2</span>.0G          0B        <span class=\"token number\">2</span>.0G</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># top 看下实时内存使用情况，可以看到 total=32778416，free=7819664，可见 vm 内存够用，同时能够在 COMMAND 列锁定该 java 进程 pid 为 30164</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># top</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">top</span> - 09:15:10 up <span class=\"token number\">21</span> days, <span class=\"token number\">22</span>:59,  <span class=\"token number\">1</span> user,  load average: <span class=\"token number\">0.16</span>, <span class=\"token number\">0.23</span>, <span class=\"token number\">0.21</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Tasks: <span class=\"token number\">303</span> total,   <span class=\"token number\">1</span> running, <span class=\"token number\">302</span> sleeping,   <span class=\"token number\">0</span> stopped,   <span class=\"token number\">0</span> zombie</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>%Cpu<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>:  <span class=\"token number\">0.5</span> us,  <span class=\"token number\">3.4</span> sy,  <span class=\"token number\">0.0</span> ni, <span class=\"token number\">96.1</span> id,  <span class=\"token number\">0.0</span> wa,  <span class=\"token number\">0.0</span> hi,  <span class=\"token number\">0.0</span> si,  <span class=\"token number\">0.0</span> st</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>KiB Mem <span class=\"token builtin class-name\">:</span> <span class=\"token number\">32778416</span> total,  <span class=\"token number\">7825416</span> free, <span class=\"token number\">16587464</span> used,  <span class=\"token number\">8365536</span> buff/cache</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>KiB Swap:  <span class=\"token number\">2097148</span> total,  <span class=\"token number\">2097148</span> free,        <span class=\"token number\">0</span> used. <span class=\"token number\">15711900</span> avail Mem </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  PID <span class=\"token environment constant\">USER</span>      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                                                                                                      </pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token number\">8984</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>  <span class=\"token number\">162232</span>   <span class=\"token number\">2340</span>   <span class=\"token number\">1528</span> R  <span class=\"token number\">22.6</span>  <span class=\"token number\">0.0</span>   <span class=\"token number\">0</span>:00.23 <span class=\"token function\">top</span>                                                                                                          </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token number\">991</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span> <span class=\"token number\">1044128</span>  <span class=\"token number\">12672</span>   <span class=\"token number\">7592</span> S   <span class=\"token number\">3.2</span>  <span class=\"token number\">0.0</span>   <span class=\"token number\">7</span>:57.36 NetworkManager                                                                                               </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">30164</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>   <span class=\"token number\">15</span>.4g   <span class=\"token number\">7</span>.6g  <span class=\"token number\">18000</span> S   <span class=\"token number\">3.2</span> <span class=\"token number\">24.3</span> <span class=\"token number\">540</span>:05.34 <span class=\"token function\">java</span>                                                                                                         </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token number\">1</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>  <span class=\"token number\">194156</span>   <span class=\"token number\">7272</span>   <span class=\"token number\">4172</span> S   <span class=\"token number\">0.0</span>  <span class=\"token number\">0.0</span>   <span class=\"token number\">3</span>:44.03 systemd                                                                                                      </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token number\">2</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>       <span class=\"token number\">0</span>      <span class=\"token number\">0</span>      <span class=\"token number\">0</span> S   <span class=\"token number\">0.0</span>  <span class=\"token number\">0.0</span>   <span class=\"token number\">0</span>:03.97 kthreadd</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看进程下线程状况，可以看到该 java 进程（或者说 jvm 进程）下有 363 个线程，每个线程使用内存 24.3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># top -Hp 30164</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">top</span> - 09:14:36 up <span class=\"token number\">21</span> days, <span class=\"token number\">22</span>:58,  <span class=\"token number\">1</span> user,  load average: <span class=\"token number\">0.16</span>, <span class=\"token number\">0.24</span>, <span class=\"token number\">0.21</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Threads: <span class=\"token number\">363</span> total,   <span class=\"token number\">0</span> running, <span class=\"token number\">363</span> sleeping,   <span class=\"token number\">0</span> stopped,   <span class=\"token number\">0</span> zombie</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>%Cpu<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>:  <span class=\"token number\">0.4</span> us,  <span class=\"token number\">0.4</span> sy,  <span class=\"token number\">0.0</span> ni, <span class=\"token number\">99.2</span> id,  <span class=\"token number\">0.0</span> wa,  <span class=\"token number\">0.0</span> hi,  <span class=\"token number\">0.0</span> si,  <span class=\"token number\">0.0</span> st</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>KiB Mem <span class=\"token builtin class-name\">:</span> <span class=\"token number\">32778416</span> total,  <span class=\"token number\">7824408</span> free, <span class=\"token number\">16588480</span> used,  <span class=\"token number\">8365528</span> buff/cache</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>KiB Swap:  <span class=\"token number\">2097148</span> total,  <span class=\"token number\">2097148</span> free,        <span class=\"token number\">0</span> used. <span class=\"token number\">15710884</span> avail Mem </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  PID <span class=\"token environment constant\">USER</span>      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND                                                                                                       </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">30276</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>   <span class=\"token number\">15</span>.4g   <span class=\"token number\">7</span>.6g  <span class=\"token number\">18000</span> S  <span class=\"token number\">0.3</span> <span class=\"token number\">24.3</span>  <span class=\"token number\">17</span>:44.52 <span class=\"token function\">java</span>                                                                                                          </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">30387</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>   <span class=\"token number\">15</span>.4g   <span class=\"token number\">7</span>.6g  <span class=\"token number\">18000</span> S  <span class=\"token number\">0.3</span> <span class=\"token number\">24.3</span>   <span class=\"token number\">1</span>:52.16 <span class=\"token function\">java</span>                                                                                                          </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">30389</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>   <span class=\"token number\">15</span>.4g   <span class=\"token number\">7</span>.6g  <span class=\"token number\">18000</span> S  <span class=\"token number\">0.3</span> <span class=\"token number\">24.3</span>   <span class=\"token number\">1</span>:51.18 <span class=\"token function\">java</span>                                                                                                          </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token number\">527</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>   <span class=\"token number\">15</span>.4g   <span class=\"token number\">7</span>.6g  <span class=\"token number\">18000</span> S  <span class=\"token number\">0.3</span> <span class=\"token number\">24.3</span>   <span class=\"token number\">2</span>:00.88 <span class=\"token function\">java</span>                                                                                                          </pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token number\">3481</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>   <span class=\"token number\">15</span>.4g   <span class=\"token number\">7</span>.6g  <span class=\"token number\">18000</span> S  <span class=\"token number\">0.3</span> <span class=\"token number\">24.3</span>   <span class=\"token number\">0</span>:54.77 <span class=\"token function\">java</span>                                                                                                          </pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token number\">3485</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>   <span class=\"token number\">15</span>.4g   <span class=\"token number\">7</span>.6g  <span class=\"token number\">18000</span> S  <span class=\"token number\">0.3</span> <span class=\"token number\">24.3</span>   <span class=\"token number\">2</span>:01.18 <span class=\"token function\">java</span>                                                                                                          </pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token number\">3498</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>   <span class=\"token number\">15</span>.4g   <span class=\"token number\">7</span>.6g  <span class=\"token number\">18000</span> S  <span class=\"token number\">0.3</span> <span class=\"token number\">24.3</span>   <span class=\"token number\">0</span>:48.24 <span class=\"token function\">java</span>                                                                                                          </pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token number\">4706</span> root      <span class=\"token number\">20</span>   <span class=\"token number\">0</span>   <span class=\"token number\">15</span>.4g   <span class=\"token number\">7</span>.6g  <span class=\"token number\">18000</span> S  <span class=\"token number\">0.3</span> <span class=\"token number\">24.3</span>   <span class=\"token number\">5</span>:01.12 <span class=\"token function\">java</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 也可查看当前进程下有多少线程</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /proc/30164/status | grep Threads</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Threads:        <span class=\"token number\">363</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看启动的容器，根据接口和名称锁定容器 id，如果无法锁定是哪个容器，inspect 下宿主机进程号，如果是 30164，就对上了，xxx 可以百度下，这里和 markdown 语法冲突，没有列出来</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker ps</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 参考：https://blog.csdn.net/m0_45406092/article/details/103671832</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker inspect -f 'xxx' 1d75d7d2abcb</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看该容器挂载点，通常会将容器内的一些目录进行挂载，方便我们直接在宿主机查看</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker inspect 1d75d7d2abcb|grep \"Mount\" -A 30</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token string\">\"Destination\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"/opt/tomcat/tomcat8/webapps\"</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入容器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># docker exec -it 1d75d7d2abcb /bin/bash</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 尝试看下容器内的 jdk，还好是 jdk，这样就可以使用 jps，jsat，jmap 一些命令了</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>root@1d75d7d2abcb:/<span class=\"token comment\"># java -version</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">java</span> version <span class=\"token string\">\"1.8.0_202\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Java<span class=\"token punctuation\">(</span>TM<span class=\"token punctuation\">)</span> SE Runtime Environment <span class=\"token punctuation\">(</span>build <span class=\"token number\">1.8</span>.0_202-b08<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Java HotSpot<span class=\"token punctuation\">(</span>TM<span class=\"token punctuation\">)</span> <span class=\"token number\">64</span>-Bit Server VM <span class=\"token punctuation\">(</span>build <span class=\"token number\">25.202</span>-b08, mixed mode<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># jps 看下 java 进程，定位到容器内进程 pid=1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>root@1d75d7d2abcb:/<span class=\"token comment\"># jps</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">1</span> Bootstrap</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">7959</span> Jps</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># jstat 看下该进程堆详细状况，可以看到新生代满了</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># NGCMN：新生代最小容量</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># NGCMX：新生代最大容量  1397760</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># NGC：当前新生代容量    1397760</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># S0C：第一个幸存区大小    25088</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># S1C：第二个幸存区的大小  23552</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># EC：伊甸园区的大小      1349120</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># OGCMN：老年代最小容量</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># OGCMX：老年代最大容量   2796544</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># OGC：当前老年代大小     2375680</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># OC: 当前老年代大小</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># MCMN: 最小元数据容量</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># MCMX：最大元数据容量</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># MC：当前元数据空间大小</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># CCSMN：最小压缩类空间大小</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># CCSMX：最大压缩类空间大小</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># CCSC：当前压缩类空间大小</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># YGC：年轻代 gc 次数   1624</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># FGC：老年代 gc 次数   820</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 这里抛出一个问题：为什么新生代使用 100%，老年代还有剩余，为何新生代对象不转移到老年代？按理说对象应该会直接进入老年代</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 这里可以看到新生代和老年代还是遵循 1:2 的比例，也就是虚拟机参数都是默认的</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># -XX:NewRatio=2   ：新生代和年老代的堆内存占用比例，例如 2 表示新生代占年老代的 1/2，占整个堆内存的 1/3</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># -XX:SurvivorRatio=8： Eden 与 Survivor 的占用比例。例如 8 表示，一个 survivor 区占用 1/8 的 Eden 内存，即 1/10 的新生代内存</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>root@1d75d7d2abcb:/<span class=\"token comment\"># jstat -gccapacity 1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> NGCMN    NGCMX     NGC     S0C   S1C       EC      OGCMN      OGCMX       OGC         OC       MCMN     MCMX      MC     CCSMN    CCSMX     CCSC    YGC    FGC </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token number\">174592.0</span> <span class=\"token number\">1397760.0</span> <span class=\"token number\">1397760.0</span> <span class=\"token number\">25088.0</span> <span class=\"token number\">23552.0</span> <span class=\"token number\">1349120.0</span>   <span class=\"token number\">349696.0</span>  <span class=\"token number\">2796544.0</span>  <span class=\"token number\">2375680.0</span>  <span class=\"token number\">2375680.0</span>      <span class=\"token number\">0.0</span> <span class=\"token number\">1751040.0</span> <span class=\"token number\">812632.0</span>      <span class=\"token number\">0.0</span> <span class=\"token number\">1048576.0</span> <span class=\"token number\">110208.0</span>   <span class=\"token number\">1624</span>   <span class=\"token number\">820</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 知道进程 pid 了，根据 pid 确定进程名，其实已经可以肯定是 tomcat 容器进程了，下面查询都指向了 tomcat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>root@1d75d7d2abcb:~<span class=\"token comment\"># top</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>root@1d75d7d2abcb:~<span class=\"token comment\"># ps -elf|grep java</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>root@1d75d7d2abcb:~<span class=\"token comment\"># ps -elf|grep tomcat</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>root@1d75d7d2abcb:~<span class=\"token comment\"># ps -ef|grep 1</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 使用 jmap dump 堆快照，看服务启动时间，我们这边服务启动了几天，生成了 1.6G 的快照</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>root@1d75d7d2abcb:~<span class=\"token comment\"># jmap -dump:file=dump.hprof 1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 把 dump 的文件移动到挂载点拷贝出来，或者使用 docker cp 命令拷贝出来，拿到本地</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 如果上面的快照不大，可以尝试使用这个网站分析：https://gceasy.io/ft-index.jsp</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 其实最好还是自己下载一个 JProfiler，安装下，然后将 dump 文件导入进去分析。JProfiler 也可以集成在 Intelligent Idea 里，查看动态运行的程序内存快照</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 下载 JProfiler，https://pan.baidu.com/s/1EJxkS2U3cmF8JHQlJJYILA</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 打开 JProfiler，heap walker，打开 dump 的快照</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 通过分析快照，发现 java 程序中使用的 ES 客户端工具频繁的做垃圾回收，回收过程中产生了很多大对象，并不是我们手写的程序本身造成的</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 我们使用的是 5.x 的 ES，版本很老了，而且由于短期无法升级 ES 客户端，所以选择提升 tomcat 容器运存（总感觉不太好）</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 查看 tomcat 运存，当前为 4G，调整后重启 docker 容器</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>root@1d75d7d2abcb:/usr/local/tomcat<span class=\"token comment\"># cat bin/catalina.sh |grep \"JAVA_OPT\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">JAVA_OPTS</span><span class=\"token operator\">=</span><span class=\"token string\">\"-Xms512m -Xmx4096m -XX:MaxPermSize=256m\"</span></pre></td></tr></table></figure><h2 id=\"其他猜测\"><a class=\"anchor\" href=\"#其他猜测\">#</a> 其他猜测</h2>\n<p>用户调用某个接口出现了内存溢出问题，但是调用其他接口正常，从某方面讲，可能这个接口也是有些问题的，我们从本地调整程序运行的堆参数，分个 100M 堆，新生代大致 33M，S0 和 S1 各 3.3M，即指定 - Xmx100m,-Xms100m，测试程序该接口，发现报 OOM 错，该接口返回数据量不大，但是执行过程中调用了 native 方法（我们有引入动态 dll 库，底层是大量的运算），而 native 方法是运行在虚拟机中，需要申请额外的堆内内存，而新生代又无法接受这么多内存的分配，所以 OOM，所以这也是一个原因</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>java.lang.OutOfMemoryError: Physical memory usage is too high: physicalBytes (196M) &gt; maxPhysicalBytes (188M)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tat org.bytedeco.javacpp.Pointer.deallocator (Pointer.java:700)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tat org.bytedeco.javacpp.Pointer.init (Pointer.java:126)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tat org.bytedeco.javacpp.IntPointer.allocateArray (Native Method)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tat org.bytedeco.javacpp.IntPointer.&lt;init&gt;(IntPointer.java:90)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t这里的栈信息就不显示了～</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tat sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tat sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tat sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tat java.lang.reflect.Method.invoke (Method.java:498)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke (InvocableHandlerMethod.java:190)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest (InvocableHandlerMethod.java:138)</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle (ServletInvocableHandlerMethod.java:106)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod (RequestMappingHandlerAdapter.java:888)</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal (RequestMappingHandlerAdapter.java:793)</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle (AbstractHandlerMethodAdapter.java:87)</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tat org.springframework.web.servlet.DispatcherServlet.doDispatch (DispatcherServlet.java:1040)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tat org.springframework.web.servlet.DispatcherServlet.doService (DispatcherServlet.java:943)</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tat org.springframework.web.servlet.FrameworkServlet.processRequest (FrameworkServlet.java:1006)</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tat org.springframework.web.servlet.FrameworkServlet.doPost (FrameworkServlet.java:909)</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tat javax.servlet.http.HttpServlet.service (HttpServlet.java:660)</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tat org.springframework.web.servlet.FrameworkServlet.service (FrameworkServlet.java:883)</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tat javax.servlet.http.HttpServlet.service (HttpServlet.java:741)</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter (ApplicationFilterChain.java:231)</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.doFilter (ApplicationFilterChain.java:166)</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tat org.apache.tomcat.websocket.server.WsFilter.doFilter (WsFilter.java:53)</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter (ApplicationFilterChain.java:193)</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.doFilter (ApplicationFilterChain.java:166)</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tat com.github.xiaoymin.swaggerbootstrapui.filter.SecurityBasicAuthFilter.doFilter (SecurityBasicAuthFilter.java:84)</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter (ApplicationFilterChain.java:193)</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.doFilter (ApplicationFilterChain.java:166)</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tat com.github.xiaoymin.swaggerbootstrapui.filter.ProductionSecurityFilter.doFilter (ProductionSecurityFilter.java:53)</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter (ApplicationFilterChain.java:193)</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.doFilter (ApplicationFilterChain.java:166)</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal (RequestContextFilter.java:100)</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tat org.springframework.web.filter.OncePerRequestFilter.doFilter (OncePerRequestFilter.java:119)</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter (ApplicationFilterChain.java:193)</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.doFilter (ApplicationFilterChain.java:166)</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\tat org.springframework.web.filter.FormContentFilter.doFilterInternal (FormContentFilter.java:93)</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tat org.springframework.web.filter.OncePerRequestFilter.doFilter (OncePerRequestFilter.java:119)</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter (ApplicationFilterChain.java:193)</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.doFilter (ApplicationFilterChain.java:166)</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal (CharacterEncodingFilter.java:201)</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tat org.springframework.web.filter.OncePerRequestFilter.doFilter (OncePerRequestFilter.java:119)</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter (ApplicationFilterChain.java:193)</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tat org.apache.catalina.core.ApplicationFilterChain.doFilter (ApplicationFilterChain.java:166)</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tat org.apache.catalina.core.StandardWrapperValve.invoke (StandardWrapperValve.java:202)</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tat org.apache.catalina.core.StandardContextValve.invoke (StandardContextValve.java:96)</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke (AuthenticatorBase.java:526)</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tat org.apache.catalina.core.StandardHostValve.invoke (StandardHostValve.java:139)</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\tat org.apache.catalina.valves.ErrorReportValve.invoke (ErrorReportValve.java:92)</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\tat org.apache.catalina.core.StandardEngineValve.invoke (StandardEngineValve.java:74)</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\tat org.apache.catalina.connector.CoyoteAdapter.service (CoyoteAdapter.java:343)</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tat org.apache.coyote.http11.Http11Processor.service (Http11Processor.java:408)</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\tat org.apache.coyote.AbstractProcessorLight.process (AbstractProcessorLight.java:66)</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process (AbstractProtocol.java:861)</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun (NioEndpoint.java:1579)</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\tat org.apache.tomcat.util.net.SocketProcessorBase.run (SocketProcessorBase.java:49)</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tat java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1149)</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\tat java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:624)</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run (TaskThread.java:61)</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tat java.lang.Thread.run (Thread.java:750)</pre></td></tr></table></figure><h2 id=\"办法\"><a class=\"anchor\" href=\"#办法\">#</a> 办法</h2>\n<p>调整 tomcat 运存</p>\n",
            "tags": [
                "学习",
                "Java语言学习",
                "Java",
                "oom"
            ]
        },
        {
            "id": "http://jalen.site/learn/algorithm/practise/%E4%BD%BF%E7%94%A8%E4%B8%80%E7%BB%84%E4%B8%8D%E5%8F%AF%E5%88%86%E5%89%B2%E7%9A%84%E6%95%B0%E5%AD%97%E6%8B%BC%E6%8E%A5%E4%B8%80%E4%B8%AA%E6%9C%80%E5%A4%A7%E6%95%B0/",
            "url": "http://jalen.site/learn/algorithm/practise/%E4%BD%BF%E7%94%A8%E4%B8%80%E7%BB%84%E4%B8%8D%E5%8F%AF%E5%88%86%E5%89%B2%E7%9A%84%E6%95%B0%E5%AD%97%E6%8B%BC%E6%8E%A5%E4%B8%80%E4%B8%AA%E6%9C%80%E5%A4%A7%E6%95%B0/",
            "title": "使用一组不可分割的数字拼接一个最大数",
            "date_published": "2023-02-07T07:45:11.000Z",
            "content_html": "<h1 id=\"二维数组中的查找\"><a class=\"anchor\" href=\"#二维数组中的查找\">#</a> 二维数组中的查找</h1>\n<blockquote>\n<p>题目描述：给定一个数组，里面全部是数字，每个数字不可分割，请拼接成一个最大的数字（以字符串形式展示），如 [4, 5, 21, 90]，拼接为 “905421”</p>\n</blockquote>\n<h2 id=\"方法\"><a class=\"anchor\" href=\"#方法\">#</a> 方法</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">compare_num</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    max_length <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>max_length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        x_bit <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        y_bit <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> i<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            x_bit <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> i<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            y_bit <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> x_bit <span class=\"token keyword\">and</span> y_bit<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> x_bit <span class=\"token operator\">></span> y_bit<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">elif</span> x_bit <span class=\"token operator\">&lt;</span> y_bit<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># 核心思想是冒泡排序 和 按位比较</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">499</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">540</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9966</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> numbers<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'第</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">轮'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            first <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            second <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">if</span> compare_num<span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                numbers<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> numbers<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> numbers<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "学习",
                "算法与面试题",
                "算法题",
                "practise"
            ]
        },
        {
            "id": "http://jalen.site/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E9%80%9F%E6%88%90%E8%AF%BE/",
            "url": "http://jalen.site/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E9%80%9F%E6%88%90%E8%AF%BE/",
            "title": "计算机科学速成课",
            "date_published": "2023-01-16T06:34:43.000Z",
            "content_html": "<h1 id=\"1-计算机早期历史\"><a class=\"anchor\" href=\"#1-计算机早期历史\">#</a> 1 计算机早期历史</h1>\n<blockquote>\n<p>提到的设备：算盘 -&gt; 步进计算器 -&gt; 差分机 -&gt; 分析机 -&gt; 打孔卡片制表机</p>\n</blockquote>\n<blockquote>\n<p>提到的人名：Charles Babbage，Ada Lovelace</p>\n</blockquote>\n<ol>\n<li>最早的计算设备是算盘，举例如何使用</li>\n<li>Computer 从指代职业变成指代机器</li>\n<li>机器里有名的是：步进计算器。第一个可以做加减乘除的机器</li>\n<li>炮弹为了精准，要计算弹道，二战是查表来做。但每次改设计了就需要做一张新表</li>\n<li>Charles Babbage 提出了 “差分机”，在构造差分机期间，想出了分析机，分析机是通用计算机</li>\n<li>Lovelace 给分析机写了假想程序，因此成为了第一位程序员</li>\n<li>人口普查 10 年一次，Herman Hollerith 的打孔卡片制表机大大提升了效率</li>\n</ol>\n<h1 id=\"2-电子计算机\"><a class=\"anchor\" href=\"#2-电子计算机\">#</a> 2 电子计算机</h1>\n<blockquote>\n<p>提到的设备：继电器 -&gt; 真空管 -&gt; 晶体管</p>\n</blockquote>\n<ol>\n<li>20 实际的发展要求更强的计算能力。柜子大小的计算机发展到房间大小</li>\n<li>哈佛 Mark 1 号，IBM 1944 年做的</li>\n<li>继电器，继电器一秒 50 次开关</li>\n<li>继电器出 bug</li>\n<li>1904 年，热电子管出现，第一个真空管。改进后变成和继电器的功能一样</li>\n<li>“巨人 1 号” 计算机在英国 布莱切利园 首次大规模使用真空管。但变成麻烦，还要配置</li>\n<li>1946 年，宾夕法尼亚大学 的 ENIAC 是第一个通用可编程计算机</li>\n<li>1947 年，贝尔实验室做出了晶体管，晶体管有诸多好处，IBM 很快全面转向晶体管</li>\n<li>硅谷的典故：很多晶体管和半导体的开发都是这里做的。而生产半导体最常见的材料是硅</li>\n<li>肖克利半导体 -&gt; 仙童半导体 -&gt; 英特尔</li>\n</ol>\n<h1 id=\"3-布尔逻辑和逻辑门\"><a class=\"anchor\" href=\"#3-布尔逻辑和逻辑门\">#</a> 3 布尔逻辑和逻辑门</h1>\n<ol>\n<li>什么是二进制，为什么用二进制，布尔逻辑</li>\n<li>3 个基本操作：NOT，AND，OR</li>\n<li>解释 3 个基本操作</li>\n<li>XOR 异或</li>\n</ol>\n<h1 id=\"4-二进制\"><a class=\"anchor\" href=\"#4-二进制\">#</a> 4 二进制</h1>\n<ol>\n<li>用十进制举例二进制的原理，演示二进制加法。存储单位 MB GB TB 等</li>\n<li>正数，负数，整数，浮点数的表示</li>\n<li>美国信息交换标准代码 - ASCII，用来表示字符</li>\n<li>UNICODE 1992 年诞生，是字符编码标准，解决 ASCII 不够表达所有语言的问题</li>\n</ol>\n<h1 id=\"5-算数逻辑单元-alu\"><a class=\"anchor\" href=\"#5-算数逻辑单元-alu\">#</a> 5 算数逻辑单元 - ALU</h1>\n<ol>\n<li>简单介绍 ALU，英特尔 74181</li>\n<li>ALU 有 2 个单元，1 个算数单元和 1 个逻辑单元</li>\n<li>算术单元\n<ul>\n<li>半加器（处理 1 个 bit，2 个输入）</li>\n<li>全加器（处理 1 个 bit，3 个输入）</li>\n<li>8 bit 加法（1 个半加器，7 个全加器）</li>\n<li>溢出的概念，吃豆人的例子</li>\n<li>乘法除法</li>\n</ul>\n</li>\n<li>逻辑单元\n<ul>\n<li>检测数字是否为 0 的电路（一堆 OR　门最后加个　NOT　门）</li>\n<li>ALU　抽象成一个　V　符号</li>\n<li>Flag　标志（是否相等，是否小于，是否溢出等等）</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"6-寄存器和内存\"><a class=\"anchor\" href=\"#6-寄存器和内存\">#</a> 6 寄存器和内存</h1>\n<blockquote>\n<p>本集重点是 Memory（存储 / 内存 两种含义）</p>\n</blockquote>\n<ol>\n<li>存 1 位（Gated Latch - 锁存器）</li>\n<li>存 8 位（Register - 寄存器）</li>\n<li>16 X 16 的矩阵存 256 位，数据选择器 / 多路复用器（Multiplexer）解码 8 位地址，定位到单个锁存器</li>\n<li>4 位代表行，4 位代表列</li>\n<li>组合 256 位内存 + 多路复用器</li>\n<li>可寻址的 256 字节内存，一条 1980 年代的内存，1M 大小</li>\n<li>8 个模块，每个模块有 32 个小方块，每个小方块有 4 个小块，每个小块是 128 位 x64 位</li>\n</ol>\n<h1 id=\"7-中央处理器cpu\"><a class=\"anchor\" href=\"#7-中央处理器cpu\">#</a> 7 中央处理器（CPU）</h1>\n<blockquote>\n<p>拼个 CPU 出来</p>\n</blockquote>\n<blockquote>\n<p>CPU 怎么执行命令</p>\n</blockquote>\n<ol>\n<li>RAM + 寄存器 + ALU 做个 CPU</li>\n<li>解释 “取指令 -&gt; 解释 -&gt; 执行” 这个循环</li>\n<li>时钟是什么，时钟速度和赫兹</li>\n<li>超频提升性能，降频省电</li>\n</ol>\n<h1 id=\"8-指令和程序\"><a class=\"anchor\" href=\"#8-指令和程序\">#</a> 8 指令和程序</h1>\n<blockquote>\n<p>本集重点：一步步带你运行一遍程序</p>\n</blockquote>\n<ol>\n<li>回顾上集的例子程序，一步步讲解。介绍 “指令集” 的概念。LOAD_A,LOAD_B,SUB,JUMP,ADD,HALT 等指令</li>\n<li>带条件跳转，JUMP NEGATIVE 是负数才跳转，还有其他类型的 JUMP</li>\n<li>真正现代 CPU 用更多指令集。位数更长。</li>\n<li>1971 年的英特尔 4004 处理器，有 46 个指令</li>\n<li>如今英特尔酷睿 i7，有上千条指令</li>\n</ol>\n<h1 id=\"9-高级cpu设计\"><a class=\"anchor\" href=\"#9-高级cpu设计\">#</a> 9 高级 CPU 设计</h1>\n<ol>\n<li>早期是加快晶体管切换速度，来提升 CPU 速度</li>\n<li>给 CPU 专门的除法电路 + 其他电路 来做复杂操作，比如游戏，视频解码</li>\n<li>给 CPU 加缓存，提高数据存取速度，更快喂给 CPU，用计算餐馆销售额举例</li>\n<li>脏位 - Dirty bit</li>\n<li>流水线设计，用 1 个洗衣机和 1 个干燥机举例</li>\n<li>并行处理 - parallelize</li>\n<li>乱序执行 - out-of-order execution</li>\n<li>推测执行 - speculative execution</li>\n<li>分支预测 - branch prediction</li>\n<li>多个 ALU</li>\n<li>多核（Core）</li>\n<li>多个独立 CPU</li>\n<li>超级计算机，中国的 “神威 太湖之光”</li>\n</ol>\n<h1 id=\"10-早期的编程方式\"><a class=\"anchor\" href=\"#10-早期的编程方式\">#</a> 10 早期的编程方式</h1>\n<blockquote>\n<p>本集重点：早期计算机如何编程。打孔纸卡 -&gt; 插线板 -&gt; 面板拨开关</p>\n</blockquote>\n<ol>\n<li>开头说本集重点：程序如何进入计算机</li>\n<li>拿纺织业举例，给机器编程的需求远在计算机出现前就有了</li>\n<li>打孔纸卡 - Punched card</li>\n<li>插线板 - Plugboard</li>\n<li>冯诺依曼架构 - Von Neumann Architecture</li>\n<li>面板编程 - Panel programming</li>\n<li>第一款取得商业成功的家用计算机：Altair 8800</li>\n<li>编程依然很困难，人们需要更友好更简单的方式编程</li>\n<li>下周主题：编程语言</li>\n</ol>\n<h1 id=\"11-编程语言发展史\"><a class=\"anchor\" href=\"#11-编程语言发展史\">#</a> 11 编程语言发展史</h1>\n<blockquote>\n<p>编程：二进制 -&gt; 助记符（汇编器） -&gt; A-0（编译器）-&gt; FORTRAIN</p>\n</blockquote>\n<ol>\n<li>二进制写程序，先纸上写伪代码，手工转二进制，很快就烦了</li>\n<li>用 “助记符” 写代码（LOAD_A 14），为了把助记符转二进制，汇编器诞生（Assembler）</li>\n<li>葛利斯。霍普（Grace Hopper） - 哈佛 1 号计算机首批程序员，海军军官</li>\n<li>Grace 设计了编程语言 A-0</li>\n<li>Grace 1952 年做了第一个编译器（Complier），实现 A-0</li>\n<li>变量（Variables）</li>\n<li>FORTRAN</li>\n<li>COBOL</li>\n<li>新语言\n<ul>\n<li>1960 年代：ALGOL，LISP，BASIC</li>\n<li>1970 年代：Pascal，C，Smalltalk</li>\n<li>1980 年代：C++，Objective-C，Perl</li>\n<li>1990 年代：Python，Ruby，Java</li>\n<li>新千年：Swift，C#，Go</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"12-编程基础-语句与函数\"><a class=\"anchor\" href=\"#12-编程基础-语句与函数\">#</a> 12 编程基础 - 语句与函数</h1>\n<ol>\n<li>变量，赋值语句</li>\n<li>Grace Hopper 拍虫子游戏</li>\n<li>if 判断</li>\n<li>while 循环</li>\n<li>for 循环</li>\n<li>函数</li>\n<li>下集介绍算法</li>\n</ol>\n<h1 id=\"13-算法入门\"><a class=\"anchor\" href=\"#13-算法入门\">#</a> 13 算法入门</h1>\n<ol>\n<li>选择排序 - Selection sort</li>\n<li>大 O 表示法 - Big O notation</li>\n<li>归并排序 - Merge sort</li>\n<li>Dijkstra 算法</li>\n</ol>\n<h1 id=\"14-数据结构\"><a class=\"anchor\" href=\"#14-数据结构\">#</a> 14 数据结构</h1>\n<ol>\n<li>数组 - Array</li>\n<li>字符串 - String</li>\n<li>矩阵 - Matrix</li>\n<li>结构体 - Struct</li>\n<li>指针 - Pointer</li>\n<li>节点 - Node</li>\n<li>链表 - Linked list</li>\n<li>队列 - Queue</li>\n<li>栈 - Stack</li>\n<li>树 - Tree</li>\n<li>二叉树 - Binary Tree</li>\n<li>图 - Graph</li>\n<li>没时间讲红黑树和堆，不同数据结构适用不同场景</li>\n</ol>\n<h1 id=\"15-阿兰图灵\"><a class=\"anchor\" href=\"#15-阿兰图灵\">#</a> 15 阿兰・图灵</h1>\n<ol>\n<li>介绍图灵</li>\n<li>可判定行问题</li>\n<li>阿隆佐・丘奇，Lambda 算子</li>\n<li>图灵机</li>\n<li>停机问题</li>\n<li>破解德军英格玛加密机</li>\n<li>图灵测试</li>\n<li>图灵的个人生活</li>\n<li>图灵奖</li>\n</ol>\n<h1 id=\"16-软件工程\"><a class=\"anchor\" href=\"#16-软件工程\">#</a> 16 软件工程</h1>\n<ol>\n<li>对象 Object</li>\n<li>面向对象编程 Object Oriented Programming</li>\n<li>API Application Programming Interface</li>\n<li>public，private</li>\n<li>集成开发环境，IDE - Integrated Development Environments</li>\n<li>调试 debugging</li>\n<li>文档和注释 - readme，comment</li>\n<li>版本控制 Version control</li>\n<li>质量控制 Quality Assurance testing，QA</li>\n<li>Beta，Alpha</li>\n</ol>\n<h1 id=\"17-集成电路与摩尔定律\"><a class=\"anchor\" href=\"#17-集成电路与摩尔定律\">#</a> 17 集成电路与摩尔定律</h1>\n<blockquote>\n<p>本集重点：晶圆的制作流程：光刻</p>\n</blockquote>\n<ol>\n<li>分立元件 Discrete components</li>\n<li>数字暴政 Tyranny of Numbers - 是 1960 年代工程师碰到的问题，意思是如果想加强电脑性能，就要更多部件，着导致更多线路，更复杂。所以很难做</li>\n<li>光刻 Photolithography</li>\n<li>晶圆 Wafer</li>\n<li>光刻胶 Photoresist</li>\n<li>光掩膜 Photomask</li>\n<li>掺杂 Doping</li>\n<li>摩尔定律 Moore's Law</li>\n<li>英特尔 Intel</li>\n<li>晶体管数量大幅度增长，1980 年三万个，1990 年一百万个，2000 年三千万个，2010 年十亿个</li>\n<li>进一步小型化会碰到 2 个问题\n<ol>\n<li>光的波长不足以制作更精细的设计</li>\n<li>量子隧穿效应</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"18-操作系统\"><a class=\"anchor\" href=\"#18-操作系统\">#</a> 18 操作系统</h1>\n<ol>\n<li>操作系统 Operating Systems</li>\n<li>批处理 Batch processing</li>\n<li>计算机变便宜变多，有不同配置，写程序处理不同硬件细节很痛苦，因此操作系统负责抽象硬件</li>\n<li>外部设备 Peripherals</li>\n<li>设备驱动程序 Device drivers</li>\n<li>多任务处理 Multitasking</li>\n<li>虚拟内存 Virtual Memory</li>\n<li>动态内存分配 Dynamic memory allocation</li>\n<li>内存保护 Memory Protection</li>\n<li>1970 年代，计算机足够便宜，大学买了让学生用，多个学生用多个 “终端” 连接到主机</li>\n<li>多用户分时操作系统，Multics</li>\n<li>Unix</li>\n<li>MS-DOS</li>\n<li>下集是内存 &amp; 存储介质</li>\n</ol>\n<h1 id=\"19-内存存储介质\"><a class=\"anchor\" href=\"#19-内存存储介质\">#</a> 19 内存 &amp; 存储介质</h1>\n<blockquote>\n<p>本集重点：存储技术的发展</p>\n</blockquote>\n<ol>\n<li>纸卡 Paper punch cards</li>\n<li>延迟线存储器 Delay Line Memory</li>\n<li>磁芯 Magnetic Core Memory</li>\n<li>磁带 Magnetic Tape</li>\n<li>磁鼓 Magnetic Drum Memory</li>\n<li>硬盘 Hard Disk Drives</li>\n<li>内存层次结构 Memory Hierarchy</li>\n<li>软盘 Floppy Disk</li>\n<li>光盘 Compact Disk</li>\n<li>固态硬盘 Solid State Drives</li>\n</ol>\n<h1 id=\"20-文件系统\"><a class=\"anchor\" href=\"#20-文件系统\">#</a> 20 文件系统</h1>\n<ol>\n<li>文件格式：可以随便存文件数据，但按格式存会更方便</li>\n<li>TXT 文本文件：ASCII</li>\n<li>WAV 音频文件：每秒上千次的音频采样数字</li>\n<li>BMP 图片文件：像素的红绿蓝 RGP 值</li>\n<li>文件系统：很早期时空间小，整个存储器就像一整个文件，后来随着容量增长，多文件非常必要</li>\n<li>目录文件：用来解决多文件问题，存其他文件的信息，比如开头，结尾，创建时间等</li>\n<li>平面文件系统 - Flat File System：文件都在同一层次，早期空间小，只有十几个文件，平面系统够用</li>\n<li>如果文件紧密的一个个前后排序会造成很多问题，所以文件系统会：\n<ol>\n<li>把空间划分成一块块</li>\n<li>文件拆分存在多个块里</li>\n</ol>\n</li>\n<li>文件的增删改查会不可避免的造成文件散落在各个块里，如果是磁带这样的存储介质就会造成问题，所以做碎片整理</li>\n<li>分层文件系统 - Hierarchical File System：有不同文件夹，文件夹可以层层嵌套</li>\n</ol>\n<h1 id=\"21-压缩\"><a class=\"anchor\" href=\"#21-压缩\">#</a> 21 压缩</h1>\n<ol>\n<li>压缩的好处是能存更多文件，传输也更快</li>\n<li>游程编码 Run-length Encoding</li>\n<li>无损压缩 Lossless compression</li>\n<li>霍夫曼树 Huffman tree</li>\n<li>“消除冗余” 和 “用更紧凑的表示方法”，这两种方法通常会组合使用</li>\n<li>字典编码 Dictionary coders，游程编码 和字典编码都是无损压缩</li>\n<li>感知编码 Perceptual coding</li>\n<li>有损压缩 jpeg 格式</li>\n<li>时间冗余 Temporal redundancy</li>\n<li>MPEG-4 视频编码</li>\n</ol>\n<h1 id=\"22-命令行界面\"><a class=\"anchor\" href=\"#22-命令行界面\">#</a> 22 命令行界面</h1>\n<blockquote>\n<p>本集重点：计算机早期同时输入程序和数据（用纸卡 / 纸带）。运行开始直到结束，中间没有人类操作，原因是计算机很贵，不能等人类慢慢输入，执行完结果打印到纸上，到 1950 年代，计算机足够便宜 + 快，人类和计算机交互式操作变得可行，为了让人类输入到计算机，改造之前就有的打字机，编程电传打字机。到 1970 年代末，屏幕成本足够低，屏幕代替电传打字机，屏幕成为标配</p>\n</blockquote>\n<ol>\n<li>人机交互 Human-Computer Interaction</li>\n<li>早期输出数据是打印到纸上，而输入是用纸卡 / 纸带一次性把程序和数据都给进去</li>\n<li>QWERTY 打字机的发展，克里斯托弗・莱瑟姆・肖尔斯 发明于 1868 年</li>\n<li>电传打字机 Teletype machine</li>\n<li>命令行界面 Command line interface</li>\n<li>ls 命令</li>\n<li>早期文字游戏 Zork （1977 年）</li>\n<li>cd 命令</li>\n</ol>\n<h1 id=\"23-屏幕与2d图形显示\"><a class=\"anchor\" href=\"#23-屏幕与2d图形显示\">#</a> 23 屏幕与 2D 图形显示</h1>\n<ol>\n<li>PDP-1 计算机。键盘和显示器分开，屏幕显示临时值</li>\n<li>阴极射线管 Cathode Ray Tube （CRT）</li>\n<li>CRT 有两种绘图方式\n<ul>\n<li>矢量扫描 Vector Scanning</li>\n<li>光栅扫描 Raster Scanning</li>\n</ul>\n</li>\n<li>液晶显示器 Liquid Crystal Displays （LCD），像素（Pixel）</li>\n<li>字符生成器 Character generator</li>\n<li>屏幕缓冲区 Screen buffer</li>\n<li>矢量命令画图</li>\n<li>Sketchpad，光笔（Light pen）</li>\n<li>函数画线，矩形</li>\n</ol>\n<h1 id=\"24-冷战和消费主义\"><a class=\"anchor\" href=\"#24-冷战和消费主义\">#</a> 24 冷战和消费主义</h1>\n<ol>\n<li>本集重点：冷战导致美国往计算机领域投入大量资源</li>\n<li>范内瓦・布什 预见了计算机的潜力，提出假想机器 Memex，帮助建立国家科学基金会，给科学研究提供资金</li>\n<li>1950 年代消费者开始买晶体管设备，收音机大卖，日本取得晶体管授权后，索尼做了晶体管收音机，为日本半导体行业崛起埋下种子</li>\n<li>苏联 1961 年把宇航员加加林送入太空，导致美国提出登月，NASA 预算大增，用集成电路来制作登月计算机</li>\n<li>集成电路的发展实际上是由军事应用大大推进的，阿波罗登月计划毕竟只有 17 次，美国造超级计算机进一步推进集成电路</li>\n<li>美国半导体行业一开始靠政府高利润合同活着，忽略消费者市场，1970 年代冷战渐消，行业开始衰败，很多公司倒闭，英特尔转型处理器</li>\n<li>末尾总结：政府和消费者推动了计算机的发展，早期靠政府资金，让技术发展到足够商用，然后消费者购买商用产品继续推动产品发展</li>\n</ol>\n<h1 id=\"25-个人计算机革命\"><a class=\"anchor\" href=\"#25-个人计算机革命\">#</a> 25 个人计算机革命</h1>\n<blockquote>\n<p>本集：全是历史故事</p>\n</blockquote>\n<ol>\n<li>1970 年代初成本下降，个人计算机变得可行</li>\n<li>Altair 8800</li>\n<li>比尔・盖茨 和 保罗・艾伦 写 Basic 解释器</li>\n<li>乔布斯提议卖组装好的计算机，Apple-I 诞生</li>\n<li>1977 年出现 3 款开箱即用的计算机：“Apple-II”，“TRS-80 Model I”，“Commodore PET 2001”</li>\n<li>IBM 意识到个人计算机市场，IBM PC 发布，采用开放架构，兼容的机器都叫 IBM Compatible（IBM 兼容），生态系统产生雪球效应\n<ul>\n<li>因为用户多，软硬件开发人员更愿意花精力在这个平台</li>\n<li>因为软硬件多，用户也更乐意买 “IBM 兼容” 的计算机</li>\n</ul>\n</li>\n<li>苹果选择封闭架构，一切都自己买，只有苹果在非 “IBM 兼容” 下保持了足够市场份额</li>\n</ol>\n<h1 id=\"26-图形用户界面gui\"><a class=\"anchor\" href=\"#26-图形用户界面gui\">#</a> 26 图形用户界面（GUI）</h1>\n<ol>\n<li>图形界面先驱：道格拉斯・恩格尔巴特（Douglas Engelbart）</li>\n<li>1970 年成立 帕洛阿尔托研究中心 （Palo Alto Research Center）</li>\n<li>1973 年完成 Xerox Alto（施乐奥托）计算机</li>\n<li>举例：写一个简单的 GUI 程序</li>\n<li>1981 年的 Xerox Star system（施乐之星系统）</li>\n<li>史蒂夫・乔布斯去施乐参观</li>\n<li>所见即所得 WYSIWYG</li>\n<li>1983 年推出 Apple Lisa</li>\n<li>1984 年推出 Macintosh</li>\n<li>1985 年推出 Windows1.0，之后出到 3.1</li>\n<li>1995 年推出 Windows95，提供图形界面</li>\n<li>1995 年微软做失败的 Microsoft Bob</li>\n</ol>\n<h1 id=\"27-3d图形\"><a class=\"anchor\" href=\"#27-3d图形\">#</a> 27 3D 图形</h1>\n<ol>\n<li>线框渲染 Wireframe Rendering</li>\n<li>正交投影 Orthographic Projection</li>\n<li>透视投射 Perspective Projection</li>\n<li>网格 Mesh</li>\n<li>三角形更常用因为能定义唯一的平面</li>\n<li>扫描线渲染 Scanline Rendering</li>\n<li>遮挡 Occlusion</li>\n<li>画家算法 Painter's Algorithm</li>\n<li>深度缓冲 Z Buffering</li>\n<li>Z fighting 错误</li>\n<li>背面剔除 Back face Culling</li>\n<li>表面法线 Surface Normal</li>\n<li>平面着色 Flat Shading</li>\n<li>高洛德着色 Gouraud shading，冯氏着色 Phong shading</li>\n<li>纹理映射 Texture Mapping</li>\n<li>图形处理单元 GPU，Graphics Processing Unit</li>\n</ol>\n<h1 id=\"28-计算机网络\"><a class=\"anchor\" href=\"#28-计算机网络\">#</a> 28 计算机网络</h1>\n<ol>\n<li>局域网 Local Area Networks - LAN</li>\n<li>媒体访问控制地址 Media Access Control Address - MAC</li>\n<li>载波侦听多路访问 Carrier Sense Multiple Access - CSMA</li>\n<li>指数退避 Exponential Backoff</li>\n<li>冲突域 Collsion Domain</li>\n<li>电路交换 Circuit Switching</li>\n<li>报文交换 Message Switching</li>\n<li>分组交换 Packet Switching</li>\n</ol>\n<h1 id=\"29-互联网\"><a class=\"anchor\" href=\"#29-互联网\">#</a> 29 互联网</h1>\n<ol>\n<li>IP - 互联网协议 - Internet Protocol</li>\n<li>UDP - 用户数据包协议 - User Datagram Protocal</li>\n<li>校验和 - Checksum</li>\n<li>TCP - 传输控制协议 - Transmission Control Protocol</li>\n<li>DNS - 域名系统 - Domain Name System</li>\n<li>OSI - 开放式系统互联通信参考模型 - Open System Interconnection</li>\n</ol>\n<h1 id=\"30-万维网\"><a class=\"anchor\" href=\"#30-万维网\">#</a> 30 万维网</h1>\n<ol>\n<li>超链接 Hyperlinks</li>\n<li>URL - 统一资源定位符 - Uniform Resource Locator</li>\n<li>HTTP - 超文本传输协议 - HyperText Tranfer Protocol</li>\n<li>HTML - 超文本标记语言 - HyperText Markup Language</li>\n<li>写一个简单网页，用到 &lt;h1&gt;&lt;a&gt;&lt;h2&gt;&lt;ol&gt;&lt;li &gt; 等标签</li>\n<li>第一个浏览器和服务器是 Tim Berners - Lee 花了两个月在 CERN 写的</li>\n<li>1991 年正式发布，万维网就此诞生</li>\n<li>开始讲搜索引擎的故事</li>\n<li>Jerry 和 David 的万维网指南，后来改名叫 Yahoo</li>\n<li>搜索引擎 JumpStation</li>\n<li>搜索引擎 Google</li>\n<li>网络中立性</li>\n</ol>\n<h1 id=\"31-计算机安全\"><a class=\"anchor\" href=\"#31-计算机安全\">#</a> 31 计算机安全</h1>\n<ol>\n<li>Secrecy，Integrity，Availability 保密性，完整性，可用性</li>\n<li>Threat Model 威胁模型</li>\n<li>身份验证（Authorization）的三种方式：\n<ul>\n<li>what you know， 你知道什么</li>\n<li>what you have， 你有什么</li>\n<li>what you are， 你是什么</li>\n</ul>\n</li>\n<li>访问控制 Access Control</li>\n<li>Bell LaPadula model 不能向上读取，不能向下写入</li>\n<li>隔离 Isolation，沙盒 Sandbox</li>\n</ol>\n<h1 id=\"32-黑客与攻击\"><a class=\"anchor\" href=\"#32-黑客与攻击\">#</a> 32 黑客与攻击</h1>\n<ol>\n<li>社会工程学 Social Engineering</li>\n<li>钓鱼 Phishing</li>\n<li>假托 Pretexting</li>\n<li>木马 Trojan Horses</li>\n<li>NAND 镜像 NAND Mirrors</li>\n<li>漏洞利用 Exploit</li>\n<li>缓冲区溢出 Buffer Overflow</li>\n<li>边界检查 Bounds Checking</li>\n<li>代码注入 Code Injection</li>\n<li>零日漏洞 Zero Day Vulnerability</li>\n<li>计算机蠕虫 Worms</li>\n<li>僵尸网络 Botnet</li>\n<li>拒绝服务攻击 DDOS</li>\n</ol>\n<h1 id=\"33-加密\"><a class=\"anchor\" href=\"#33-加密\">#</a> 33 加密</h1>\n<ol>\n<li>多层防御 Defence in depth</li>\n<li>加密 - Encryption，解密 - Decryption</li>\n<li>凯撒加密 Caesar cipher</li>\n<li>替换加密 Substitution cipher</li>\n<li>移位加密 Permutation cipher</li>\n<li>列移位加密 Columnar transposition cipher</li>\n<li>德国 Enigma 加密机</li>\n<li>1977 年 “数据加密标准” - Data Encryption Standard （DES）</li>\n<li>2001 年 “高级加密标准” - Advanced Encryption Standard （AES）</li>\n<li>密钥交换 - Key exchange</li>\n<li>用颜色来举例 “单向函数” 和 “密钥加密” 的原理</li>\n<li>迪菲 - 赫尔曼密钥交换 - Diffie-Hellman key exchange</li>\n<li>非对称加密 - Asymmetric encryption</li>\n<li>非对称加密算法 RSA</li>\n</ol>\n<h1 id=\"34-机器学习与人工智能\"><a class=\"anchor\" href=\"#34-机器学习与人工智能\">#</a> 34 机器学习与人工智能</h1>\n<ol>\n<li>分类 Classification</li>\n<li>分类器 Classifier</li>\n<li>特征 Feature</li>\n<li>标记数据 Labeled data</li>\n<li>决策边界 Decision bounaries</li>\n<li>混淆矩阵 Confusion matrix</li>\n<li>未标签数据 Unlabeled data</li>\n<li>决策树 Decision tree</li>\n<li>支持向量机 Support Vector Machines</li>\n<li>人工神经网络 Artificial Neural Network</li>\n<li>深度学习 Deep learning</li>\n<li>弱 AI，窄 AI Weak AI， Narrow AI</li>\n<li>强 AI Strong AI</li>\n<li>强化学习 Reinforcement Learning</li>\n</ol>\n<h1 id=\"35-计算机视觉\"><a class=\"anchor\" href=\"#35-计算机视觉\">#</a> 35 计算机视觉</h1>\n<ol>\n<li>检测垂直边缘的算法</li>\n<li>核 / 过滤器 kernel or filter</li>\n<li>卷积 convolution</li>\n<li>Prewitt 算子 - Prewitt Operators</li>\n<li>维奥拉・琼斯 人脸检测 Viola-Jones Face Detection</li>\n<li>卷积神经网络 Convolutional Neural Networks</li>\n<li>识别出脸之后，可以进一步用其他算法定位面部标志，如眼睛和眉毛具体位置，从而判断心情等信息</li>\n<li>跟踪全身的标记点，如肩部，手臂等</li>\n</ol>\n<h1 id=\"36-自然语言处理\"><a class=\"anchor\" href=\"#36-自然语言处理\">#</a> 36 自然语言处理</h1>\n<ol>\n<li>词性 Parts of speech</li>\n<li>短语结构规则 Phrase structure rules</li>\n<li>分析树 Parse tree</li>\n<li>语音识别 Speech recognition</li>\n<li>谱图 Spectrogram</li>\n<li>快速傅里叶变换 Fast Fourier Transform</li>\n<li>音素 Phonemes</li>\n<li>语音合成 Speech Synthesis</li>\n</ol>\n<h1 id=\"37-机器人\"><a class=\"anchor\" href=\"#37-机器人\">#</a> 37 机器人</h1>\n<ol>\n<li>法国吃饭鸭 - Digesting Duck, Canard Digerateur</li>\n<li>土耳其行棋傀儡，下国际象棋</li>\n<li>第一台计算机控制的机器出现在 1940 年代晚期，叫数控机器，Computer Numerical Control（CNC）</li>\n<li>1960 年 Unimate，第一个商业贩卖的可编程工业机器人</li>\n<li>简单控制电路 simple control loop</li>\n<li>负反馈回路 negative feedback loop</li>\n<li>比例 - 积分 - 微分控制器 Proportional - Integral - Derivative controller PID 控制器</li>\n<li>机器人三定律 Three Laws of Robots</li>\n</ol>\n<h1 id=\"38-计算机心理学\"><a class=\"anchor\" href=\"#38-计算机心理学\">#</a> 38 计算机心理学</h1>\n<ol>\n<li>我们需要了解人类心理学，做出更好的计算机</li>\n<li>易用度 - Usability</li>\n<li>颜色强度排序 和 颜色排序</li>\n<li>分组更好记，电话号码 317-555-3897 比 3175553897 好记</li>\n<li>直观功能 - Affordances</li>\n<li>认出 vs 回想 Recognition vs Recall</li>\n<li>让机器有一定的情商 yi'jiFacebook 的研究</li>\n<li>用软件修正注释位置。让视频通话看起来像盯着对方，而不是盯着下方</li>\n<li>把机器人做的像人，恐怖谷理论</li>\n<li>有很多开放式的问题，心理学帮助我们明白不同选择可能带来的影响</li>\n</ol>\n<h1 id=\"39-教育科技\"><a class=\"anchor\" href=\"#39-教育科技\">#</a> 39 教育科技</h1>\n<ol>\n<li>通过调整，暂停等技巧，增强学习效率</li>\n<li>大型开放式在线课程 - Massive Open Online Courses （MOOC）</li>\n<li>智能辅导系统 - Intelligent Tutoring Systems</li>\n<li>判断规则 - Prodection rule</li>\n<li>域模型 - Domain Model</li>\n<li>贝叶斯知识追踪 Bayesian knowledge tracing\n<ul>\n<li>学生已经学会的概率</li>\n<li>瞎猜的概率</li>\n<li>失误的概率</li>\n<li>做题过程中学会的概率</li>\n</ul>\n</li>\n<li>教育数据挖掘 Educational Data mining</li>\n</ol>\n<h1 id=\"40-奇点天网计算机的未来\"><a class=\"anchor\" href=\"#40-奇点天网计算机的未来\">#</a> 40 奇点，天网，计算机的未来</h1>\n<ol>\n<li>普适计算 Ubiquitous Computing</li>\n<li>奇点 Singularity</li>\n<li>把工作分为四个象限，讨论自动化带来的影响</li>\n<li>机器人的存在时间可能长过人类，可以长时间探索宇宙</li>\n</ol>\n<p>视频教程参考： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUVXNDExdTd0aA==\">https://www.bilibili.com/video/BV1EW411u7th</span></p>\n",
            "tags": []
        },
        {
            "id": "http://jalen.site/learn/cprogram/c-basic/03%E7%B1%BB%E4%B8%8E%E8%AF%AD%E6%B3%95/",
            "url": "http://jalen.site/learn/cprogram/c-basic/03%E7%B1%BB%E4%B8%8E%E8%AF%AD%E6%B3%95/",
            "title": "语法与函数",
            "date_published": "2023-01-09T06:34:43.000Z",
            "content_html": "<blockquote>\n<p>主要回顾 C 语言常用语法与函数。</p>\n</blockquote>\n<h1 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h1>\n<ul>\n<li>\n<p>c 存储类</p>\n<ul>\n<li>auto：auto 存储类是所有局部变量默认的存储类。auto 是局部变量的默认存储类，限定变量只能在函数内部使用；</li>\n<li>register：register 代表了寄存器变量，不在内存中使用；</li>\n<li>static：static 是全局变量的默认存储类，表示变量在程序生命周期内可见；</li>\n<li>extern：extern 表示全局变量，即对程序内所有文件可见，类似于 Java 中的 public 关键字；</li>\n</ul>\n</li>\n<li>\n<p>c 运算符</p>\n<ul>\n<li>算术运算符</li>\n<li>关系运算符</li>\n<li>逻辑运算符</li>\n<li>位运算符</li>\n<li>赋值运算符</li>\n<li>杂项运算符</li>\n</ul>\n</li>\n<li>\n<p>原码：一个整数，按照绝对值大小转换成的二进制数，称为原码。</p>\n</li>\n<li>\n<p>反码：将二进制数按位取反，所得的新二进制数称为原二进制数的反码。</p>\n</li>\n<li>\n<p>补码：反码加 1 称为补码。</p>\n</li>\n<li>\n<p>语法</p>\n<ul>\n<li>判断语句\n<ul>\n<li>if...else 语句</li>\n<li>switch 语句</li>\n</ul>\n</li>\n<li>循环语句\n<ul>\n<li>while 循环</li>\n<li>for 循环</li>\n</ul>\n</li>\n<li>循环控制语句\n<ul>\n<li>break 语句</li>\n<li>continue 语句</li>\n<li>goto 语句</li>\n<li>无限循环  <code>for( ; ; )</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>函数（返回类型 + 函数名 + 函数参数 + 函数主体）</p>\n<ul>\n<li>函数参数\n<ul>\n<li>值传递：如交换两个实际值。<ins>swap(int x, int y)</ins></li>\n<li>指针传递：如交换两个指针变量，改变了内部地址的值。<ins>swap(int *x, int *y)</ins></li>\n<li>引用传递：<ins>swap(int &amp;x, int &amp;y)</ins></li>\n<li><ins>本质上说，C 里面所有的函数参数传递，都是值传递</ins></li>\n</ul>\n</li>\n<li>根据函数能否被其他源文件调用分为\n<ul>\n<li>内部函数（static 修饰）</li>\n<li>外部函数（extern 修饰，可不写）</li>\n</ul>\n</li>\n<li>内联函数：指用 inline 关键字修饰的函数，在类内定义的函数被默认成内联函数</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h1>\n<h2 id=\"mondayc\"><a class=\"anchor\" href=\"#mondayc\">#</a> monday.c</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"utils.c\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>auto 存储类</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">auto</span> <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>register 存储类</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>（1）register 存储类用于定义存储在寄存器中而不是 RAM 中的局部变量</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    RAM 代表随机存取内存，ROM 代表只读内存；两者都是电脑的组件。 </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    RAM 是易失性内存，用于暂时存储正在处理的文件。 ROM 是非易失性内存，用于为电脑长久存储指令。</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>（2）register 存储类意味着变量的最大尺寸等于寄存器的大小（通常是一个字），</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    且不能对它应用一元的 '&amp;' 运算符（因为它没有内存位置）。意味着变量 ** 可能 ** 存储在寄存器</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">register</span> <span class=\"token keyword\">int</span> miles <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> miles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>static 存储类</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>（1）static 存储类指示编译器在程序的生命周期内保持局部变量的存在，而不需要在每次它进入和离开作用域时进行创建和销毁。</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>（2）因此，使用 static 修饰局部变量可以在函数调用之间保持局部变量的值。</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>（3）static 修饰符也可以应用于全局变量。当 static 修饰全局变量时，会使变量的作用域限制在声明它的文件内</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>（4）全局声明的一个 static 变量或方法可以被任何函数或方法调用，只要这些方法出现在跟 static 变量或方法同一个文件中</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">// 下面的 count 也可以作为全局变量在函数内使用</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\">//thingy 使用 static 修饰后，不会在每次调用时重置（为 5）</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\">// 也就是说初始化工作只进行一次</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> thingy <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    thingy<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" thingy 为 %d ， count 为 %d\\n\"</span><span class=\"token punctuation\">,</span> thingy<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>extern 存储类</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>（1）extern 存储类用于提供一个全局变量的引用，全局变量对所有的程序文件都是可见的。</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>当您使用 extern 时，对于无法初始化的变量，会把变量名指向一个之前定义过的存储位置。</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>（2）extern 是用来在另一个文件中声明一个全局变量或函数。</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>（3）extern 修饰符通常用于当有两个或多个文件共享相同的全局变量或函数的时候</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">int</span> counter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    counter <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">extern</span> <span class=\"token keyword\">void</span> <span class=\"token function\">write_extern</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> pageSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> pageNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第 %d 页 \\n\"</span><span class=\"token punctuation\">,</span> pageNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该页 %d 行 \\n\"</span><span class=\"token punctuation\">,</span> pageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>算术运算符示例，输出</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>Line 1 - c 的值是 31</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>Line 2 - c 的值是 11</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>Line 3 - c 的值是 210</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>Line 4 - c 的值是 2</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>Line 5 - c 的值是 1</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>Line 6 - c 的值是 21</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>Line 7 - c 的值是 22</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>d=9, d1=10</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>d=9, d2=9</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>d=11, d3=10</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>d=11, d4=11</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">21</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">int</span> c <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre> </pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    c <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 1 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    c <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 2 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    c <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 3 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    c <span class=\"token operator\">=</span> a <span class=\"token operator\">/</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 4 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    c <span class=\"token operator\">=</span> a <span class=\"token operator\">%</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 5 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    c <span class=\"token operator\">=</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 赋值后再加 1 ，c 为 21，a 为 22</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 6 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    c <span class=\"token operator\">=</span> a<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 赋值后再减 1 ，c 为 22 ，a 为 21</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Line 7 - c 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">int</span> d<span class=\"token punctuation\">,</span> d1<span class=\"token punctuation\">,</span> d2<span class=\"token punctuation\">,</span> d3<span class=\"token punctuation\">,</span> d4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    d <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    d1 <span class=\"token operator\">=</span> d<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d=%d, d1=%d\\n\"</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> d1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    d <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    d2 <span class=\"token operator\">=</span> <span class=\"token operator\">--</span>d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d=%d, d2=%d\\n\"</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> d2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    d <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    d3 <span class=\"token operator\">=</span> d<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d=%d, d3=%d\\n\"</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> d3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    d <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    d4 <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d=%d, d4=%d\\n\"</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> d4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>关系运算符</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 等于 b\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 小于 b\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 大于 b\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">!=</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 不等于 b\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">>=</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 大于等于 b\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;=</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 小于等于 b\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>逻辑运算符</pre></td></tr><tr><td data-num=\"153\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main7</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">&amp;&amp;</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a与b为真\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">||</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a或b为真\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"非a为真\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre></pre></td></tr><tr><td data-num=\"168\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"169\"></td><td><pre>位运算符</pre></td></tr><tr><td data-num=\"170\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main8</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 60 = 0011 1100 */</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 13 = 0000 1101 */</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>    <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>    <span class=\"token keyword\">char</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a的二进制是 0011 1100\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b的二进制是 0000 1101\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>    c <span class=\"token operator\">=</span> a <span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a &amp; b = %d\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>    <span class=\"token function\">itoa</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a &amp; b = %s\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>    c <span class=\"token operator\">=</span> a <span class=\"token operator\">|</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a | b = %d\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    <span class=\"token function\">itoa</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a | b = %s\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    c <span class=\"token operator\">=</span> a <span class=\"token operator\">^</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a ^ b = %d\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    <span class=\"token function\">itoa</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a ^ b = %s\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>    c <span class=\"token operator\">=</span> <span class=\"token operator\">~</span>a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"~a = %d\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>    <span class=\"token function\">itoa</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"~a = %s\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>    c <span class=\"token operator\">=</span> a <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a &lt;&lt; 2 = %d\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>    <span class=\"token function\">itoa</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a &lt;&lt; 2 = %s\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>    c <span class=\"token operator\">=</span> a <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a >> 2 = %d\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>    <span class=\"token function\">itoa</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a >> 2 = %s\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre></pre></td></tr><tr><td data-num=\"211\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"212\"></td><td><pre>赋值运算符</pre></td></tr><tr><td data-num=\"213\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main9</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">21</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>    <span class=\"token keyword\">int</span> c <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>    c <span class=\"token operator\">=</span>  a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>    c <span class=\"token operator\">+=</span>  a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>    c <span class=\"token operator\">-=</span>  a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>    c <span class=\"token operator\">*=</span>  a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>    c <span class=\"token operator\">/=</span>  a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>    c <span class=\"token operator\">%=</span>  a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>    c <span class=\"token operator\">&lt;&lt;=</span>  <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>    c <span class=\"token operator\">>>=</span>  <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>    c <span class=\"token operator\">&amp;=</span>  <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>    c <span class=\"token operator\">^=</span>  <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>    c <span class=\"token operator\">|=</span>  <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre></pre></td></tr><tr><td data-num=\"231\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"232\"></td><td><pre>杂项运算符</pre></td></tr><tr><td data-num=\"233\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main10</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%lu \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>    <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> ptr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>    ptr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*ptr 是 %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>    a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>    <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"b 的值是 %d\\n\"</span><span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre></pre></td></tr><tr><td data-num=\"248\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"249\"></td><td><pre>条件语句</pre></td></tr><tr><td data-num=\"250\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main11</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a > 1\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a > -5\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a &lt;= -5\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>    <span class=\"token keyword\">char</span> size <span class=\"token operator\">=</span> <span class=\"token char\">'L'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token char\">'S'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小号\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token char\">'M'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"中号\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"大号\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre></pre></td></tr><tr><td data-num=\"276\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"277\"></td><td><pre>循环类型</pre></td></tr><tr><td data-num=\"278\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>a<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a = %d\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"289\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"291\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>    <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>        b<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b = %d\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"303\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c = %d\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>    <span class=\"token keyword\">int</span> d <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>    LOOP<span class=\"token operator\">:</span><span class=\"token keyword\">do</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>            d <span class=\"token operator\">=</span> d <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>            <span class=\"token keyword\">goto</span> LOOP<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d = %d\\n\"</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>        d<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"utilsc\"><a class=\"anchor\" href=\"#utilsc\">#</a> utils.c</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> counter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> pageSize <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> pageNumber <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">write_extern</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"count is %d\\n\"</span><span class=\"token punctuation\">,</span> counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "学习",
                "C语言学习",
                "C语言基础"
            ]
        },
        {
            "id": "http://jalen.site/learn/cprogram/c-basic/04%E6%95%B0%E7%BB%84%E6%9E%9A%E4%B8%BE%E5%92%8C%E6%8C%87%E9%92%88/",
            "url": "http://jalen.site/learn/cprogram/c-basic/04%E6%95%B0%E7%BB%84%E6%9E%9A%E4%B8%BE%E5%92%8C%E6%8C%87%E9%92%88/",
            "title": "数组、枚举和指针",
            "date_published": "2023-01-09T06:34:43.000Z",
            "content_html": "<blockquote>\n<p>主要回顾 C 语言数组、枚举和指针。</p>\n</blockquote>\n<h1 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h1>\n<ul>\n<li>数组特点\n<ul>\n<li>固定大小</li>\n<li>元素类型相同</li>\n<li>内存连续（最低的地址对应第一个元素，最高的地址对应最后一个元素）</li>\n<li>下标从 0 开始</li>\n<li>若省略掉了数组的大小，数组的大小则为初始化时元素的个数</li>\n</ul>\n</li>\n<li>blabla...</li>\n</ul>\n<h1 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>定义数组</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>（1）外部定义的数组，默认初始值都是 0，而函数内部定义的初始值可能有脏值</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> arrOutside<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> arrSize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    arrSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arrOutside<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arrOutside<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arrSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arrOutside[%d] = %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> arrOutside<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">int</span> arr1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    arrSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arr1 size = %d \\n\"</span><span class=\"token punctuation\">,</span> arrSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">//int arr2 [5] = &#123;1, 2, 3, 4, 5, 6&#125;;  // 报 too many initializer values</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 省略掉了数组的大小，数组的大小则为初始化时元素的个数</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">int</span> arr3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    arrSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr3<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr3<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arr3 size = %d \\n\"</span><span class=\"token punctuation\">,</span> arrSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">//arr4 和 arr5 未赋值位置的值是不确定的（脏值），所以定义数组一定要初始化值为 0</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">int</span> arr4<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    arr4<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    arrSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr4<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr4<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arr4 size = %d \\n\"</span><span class=\"token punctuation\">,</span> arrSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arrSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arr4[%d] = %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> arr4<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">int</span> arr5<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    arrSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr5<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr5<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arr5 size = %d \\n\"</span><span class=\"token punctuation\">,</span> arrSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arrSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"arr5[%d] = %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> arr5<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>测试数组扩充</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--------------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">int</span> numbers<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">int</span> arrSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数组长度是 %d \\n\"</span><span class=\"token punctuation\">,</span> arrSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arrSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"numbers[%d] = %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    numbers<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    numbers<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    numbers<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"numbers[8] = %d\\n\"</span><span class=\"token punctuation\">,</span> numbers<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"numbers[9] = %d\\n\"</span><span class=\"token punctuation\">,</span> numbers<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--------------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">int</span> newArrSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数组长度变为 %d \\n\"</span><span class=\"token punctuation\">,</span> newArrSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> newArrSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"numbers[%d] = %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--------------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">int</span> initialNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 前 10 个元素初始值为 0，后面 99 个有变化</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">int</span> theArrSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>initialNumbers<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>initialNumbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数组长度变为 %d \\n\"</span><span class=\"token punctuation\">,</span> theArrSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"numbers[%d] = %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> initialNumbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>给定 n 个学生的成绩，要求有多少学生超过了平均分</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token comment\">// 定义数组</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">int</span> cj<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token comment\">// 定义计数器，统计有多少人达到平均分</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token comment\">// 读入数据 </span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>cj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token comment\">// 对数据进行求和 </span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">double</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        sum <span class=\"token operator\">+=</span> cj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token comment\">// 求平均分</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token keyword\">double</span> arg <span class=\"token operator\">=</span> sum<span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token comment\">// 判断有多少人达到平均分</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token comment\">// 输出平均分和人数 </span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"平均分为：%0.2f\\n超过平均分的人有：%d个\\n\"</span><span class=\"token punctuation\">,</span> arg<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>数组与数组内存地址</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token comment\">//a [0] 、a [1]...a [i] 代表的都是值</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[0]   = %d\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[1]   = %d\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*a     = %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*(a+0) = %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*(a+1) = %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token comment\">//a、(a+0)、(a+1)、(a+i) 代表的是地址</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token comment\">// 且 a 代表整个数组的首地址，相当于 a [0] 的地址</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token comment\">// 这里 (a+1) 就代表的是 a [0+1] 的地址</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a    的地址：%p\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a+0)的地址：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a+1)的地址：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a+2)的地址：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(a+3)的地址：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"146\"></td><td><pre>数组初始化注意点</pre></td></tr><tr><td data-num=\"147\"></td><td><pre>（1）默认值：</pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    - 对于 short、int、long，就是整数 0；</pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    - 对于 char，就是字符 '\\0'；</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    - 对于 float、double，就是小数 0.0。</pre></td></tr><tr><td data-num=\"151\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token comment\">// 只给部分元素赋值 相当于 只给前面部分元素赋值，后面元素是默认值</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token comment\">// 如下面只给 a [0]~a [4] 5 个元素赋值，而后面 5 个元素自动初始化为 0</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">993</span><span class=\"token punctuation\">,</span> <span class=\"token number\">344</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token comment\">// 可以通过下面的形式将数组的所有元素初始化为 0, 由于剩余的元素会自动初始化为 0，所以只需要给第 0 个元素赋值为 0 </span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token keyword\">int</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    <span class=\"token keyword\">char</span> str<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token keyword\">float</span> scores<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token comment\">// 只能给元素逐个赋值，不能给数组整体赋值。</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m[%d] = %d \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n[%d] = %d \\n\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre></pre></td></tr><tr><td data-num=\"175\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"176\"></td><td><pre>指针与数组名的区别</pre></td></tr><tr><td data-num=\"177\"></td><td><pre>指针：也是一个变量，存储的是地址</pre></td></tr><tr><td data-num=\"178\"></td><td><pre>数组名：代表的是该数组最开始的一个元素的地址。</pre></td></tr><tr><td data-num=\"179\"></td><td><pre></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>（1）对数组元素 a [i] 的引用也可以写成 *(a+i) 这种形式。</pre></td></tr><tr><td data-num=\"181\"></td><td><pre>（2）赋值语句  p=&amp;a [0] 也可以写成下列形式: p=a。</pre></td></tr><tr><td data-num=\"182\"></td><td><pre>（3）p 是个指针，p [i] 与 *(p+i) 是等价的。</pre></td></tr><tr><td data-num=\"183\"></td><td><pre></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>区别：指针是一个变量，可以进行数值运算。数组名不是变量，不可以进行数值运算。</pre></td></tr><tr><td data-num=\"185\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    <span class=\"token comment\">//p = &amp;a;  //warning: assignment to 'int *' from incompatible pointer type 'int (*)[10]'</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token comment\">//Arrays are not pointers, pointers are not arrays.</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"指针（地址）的值为：OX%p\\n\"</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>    <span class=\"token comment\">// pt = n;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>    pt <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>        <span class=\"token comment\">//printf (\"% d \\n\", *(pt + i));  // 等同于下一行</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \\n\"</span><span class=\"token punctuation\">,</span> pt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre></pre></td></tr><tr><td data-num=\"210\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"211\"></td><td><pre>求数组中最大值和最小值</pre></td></tr><tr><td data-num=\"212\"></td><td><pre>（1）数组变量是特殊的指针，数组变量本身表达地址，int a [10];   int *p =a;</pre></td></tr><tr><td data-num=\"213\"></td><td><pre>（2）数组变量无需用取址符 & amp; ;</pre></td></tr><tr><td data-num=\"214\"></td><td><pre>（3）数组的元素表达的是变量，需要用 & amp; 取地址，如 m = &amp;a [0];</pre></td></tr><tr><td data-num=\"215\"></td><td><pre>（4）[] 运算符可以对数组做，也可以对指针做 p [0] == a [0];</pre></td></tr><tr><td data-num=\"216\"></td><td><pre>（5）* 运算符可以对指针做，也可以对数组做 *a = 25, *a 可以得到或者修改数组首个元素的值；</pre></td></tr><tr><td data-num=\"217\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">minMax</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>min<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>    <span class=\"token operator\">*</span>min <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>max <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token operator\">*</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>            <span class=\"token operator\">*</span>min <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token operator\">*</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>            <span class=\"token operator\">*</span>max <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main7</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>    <span class=\"token keyword\">int</span> min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>    <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>    <span class=\"token function\">minMax</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>min<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"min = %d, max = %d \\n\"</span><span class=\"token punctuation\">,</span> min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre></pre></td></tr><tr><td data-num=\"239\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"240\"></td><td><pre>数组赋值的区别，下面输出：size a=6, size b=5 </pre></td></tr><tr><td data-num=\"241\"></td><td><pre>a 数组结尾 a [5]=0，而 b 恰好是 5 个空间</pre></td></tr><tr><td data-num=\"242\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main8</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>    <span class=\"token keyword\">char</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"jalen\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>    <span class=\"token keyword\">char</span> b<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token char\">'j'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'l'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'e'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'n'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>    <span class=\"token keyword\">int</span> size_a <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>    <span class=\"token keyword\">int</span> size_b <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"size a=%d, size b=%d \\n\"</span><span class=\"token punctuation\">,</span> size_a<span class=\"token punctuation\">,</span> size_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>size_a<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[%d]=%d \\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>size_b<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[%d]=%d \\n\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre></pre></td></tr><tr><td data-num=\"258\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"259\"></td><td><pre>数组元素置 0</pre></td></tr><tr><td data-num=\"260\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main9</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>    <span class=\"token comment\">// 一维数组置 0</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>    <span class=\"token keyword\">int</span> size_a <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>size_a<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[%d]=%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>    <span class=\"token comment\">// 二维数组置 0</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>    <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>    <span class=\"token keyword\">int</span> size_b_x <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>    <span class=\"token keyword\">int</span> size_b_y <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>size_b_x<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>size_b_y<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[%d][%d]=%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>    <span class=\"token comment\">// 三维数组置 0</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>    <span class=\"token keyword\">int</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>    <span class=\"token keyword\">int</span> size_c_x <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>    <span class=\"token keyword\">int</span> size_c_y <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>    <span class=\"token keyword\">int</span> size_c_z <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>x<span class=\"token operator\">&lt;</span>size_c_x<span class=\"token punctuation\">;</span>x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>y<span class=\"token operator\">&lt;</span>size_c_y<span class=\"token punctuation\">;</span>y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> z<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>z<span class=\"token operator\">&lt;</span>size_c_z<span class=\"token punctuation\">;</span>z<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>                <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c[%d][%d][%d]=%d\\n\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre></pre></td></tr><tr><td data-num=\"295\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"296\"></td><td><pre>将枚举、数组和结构体结合使用</pre></td></tr><tr><td data-num=\"297\"></td><td><pre>下面的程序没有调试通过，backup</pre></td></tr><tr><td data-num=\"298\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre><span class=\"token comment\">// struct Student&#123;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre><span class=\"token comment\">//     char* name;</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre><span class=\"token comment\">//     int age;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre><span class=\"token comment\">//     int height;</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre><span class=\"token comment\">// &#125; ST;</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre><span class=\"token comment\">// struct Student ST[] = &#123;</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre><span class=\"token comment\">//     &#123;\"Jalen\", 20, 88&#125;,</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre><span class=\"token comment\">//     &#123;\"Moe\", 18, 88&#125;,</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre><span class=\"token comment\">//     &#123;\"Jones\", 30, 99&#125;</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre><span class=\"token comment\">// &#125;;</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre><span class=\"token comment\">// enum MEMBER&#123;</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre><span class=\"token comment\">//     Jalen,</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre><span class=\"token comment\">//     Jones,</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre><span class=\"token comment\">//     Moe</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre><span class=\"token comment\">// &#125;;</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre><span class=\"token comment\">// struct Student getStudentInfo(enum MEMBER name)&#123;</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre><span class=\"token comment\">//     return ST[name];</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre><span class=\"token comment\">// &#125;</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre><span class=\"token comment\">// int main()&#123;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre><span class=\"token comment\">//     Student stu = getStudentInfo(Jalen);</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre><span class=\"token comment\">//     cout &lt;&lt; stu.name &lt;&lt; endl;</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre><span class=\"token comment\">//     cout &lt;&lt; stu.age &lt;&lt; endl;</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre><span class=\"token comment\">//     cout &lt;&lt; stu.height &lt;&lt; endl;</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre><span class=\"token comment\">//     return 0;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre><span class=\"token comment\">// &#125;</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre></pre></td></tr><tr><td data-num=\"325\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"326\"></td><td><pre>&amp; 取地址：取变量地址</pre></td></tr><tr><td data-num=\"327\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre><span class=\"token comment\">// function to convert decimal to hexadecimal</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">decToHex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> decNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"330\"></td><td><pre>    <span class=\"token comment\">// char array to store hexadecimal number</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre>    <span class=\"token keyword\">char</span> hexaDeciNum<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>    <span class=\"token comment\">// counter for hexadecimal number array</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>decNum <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>        <span class=\"token comment\">/* temporary variable to store right most digit*/</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre>        <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>        <span class=\"token comment\">// Get the right most digit</span></pre></td></tr><tr><td data-num=\"338\"></td><td><pre>        temp <span class=\"token operator\">=</span> decNum <span class=\"token operator\">%</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"339\"></td><td><pre>        <span class=\"token comment\">// check if temp &lt; 10</span></pre></td></tr><tr><td data-num=\"340\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>            hexaDeciNum<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre>            i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"343\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>            hexaDeciNum<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp <span class=\"token operator\">+</span> <span class=\"token number\">55</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>            i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"346\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"347\"></td><td><pre>        decNum <span class=\"token operator\">=</span> decNum <span class=\"token operator\">/</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// get the quotient</span></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0x\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//print hex symbol</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>    <span class=\"token comment\">// printing hexadecimal number array in reverse order</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"352\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> hexaDeciNum<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main10</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"357\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre>    <span class=\"token comment\">//int *s = &amp;100;  // 不能对具体值取地址，变量之所以有地址就是因为要有一个存储单元对变量进行标识</span></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value is %d\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//a 变量的值 = 1</span></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value is %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同样是输出 a 变量的值 = 1</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The pointer address value is 0x%p\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出地址</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value is %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 这里有问题，不是很理解</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre>    <span class=\"token function\">decToHex</span><span class=\"token punctuation\">(</span><span class=\"token number\">222299536</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre></pre></td></tr><tr><td data-num=\"366\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"367\"></td><td><pre>接收数组参数方式</pre></td></tr><tr><td data-num=\"368\"></td><td><pre>（1）指针形式</pre></td></tr><tr><td data-num=\"369\"></td><td><pre>（2）数组形式（带 size 或不带）</pre></td></tr><tr><td data-num=\"370\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">getAverage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>param1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> param2<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> param3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"372\"></td><td><pre>    <span class=\"token comment\">//param1: 形参是一个指针</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>    <span class=\"token comment\">//param2: 形参是一个已定义大小的数组</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>    <span class=\"token comment\">//param3: 形参是一个未定义大小的数组</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"param1[%d]=%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> param1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"param2[%d]=%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"param3[%d]=%d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> param3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main11</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre>    <span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>    <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>    <span class=\"token function\">getAverage</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"386\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"387\"></td><td><pre></pre></td></tr><tr><td data-num=\"388\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"389\"></td><td><pre>枚举</pre></td></tr><tr><td data-num=\"390\"></td><td><pre>格式：enum　枚举名　&#123;枚举元素 1, 枚举元素 2,……&#125;;</pre></td></tr><tr><td data-num=\"391\"></td><td><pre>按照 C 语言规范是没有办法遍历枚举类型的；</pre></td></tr><tr><td data-num=\"392\"></td><td><pre>不过由于 DAY 是连续的枚举，可以实现遍历，SEASON 是不连续的枚举，所以没法实现</pre></td></tr><tr><td data-num=\"393\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"394\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">DAY</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"395\"></td><td><pre>    MON <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"396\"></td><td><pre>    TUE<span class=\"token punctuation\">,</span>  <span class=\"token comment\">//2</span></pre></td></tr><tr><td data-num=\"397\"></td><td><pre>    WED<span class=\"token punctuation\">,</span>  <span class=\"token comment\">//3</span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>    THU<span class=\"token punctuation\">,</span>  <span class=\"token comment\">//4</span></pre></td></tr><tr><td data-num=\"399\"></td><td><pre>    FRI<span class=\"token punctuation\">,</span>  <span class=\"token comment\">//5</span></pre></td></tr><tr><td data-num=\"400\"></td><td><pre>    SAT<span class=\"token punctuation\">,</span>  <span class=\"token comment\">//6</span></pre></td></tr><tr><td data-num=\"401\"></td><td><pre>    SUN  <span class=\"token comment\">//7</span></pre></td></tr><tr><td data-num=\"402\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"403\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token class-name\">SEASON</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"404\"></td><td><pre>    spring<span class=\"token punctuation\">,</span> <span class=\"token comment\">//0</span></pre></td></tr><tr><td data-num=\"405\"></td><td><pre>    summer <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"406\"></td><td><pre>    autumn<span class=\"token punctuation\">,</span>  <span class=\"token comment\">//4</span></pre></td></tr><tr><td data-num=\"407\"></td><td><pre>    winter <span class=\"token comment\">//5</span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"409\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main12</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"410\"></td><td><pre>    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">DAY</span> day <span class=\"token operator\">=</span> SAT<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"411\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Today is %d\\n\"</span><span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"412\"></td><td><pre>    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">SEASON</span> season <span class=\"token operator\">=</span> winter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"413\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The season is %d\\n\"</span><span class=\"token punctuation\">,</span> season<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"414\"></td><td><pre></pre></td></tr><tr><td data-num=\"415\"></td><td><pre>    <span class=\"token comment\">// 枚举可用于 switch 语句</span></pre></td></tr><tr><td data-num=\"416\"></td><td><pre>    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">color</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"417\"></td><td><pre>        red<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"418\"></td><td><pre>        green<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"419\"></td><td><pre>        blue</pre></td></tr><tr><td data-num=\"420\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"421\"></td><td><pre>    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">color</span> favorite_color<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"422\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你喜欢的颜色: (1. red, 2. green, 3. blue): \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"423\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%u\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>favorite_color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"424\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>favorite_color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre>        <span class=\"token keyword\">case</span> red<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"426\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你喜欢的颜色是红色\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"427\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"428\"></td><td><pre>        <span class=\"token keyword\">case</span> green<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"429\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你喜欢的颜色是绿色\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"430\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre>        <span class=\"token keyword\">case</span> blue<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"432\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你喜欢的颜色是蓝色\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"433\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"434\"></td><td><pre>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"435\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你没有选择你喜欢的颜色\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"436\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"437\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"438\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre></pre></td></tr><tr><td data-num=\"440\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"441\"></td><td><pre>指针可用于简化 C 编程</pre></td></tr><tr><td data-num=\"442\"></td><td><pre>动态内存分配</pre></td></tr><tr><td data-num=\"443\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"444\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main13</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"445\"></td><td><pre>    <span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"446\"></td><td><pre>    <span class=\"token comment\">// 定义指针</span></pre></td></tr><tr><td data-num=\"447\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"448\"></td><td><pre>    p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"449\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"变量的地址是 %p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"450\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"指针的地址是 %p\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"451\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*p 变量的值: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"452\"></td><td><pre></pre></td></tr><tr><td data-num=\"453\"></td><td><pre>    <span class=\"token comment\">// 赋为 NULL 值的指针被称为空指针，NULL 指针是一个定义在标准库中的值为零的常量</span></pre></td></tr><tr><td data-num=\"454\"></td><td><pre>    <span class=\"token comment\">// 赋一个 NULL 值是一个良好的编程习惯</span></pre></td></tr><tr><td data-num=\"455\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>s <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"456\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s的地址是 %p\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"457\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"458\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"459\"></td><td><pre></pre></td></tr><tr><td data-num=\"460\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"461\"></td><td><pre>指针的算术运算</pre></td></tr><tr><td data-num=\"462\"></td><td><pre>C 指针是一个用数值表示的地址。因此可以执行四种算术运算：++、--、+、-</pre></td></tr><tr><td data-num=\"463\"></td><td><pre>上面四种运算其实就是指针在挪动，比如向前、向后移动，int 是移动 4 个字节（int 4 字节 32bit）</pre></td></tr><tr><td data-num=\"464\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"465\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main14</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"466\"></td><td><pre>    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"467\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"468\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address is %p\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"469\"></td><td><pre>    p<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"470\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address is %p\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"471\"></td><td><pre>    p<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"472\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address is %p\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"473\"></td><td><pre>    p<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"474\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address is %p\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"475\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"476\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"477\"></td><td><pre></pre></td></tr><tr><td data-num=\"478\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"479\"></td><td><pre>指针数组：可以定义用来存储指针的数组。</pre></td></tr><tr><td data-num=\"480\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"481\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main15</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"482\"></td><td><pre>    <span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"483\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>ptr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"484\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"485\"></td><td><pre>        ptr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"486\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"487\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"488\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Address of var[%d] = %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"489\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value of var[%d] = %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ptr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"490\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"491\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"492\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"493\"></td><td><pre></pre></td></tr><tr><td data-num=\"494\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"495\"></td><td><pre>指向指针的指针: C 允许指向指针的指针 (多级间接寻址 - 指针链)。</pre></td></tr><tr><td data-num=\"496\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"497\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main16</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"498\"></td><td><pre>    <span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"499\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p1 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"500\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>p2 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>p1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"501\"></td><td><pre></pre></td></tr><tr><td data-num=\"502\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age = %d\\n\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"503\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p1 = %p\\n\"</span><span class=\"token punctuation\">,</span> p1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"504\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*p1 = %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"505\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p2 = %p\\n\"</span><span class=\"token punctuation\">,</span> p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"506\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"**p2 = %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"507\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"508\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"509\"></td><td><pre></pre></td></tr><tr><td data-num=\"510\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"511\"></td><td><pre>从函数返回指针</pre></td></tr><tr><td data-num=\"512\"></td><td><pre>下面是要生成和返回随机数的函数</pre></td></tr><tr><td data-num=\"513\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"514\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span></pre></td></tr><tr><td data-num=\"515\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"516\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> <span class=\"token function\">getRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"517\"></td><td><pre>    <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"518\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"519\"></td><td><pre>    <span class=\"token comment\">// 设置种子</span></pre></td></tr><tr><td data-num=\"520\"></td><td><pre>    <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span><span class=\"token punctuation\">)</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"521\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"522\"></td><td><pre>        r<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"523\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"524\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"525\"></td><td><pre>    <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"526\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"527\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"528\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"529\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"530\"></td><td><pre>    p <span class=\"token operator\">=</span> <span class=\"token function\">getRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"531\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"532\"></td><td><pre>        <span class=\"token comment\">//printf(\"(p + [%d]) address : %d\\n\", i, (p + i) );</span></pre></td></tr><tr><td data-num=\"533\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*(p + [%d]) value : %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"534\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"535\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"536\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "学习",
                "C语言学习",
                "C语言基础"
            ]
        },
        {
            "id": "http://jalen.site/learn/cprogram/c-basic/02%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E4%B8%8E%E5%B8%B8%E9%87%8F%E5%8F%98%E9%87%8F/",
            "url": "http://jalen.site/learn/cprogram/c-basic/02%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E4%B8%8E%E5%B8%B8%E9%87%8F%E5%8F%98%E9%87%8F/",
            "title": "基本类型与常量变量",
            "date_published": "2023-01-06T06:34:43.000Z",
            "content_html": "<blockquote>\n<p>主要回顾 C 数据类型、C 变量、C 常量三个知识点。</p>\n</blockquote>\n<h1 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h1>\n<ul>\n<li>C 的令牌：可以是关键字、标识符、常量、字符串值，或者是一个符号</li>\n<li>分号结束</li>\n<li>注释\n<ul>\n<li>单行注释<span class=\"label primary\"> //</span>，<span class=\"label primary\">/* 单行注释 */</span></li>\n<li>多行注释：<span class=\"label primary\">/* 多行注释 */</span></li>\n</ul>\n</li>\n<li>标识符: <strong>区分大小写</strong></li>\n<li>关键字 (保留字): break,case,const,double,enum,... (C99 新增关键字，C11 新增关键字)</li>\n<li>空格</li>\n<li>一个正规程序可以有多个函数，但是有且只有一个主函数</li>\n<li>函数只有在被调用的时候才执行，主函数由系统调用执行</li>\n<li>数据类型:\n<ul>\n<li>基本类型 (算术类型)\n<ul>\n<li>整数类型</li>\n<li>浮点类型</li>\n</ul>\n</li>\n<li>枚举类型 (算术类型：只能赋予其一定的离散整数值的变量)</li>\n<li>void 类型</li>\n<li>派生类型\n<ul>\n<li>指针类型</li>\n<li>数组类型</li>\n<li>结构类型</li>\n<li>共用体类型</li>\n<li>函数类型</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>整数类型 (各种类型的存储大小与系统位数和系统类型有关)</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>存储大小</th>\n<th>值范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>char</td>\n<td>1 字节</td>\n<td>-128 到 127 或 0 到 255</td>\n</tr>\n<tr>\n<td>unsigned char</td>\n<td>1 字节</td>\n<td>0 到 255</td>\n</tr>\n<tr>\n<td>signed char</td>\n<td>1 字节</td>\n<td>-128 到 127</td>\n</tr>\n<tr>\n<td>int</td>\n<td>2 或 4 字节</td>\n<td>-32,768 到 32,767 或 -2,147,483,648 到 2,147,483,647</td>\n</tr>\n<tr>\n<td>unsigned int</td>\n<td>2 或 4 字节</td>\n<td>0 到 65,535 或 0 到 4,294,967,295</td>\n</tr>\n<tr>\n<td>short</td>\n<td>2 字节</td>\n<td>-32,768 到 32,767</td>\n</tr>\n<tr>\n<td>unsigned short</td>\n<td>2 字节</td>\n<td>0 到 65,535</td>\n</tr>\n<tr>\n<td>long</td>\n<td>4 字节</td>\n<td>-2,147,483,648 到 2,147,483,647</td>\n</tr>\n<tr>\n<td>unsigned long</td>\n<td>4 字节</td>\n<td>0 到 4,294,967,295</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>可以使用 sizeof 运算符得到对象或类型的存储字节大小</li>\n<li>浮点类型</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>存储大小</th>\n<th>值范围</th>\n<th>精度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>float</td>\n<td>4 字节</td>\n<td>1.2E-38 到 3.4E+38</td>\n<td>6 位有效位</td>\n</tr>\n<tr>\n<td>double</td>\n<td>8 字节</td>\n<td>2.3E-308 到 1.7E+308</td>\n<td>15 位有效位</td>\n</tr>\n<tr>\n<td>long double</td>\n<td>16 字节</td>\n<td>3.4E-4932 到 1.1E+4932</td>\n<td>19 位有效位</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>char：通常是一个字节（八位）, 这是一个整数类型。</p>\n</li>\n<li>\n<p>int：整型，4 个字节，取值范围 -2147483648 到 2147483647。</p>\n</li>\n<li>\n<p>float：单精度浮点值。单精度是这样的格式，1 位符号，8 位指数，23 位小数。</p>\n</li>\n<li>\n<p>double：双精度浮点值。双精度是 1 位符号，11 位指数，52 位小数。</p>\n</li>\n<li>\n<p>c 语言中内存区域划分</p>\n<ol>\n<li>栈（stack）：由编译器进行管理，自动分配和释放，存放函数调用过程中的各种参数、局部变量、返回值以及函数返回地址。操作方式类似数据结构中的栈。</li>\n<li>堆（heap）：用于程序动态申请分配和释放空间。C 语言中的 malloc 和 free，C++ 中的 new 和 delete 均是在堆中进行的。正常情况下，程序员申请的空间在使用结束后应该释放，若程序员没有释放空间，则程序结束时系统自动回收。注意：这里的 “堆” 并不是数据结构中的 “堆”。</li>\n<li>全局（静态）存储区：分为 DATA 段和 BSS 段。DATA 段（全局初始化区）存放初始化的全局变量和静态变量；BSS 段（全局未初始化区）存放未初始化的全局变量和静态变量。程序运行结束时自动释放。其中 BBS 段在程序执行之前会被系统自动清 0，所以未初始化的全局变量和静态变量在程序执行之前已经为 0。</li>\n<li>文字常量区：存放常量字符串。程序结束后由系统释放。</li>\n<li>程序代码区：存放程序的二进制代码。</li>\n</ol>\n</li>\n<li>\n<p>c 语言中常量又叫字面量，定义后不能进行修改。常量有</p>\n<ul>\n<li>整数常量：十进制、八进制或十六进制的常量等</li>\n<li>浮点常量：由整数部分、小数点、小数部分和指数部分组成</li>\n<li>字符常量：括在单引号中，含转义符</li>\n<li>字符串常量：括在双引号中</li>\n</ul>\n</li>\n<li>\n<p>定义常量的方式</p>\n<ol>\n<li>使用 #define 预处理器。</li>\n<li>使用 const 关键字。</li>\n</ol>\n</li>\n<li>\n<p>C 语言中没有专门的字符串类型，因此双引号内的字符串会被存储到一个数组中，这个字符串代表指向这个数组起始字符的指针；</p>\n</li>\n</ul>\n<h1 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h1>\n<h2 id=\"fridayc\"><a class=\"anchor\" href=\"#fridayc\">#</a> friday.c</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;float.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"constants.h\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>演示输出各类型占用存储空间</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">//% lu 为 32 位无符号整数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">//% E 为以指数形式输出单、双精度实数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------- 各数据类型及其存储字节数 ---------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"char 存储字节数 : %lu \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unsigned char 存储字节数 : %lu \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"signed char 存储字节数 : %lu \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">signed</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"int 存储字节数 : %lu \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unsigned int 存储字节数 : %lu \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"short 存储字节数 : %lu \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unsigned short 存储字节数 : %lu \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"long 存储字节数 : %lu \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unsigned long 存储字节数 : %lu \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"float 存储字节数 : %lu \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"float 最小值: %E\\n\"</span><span class=\"token punctuation\">,</span> FLT_MIN <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"float 最大值: %E\\n\"</span><span class=\"token punctuation\">,</span> FLT_MAX <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"精度值: %d\\n\"</span><span class=\"token punctuation\">,</span> FLT_DIG <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>演示各类型定义</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">int</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">int</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token keyword\">double</span> PI<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token keyword\">float</span> E<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">// 尽量不要写这种定义方式，有警告，extern 只做声明，而非定义</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">//extern int p = 999;  </span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\">// 字符型常量 (含转义字符)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">char</span> character <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">char</span> character1 <span class=\"token operator\">=</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\">//10 进制数</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">int</span> decimal_num <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\">//8 进制数</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">int</span> octal_num <span class=\"token operator\">=</span> <span class=\"token number\">045</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\">//2 进制数</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">int</span> binary_num <span class=\"token operator\">=</span> <span class=\"token number\">0</span>b11011<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token comment\">//16 进制数</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">int</span> hexadecimal_num <span class=\"token operator\">=</span> <span class=\"token number\">0x21458adf</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token comment\">// 单精度常量</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">float</span> pi <span class=\"token operator\">=</span> <span class=\"token number\">3.14f</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token comment\">// 默认为双精度</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">float</span> e <span class=\"token operator\">=</span> <span class=\"token number\">2.71828</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token comment\">// 双精度浮点 (double) 型</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">double</span> g <span class=\"token operator\">=</span> <span class=\"token number\">9.8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token comment\">// 字符串常量</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">char</span> str<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Jalen\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    i <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    PI <span class=\"token operator\">=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    s <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    t <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    m <span class=\"token operator\">=</span> <span class=\"token number\">116</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    n <span class=\"token operator\">=</span> <span class=\"token number\">117</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    E <span class=\"token operator\">=</span> <span class=\"token number\">666</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">extern</span> <span class=\"token keyword\">float</span> G<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> AGE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    AGE <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i=%d,PI=%f,s=%d,t=%d,m=%d,n=%d,E=%f,G=%f,age=%d\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> PI<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> E<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> AGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">//c 没有变量提升</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\">// int m = 16;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token comment\">// int n = 17;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\">// extern int o;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\">// extern int p;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>演示类型转换</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token comment\">// 浮点数赋给整型，该浮点数小数被舍去；下面输出圆周长 = 37</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">float</span> pi <span class=\"token operator\">=</span> <span class=\"token number\">3.1415926</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">int</span> circleRadius <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">int</span> circlePerimeter <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> pi <span class=\"token operator\">*</span> circleRadius<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"圆周长是 %d \\n\"</span><span class=\"token punctuation\">,</span> circlePerimeter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token comment\">// 整数赋给浮点型，数值不变，但是被存储到相应的浮点型变量中；</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">int</span> monthPerYear <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token keyword\">float</span> totalMonth <span class=\"token operator\">=</span> age <span class=\"token operator\">*</span> monthPerYear<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你已存活了 %f 个月\\n\"</span><span class=\"token punctuation\">,</span> totalMonth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token comment\">// 向下取整</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">float</span> weight <span class=\"token operator\">=</span> <span class=\"token number\">8.8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">int</span> intWeight <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token number\">8.8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重量是 %d KG\\n\"</span><span class=\"token punctuation\">,</span> intWeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token comment\">// 两个整数相除，结果仍为整数 2，把 2 赋给浮点数 f</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">float</span> num3 <span class=\"token operator\">=</span> num1<span class=\"token operator\">/</span>num2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"商是 %f \\n\"</span><span class=\"token punctuation\">,</span> num3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token comment\">// 求和</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token keyword\">float</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2.8</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2.9</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token keyword\">float</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token keyword\">int</span> d <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"和转浮点数是 %f \\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"和转整数是 %d \\n\"</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>输出变量地址</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>内存寻址</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token keyword\">int</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token keyword\">int</span> d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token comment\">// 变量地址的获取方式：&amp; 变量名</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token comment\">//a 的地址是 00000015667ffafc</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token comment\">//b 的地址是 00000015667ffaf8</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token comment\">//c 的地址是 00000015667ffaf4</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token comment\">//d 的地址是 00000015667ffaf0</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token comment\">//a 的地址比 b 的地址大 4 字节，依次类推</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a的地址是%p\\nb的地址是%p\\nc的地址是%p\\nd的地址是%p\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token comment\">//a 的值是 0</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a的值是%d\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"139\"></td><td><pre>C 语言经过编译之后将内存中的区别</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre><span class=\"token keyword\">int</span> k1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre><span class=\"token keyword\">int</span> k2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> k3 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> k4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> m1 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> m2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token keyword\">char</span> str<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>q <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"栈区-变量地址  i：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"                p：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"              str：%p\\n\"</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"                q：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"堆区地址-动态申请：%p\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"全局外部有初值 k1：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>k1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    外部无初值 k2：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>k2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"静态外部有初值 k3：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>k3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"    外静无初值 k4：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>k4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  内静态有初值 m1：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>m1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  内静态无初值 m2：%p\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>m2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文字常量地址    ：%p, %s\\n\"</span><span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"程序区地址      ：%p\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>main5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre></pre></td></tr><tr><td data-num=\"169\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"170\"></td><td><pre>等号赋值</pre></td></tr><tr><td data-num=\"171\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>    <span class=\"token comment\">// 等同 a=b=3</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre></pre></td></tr><tr><td data-num=\"181\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"182\"></td><td><pre>定义常量</pre></td></tr><tr><td data-num=\"183\"></td><td><pre>（1）#define 定义常量格式：#define identifier value</pre></td></tr><tr><td data-num=\"184\"></td><td><pre>（2）注意使用 #define 定义常量没有 “=” 号赋值，而且结尾没有分号</pre></td></tr><tr><td data-num=\"185\"></td><td><pre>（3）#define 是宏定义，它不能定义常量，但可以实现在字面意义上和其它定义常量相同的功能</pre></td></tr><tr><td data-num=\"186\"></td><td><pre>（4）define 定义的是不带类型的常数，只进行简单的字符替换。在预编译的时候起作用，不存在类型检查。</pre></td></tr><tr><td data-num=\"187\"></td><td><pre>（5）const 定义常量格式：const type variable = value;</pre></td></tr><tr><td data-num=\"188\"></td><td><pre>（6）const 定义的是变量不是常量，const 只是把该变量所占的内存变为只读</pre></td></tr><tr><td data-num=\"189\"></td><td><pre>（7）区别：</pre></td></tr><tr><td data-num=\"190\"></td><td><pre>     - 编译器处理方式不同：#define 宏是在预处理阶段展开；const 常量是编译运行阶段使用</pre></td></tr><tr><td data-num=\"191\"></td><td><pre>     - 类型和安全检查不同：#define 宏没有类型，不做任何类型检查，仅仅是展开；const 常量有具体的类型，在编译阶段会执行类型检查</pre></td></tr><tr><td data-num=\"192\"></td><td><pre>     - 存储方式不同：#define 宏仅仅是展开，有多少地方使用，就展开多少次，不会分配内存；const 常量会在内存中分配 (可以是堆中也可以是栈中)</pre></td></tr><tr><td data-num=\"193\"></td><td><pre>     - const 可以节省空间，避免不必要的内存分配（内存地址 & amp; 立即数，#define 在内存中有若干个拷贝）</pre></td></tr><tr><td data-num=\"194\"></td><td><pre>     - const 提高了效率</pre></td></tr><tr><td data-num=\"195\"></td><td><pre>     - #define 宏替换只作替换，不做计算，不做表达式求解</pre></td></tr><tr><td data-num=\"196\"></td><td><pre>     - const 定义变量时就需要初始化赋值</pre></td></tr><tr><td data-num=\"197\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LENGTH</span> <span class=\"token expression\"><span class=\"token number\">5</span></span></span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">WIDTH</span> <span class=\"token expression\"><span class=\"token number\">10</span></span></span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">NEWLINE</span> <span class=\"token char\">'\\n'</span></span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main7</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>    <span class=\"token keyword\">int</span> area<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    area <span class=\"token operator\">=</span> LENGTH <span class=\"token operator\">*</span> WIDTH<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value of area : %d\"</span><span class=\"token punctuation\">,</span> area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> NEWLINE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span>  LENGTH1 <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span>  WIDTH1  <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> NEWLINE1 <span class=\"token operator\">=</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>    area <span class=\"token operator\">=</span> LENGTH1 <span class=\"token operator\">*</span> WIDTH1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value of area : %d\"</span><span class=\"token punctuation\">,</span> area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> NEWLINE1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre></pre></td></tr><tr><td data-num=\"216\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"217\"></td><td><pre>define 注意 “边缘效应”</pre></td></tr><tr><td data-num=\"218\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">N</span> <span class=\"token expression\"><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">3</span></span></span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">M</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main8</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"N 的值为 : %d\\n\"</span><span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"223\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"M 的值为 : %d\\n\"</span><span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>    <span class=\"token keyword\">double</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>N <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 2+3/2=2+1.5=3.5</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>    b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>M <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// (2+3)/2=2.5</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a 的值为 : %.2f\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"229\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b 的值为 : %.2f\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"230\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"231\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"constantsh\"><a class=\"anchor\" href=\"#constantsh\">#</a> constants.h</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> PI <span class=\"token operator\">=</span> <span class=\"token number\">3.1415926</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">float</span> E <span class=\"token operator\">=</span> <span class=\"token number\">2.71828</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">float</span> G <span class=\"token operator\">=</span> <span class=\"token number\">9.8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> AGE <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">plus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "学习",
                "C语言学习",
                "C语言基础"
            ]
        },
        {
            "id": "http://jalen.site/learn/cprogram/c-basic/01%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/",
            "url": "http://jalen.site/learn/cprogram/c-basic/01%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/",
            "title": "概述与环境配置",
            "date_published": "2023-01-05T06:34:43.000Z",
            "content_html": "<h1 id=\"c概述\"><a class=\"anchor\" href=\"#c概述\">#</a> C 概述</h1>\n<ul>\n<li>通用、面向过程式</li>\n<li>1972 年诞生于贝尔实验室</li>\n<li>作者是<ins>丹尼斯里奇</ins></li>\n<li>当前 C 标准是 C18（2023 年 1 月 5 日）</li>\n<li>UNIX 操作系统，C 编译器，和几乎所有的 UNIX 应用程序都是用 C 语言编写的</li>\n<li>C 语言是为了编写 UNIX 操作系统而被发明的</li>\n<li>C 语言是以 B 语言为基础的，B 语言大概是在 1970 年被引进的</li>\n<li>C 语言标准是于 1988 年由美国国家标准协会（<span class=\"red\">ANSI</span>，全称 American National Standard Institute）制定的</li>\n<li>UNIX 操作系统完全使用 C 语言编写</li>\n<li>C 语言是最广泛使用的系统程序设计语言</li>\n<li><ins class=\"dot\">Linux 操作系统</ins>、MySQL 都是使用 C 语言编写的</li>\n<li>C 语言所产生的代码运行速度与汇编语言编写的代码运行速度几乎一样</li>\n<li>C11（也被称为 C1X）指 ISO 标准 ISO/IEC 9899:2011。在它之前的 C 语言标准为 C99</li>\n<li>C 程序的源文件通常使用扩展名<span class=\"label info\"> .c</span></li>\n</ul>\n<h1 id=\"开发环境\"><a class=\"anchor\" href=\"#开发环境\">#</a> 开发环境</h1>\n<blockquote>\n<p>我们使用 vscode 开发</p>\n</blockquote>\n<ol>\n<li>下载 windows 环境 c 编译器 MinGW。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvbWluZ3ctdzY0Lw==\">Sourceforge</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTBvMXhDS255dTVIS2lxeVJwWm1EclE=\">百度云 (karj)</span></li>\n<li>将 <code>mingw64\\bin</code>  加入系统变量并 cmd 输入 <code>gcc -v</code>  测试</li>\n<li>下载 vscode。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20v\">下载地址</span></li>\n<li>vscode 安装 <code>C/C++</code>  扩展，确认是 Microsoft 家的。</li>\n<li>vscode 安装 <code>Code Runner</code>  扩展（logo 是.run）。</li>\n<li>配置 <code>Code Runner</code>  扩展， <code>File</code>  -  <code>Preference</code>  -  <code>Settings</code> ，将 <code>Run Code Configuration</code>  中的 <code>Run In Terminal</code> 、 <code>Save File Before Run</code>  前面的复选框选中。</li>\n<li>新建 c 程序项目目录，vscode  <code>Open Folder</code> , 左侧菜单新建 <code>hello.c</code>  文件，写入内容<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>代码编辑完成后还不能直接运行。还需要配置俩 json 文件。</li>\n<li>在 <code>Terminal</code>  菜单下点击 <code>Configure Tasks...</code>  子菜单，选择 <code>C/C++:gcc.exe生成活动文件</code> ，随后自动创建一个 <code>tasks.json</code>  的文件。不用做任何改动。</li>\n<li>最后，回到 <code>hello.c</code>  文件，单击鼠标右键选择 <code>Run Code</code>  即可运行代码。运行结果会在下面出现的 <code>Terminal</code>  中显示</li>\n<li>如果想要调试代码的话呢？点击 <code>Run</code>  菜单下的 <code>Start Debugging</code>  子菜单。在随后出现的弹出框中选择 <code>C++(GDB/LLDB)</code> ，再选择”gcc.exe“。</li>\n<li>vscode 终端中文乱码临时解决方案： <code>chcp 65001</code>  (UTF-8 代码页编号为 65001)</li>\n</ol>\n<h1 id=\"代码片段\"><a class=\"anchor\" href=\"#代码片段\">#</a> 代码片段</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>1. 头文件是扩展名为.h 的文件，包含了 C 函数声明和宏定义，被多个源文件中引用共享。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>2. 有两种类型的头文件：程序员编写的头文件和编译器自带的头文件。 </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>3. 在程序中要使用头文件，需要使用 C 预处理指令 #include 来引用它。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>4.printf () 函数在 \"stdio.h\" 头文件中声明。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>5.stdio.h 是一个头文件 (标准输入输出头文件) , #include 是一个预处理命令，用来引入头文件。 </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>6. 当编译器遇到 printf () 函数时，如果没有找到 stdio.h 头文件，会发生编译错误。</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>7.stdio 表示系统文件库，也可以声明其它的</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>8.&lt;.h > 表示头文件，因为这些文件都是放在程序各文件的开头</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>9.#include 告诉预处理器将指定头文件的内容插入到预处理器命令的相应位  导入头文件的预编译指令</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>10.&lt;> 表示系统自带的库，也可以写成 \"\"表示用户自定义的库，如果写成\" \" 并且自定义的库里面没有这个文件系统会自动查找自带的库，如果还是没有报错</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>1. 所有的 C 语言程序都需要包含 main () 函数。 </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>2. 代码从 main () 函数开始执行。程序的入口.</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>3. 一个程序有且只能有一个 main 函数的存在</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">//printf () 用于格式化输出到屏幕。</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World! I\\'m VSCode\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">//return 0; 语句用于表示退出程序。</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"控制台执行：gcc .\\\\hello.c 生成hello.exe文件\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"控制台执行：.\\\\hello.exe Hello,World Jalen \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">// 第一个参数存放的是可执行程序的文件名字，然后依次存放传入的参数（从第二个开始）</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// 下面输出：输出可执行程序 D:\\c-practise\\hello.exe ，参数个数为 [3]，运行输出第二个参数：[Hello,World]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输出可执行程序 %s ，参数个数为[%d]，运行输出第二个参数：[%s]\\n\"</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">// 下面输出：空格分隔第三个参数 Jalen</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"空格分隔第三个参数 %s \\n\"</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input two int nums\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d,%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    sum <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d+%d=%d\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>1.void main 是以前的写法，不推荐</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>1. 编译和执行 c 程序</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>（1）命令行执行：gcc .\\hello.c 默认生成 a.exe（linux 是 a.out）</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>（2）如要指定生成的可执行文件名，可加 - o 参数，如：gcc .\\hello.c -o jalen.exe</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>（3）下面代码将 gcc 换成 g++ 编译效果几乎等同</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>（4）如果是多个 c 代码的源码文件，编译方法如下：$ gcc test1.c test2.c -o main.out</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>2.gcc 和 g++ 区别</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>（1）gcc 和 g++ 都是 GNU (组织) 的一个编译器。</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>（2）后缀为.c 的，gcc 把它当作是 C 程序，而 g++ 当作是 c++ 程序；</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>（3）后缀为.cpp 的，两者都会认为是 c++ 程序</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>（4）注意：虽然 c++ 是 c 的超集，但是两者对语法的要求是有区别的</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>（5）g++ 还会默认告诉链接器，让它链接上 C++ 标准库；gcc 默认不会链接上 C++ 标准库</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token comment\">// 生成的 .exe 文件打开时会一闪而过，为了避免这个问题可在 return 0; 前加入 system (\"pause\"); 语句</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>1.GDB（GNU Debugger）调试</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>（1）GDB 可以调试 ada, c, c++, asm, minimal, d, fortran, objective-c, go, java,pascal 等语言</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>（2）对于 C 程序来说，需要在编译时加上 - g 参数，保留调试信息，否则不能使用 GDB 进行调试。</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>（3）如果不是自己编译的程序，并不知道是否带有 - g 参数，可以查看段信息：$ readelf -S helloWorld|grep debug</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>（4）编译下面代码：\"gcc -g -o jalen .\\hello.c\"</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>（5）输入 “gdb .\\jalen.exe” 进入调试</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>（6）在 gdb 交互窗口直接输入 “run xxx” 调试看输出，或者先 “set args xxx” 再执行 “run”</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>（7）输入 “q” 退出 gdb 交互</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>（8）更多内容查看：https://zhuanlan.zhihu.com/p/74897601</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main6</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">>=</span> argc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"usage:hello name\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World %s!\\n\"</span><span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "学习",
                "C语言学习",
                "C语言基础"
            ]
        },
        {
            "id": "http://jalen.site/python%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/",
            "url": "http://jalen.site/python%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/",
            "title": "python用法小结",
            "date_published": "2023-01-04T06:34:43.000Z",
            "content_html": "<h1 id=\"操作es\"><a class=\"anchor\" href=\"#操作es\">#</a> 操作 ES</h1>\n<h2 id=\"连接es服务器\"><a class=\"anchor\" href=\"#连接es服务器\">#</a> 连接 ES 服务器</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>es_host_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'192.168.0.1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'192.168.0.2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'192.168.0.3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'192.168.0.4'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>es_username <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>es_password <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>es_client <span class=\"token operator\">=</span> Elasticsearch<span class=\"token punctuation\">(</span>hosts<span class=\"token operator\">=</span><span class=\"token punctuation\">,</span> http_auth<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>es_username<span class=\"token punctuation\">,</span> es_password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"插入es数据\"><a class=\"anchor\" href=\"#插入es数据\">#</a> 插入 ES 数据</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>documents <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">\"_index\"</span><span class=\"token punctuation\">:</span> index_name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">\"_source\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">'metrics'</span><span class=\"token punctuation\">:</span> doc<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token string\">'@timestamp'</span><span class=\"token punctuation\">:</span> datetime<span class=\"token punctuation\">.</span>utcnow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">for</span> doc <span class=\"token keyword\">in</span> doc_list<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>helpers<span class=\"token punctuation\">.</span>bulk<span class=\"token punctuation\">(</span>es_client<span class=\"token punctuation\">,</span> documents<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span>orient<span class=\"token operator\">=</span><span class=\"token string\">'records'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>es_client<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span><span class=\"token string\">'index_name'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token string\">'doc_id'</span><span class=\"token punctuation\">,</span> body<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> request_timeout<span class=\"token operator\">=</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"删除es数据\"><a class=\"anchor\" href=\"#删除es数据\">#</a> 删除 ES 数据</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>es_client<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span><span class=\"token string\">'index_name'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token string\">'doc_id'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>es_client<span class=\"token punctuation\">.</span>indices<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span>index_name<span class=\"token punctuation\">,</span> ignore<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">404</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"查询es数据\"><a class=\"anchor\" href=\"#查询es数据\">#</a> 查询 ES 数据</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># for aggregation</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>resp <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span> body<span class=\"token operator\">=</span>query<span class=\"token punctuation\">,</span> request_timeout<span class=\"token operator\">=</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># for original</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>resp <span class=\"token operator\">=</span> helpers<span class=\"token punctuation\">.</span>scan<span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">,</span> query<span class=\"token operator\">=</span>query<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> request_timeout<span class=\"token operator\">=</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> num<span class=\"token punctuation\">,</span> doc <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    data_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'_source'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"更新es数据\"><a class=\"anchor\" href=\"#更新es数据\">#</a> 更新 ES 数据</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>es_client<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span>es_index<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token string\">'es_id'</span><span class=\"token punctuation\">,</span> body<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"doc\"</span><span class=\"token punctuation\">:</span> body<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"python列表切片\"><a class=\"anchor\" href=\"#python列表切片\">#</a> python 列表切片</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pieces <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>id_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>id_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h1 id=\"启动线程\"><a class=\"anchor\" href=\"#启动线程\">#</a> 启动线程</h1>\n<h2 id=\"单线程\"><a class=\"anchor\" href=\"#单线程\">#</a> 单线程</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">'p1'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">'p2'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">'p3'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>action <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">:</span> method_a<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">:</span> method_b<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">:</span> method_c<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">:</span> method_d<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">:</span> method_e<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token string\">\"f\"</span><span class=\"token punctuation\">:</span> method_f<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>thread <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>action<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> kwargs<span class=\"token operator\">=</span>params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>thread<span class=\"token punctuation\">.</span>daemon <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>thread<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"线程池\"><a class=\"anchor\" href=\"#线程池\">#</a> 线程池</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>thread_count <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>op_size <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>ceil<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>user_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> thread_count<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>users_pieces <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>user_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i <span class=\"token operator\">+</span> op_size<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>user_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> op_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>max_workers <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>users_pieces<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>executor <span class=\"token operator\">=</span> concurrent<span class=\"token punctuation\">.</span>futures<span class=\"token punctuation\">.</span>ThreadPoolExecutor<span class=\"token punctuation\">(</span>max_workers<span class=\"token operator\">=</span>max_workers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>kwargs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">'p1'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'p1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token string\">'p2'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'p2'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">'p3'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'p3'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">'p4'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'p4'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>futures <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> users <span class=\"token keyword\">in</span> users_pieces<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    futures<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>executor<span class=\"token punctuation\">.</span>submit<span class=\"token punctuation\">(</span>loop_users_<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>futures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    data_list <span class=\"token operator\">=</span> futures<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"数据库查询\"><a class=\"anchor\" href=\"#数据库查询\">#</a> 数据库查询</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>uri <span class=\"token operator\">=</span> <span class=\"token string\">'oracle://schema:passwd@127.0.0.1:1721/?service_name=aaa.jalen.com'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>engine <span class=\"token operator\">=</span> create_engine<span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">,</span> poolclass<span class=\"token operator\">=</span>NullPool<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select name, age from tab_t1 where name=:name\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_sql_query<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> engine<span class=\"token punctuation\">,</span> params<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'jalen'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_sql_query<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> engine<span class=\"token punctuation\">,</span> params<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'jalen'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"返回不改变key顺序的json数据\"><a class=\"anchor\" href=\"#返回不改变key顺序的json数据\">#</a> 返回不改变 key 顺序的 json 数据</h1>\n<p>jsonify 返回数据有时因为 flask 的配置问题会导致 key 顺序和理想的不一致</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>OrderedDict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'a'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'b'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">return</span> make_response<span class=\"token punctuation\">(</span>jsonify<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"匹配包含某个字符串\"><a class=\"anchor\" href=\"#匹配包含某个字符串\">#</a> 匹配包含某个字符串</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>re<span class=\"token punctuation\">.</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'^(CHINA|CHINESE)'</span><span class=\"token punctuation\">,</span> country_names<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"执行存储过程\"><a class=\"anchor\" href=\"#执行存储过程\">#</a> 执行存储过程</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_procedure_data</span><span class=\"token punctuation\">(</span>param1<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">,</span> param3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Run procedure and get data... ...'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    connection <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>raw_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        cursor <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        cursor<span class=\"token punctuation\">.</span>callproc<span class=\"token punctuation\">(</span><span class=\"token string\">\"get_somedata\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>param1<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from  some_table where col=:param3\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_sql_query<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> engine<span class=\"token punctuation\">,</span> params<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>param3<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        cursor<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        connection<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> df<span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span>orient<span class=\"token operator\">=</span><span class=\"token string\">'records'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>traceback<span class=\"token punctuation\">.</span>format_exc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        connection<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"flask日志配置\"><a class=\"anchor\" href=\"#flask日志配置\">#</a> Flask 日志配置</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>logging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token string\">\"%(asctime)s %(process)d:%(thread)d %(filename)s:%(lineno)d:%(levelname)s:%(message)s\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>logger <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"数据库查询全字段模糊匹配并分页\"><a class=\"anchor\" href=\"#数据库查询全字段模糊匹配并分页\">#</a> 数据库查询全字段模糊匹配并分页</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> append_columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>append_columns<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">.</span>key <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> class_mapper<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        data <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> columns<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> column <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>append_columns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            data<span class=\"token punctuation\">[</span>column<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> model<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> data</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">.</span>key <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> class_mapper<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> columns<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">list_something</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    data <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>get_json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    page_num <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'page_num'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    page_size <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'page_size'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    search_key <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'search_key'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    query <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">(</span>SomeModel<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> search_key<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        search_key_list <span class=\"token operator\">=</span> search_key<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        like_text_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"%&#123;&#125;%\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>sk<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> sk <span class=\"token keyword\">in</span> search_key_list<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        like_phases <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        name_like <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>SomeModel<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>ilike<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> like_text_list<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        ver_like <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>SomeModel<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">.</span>ilike<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> like_text_list<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        type_like <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>SomeModel<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">.</span>ilike<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> like_text_list<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        like_phases<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>name_like<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        like_phases<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>ver_like<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        like_phases<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>type_like<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        query <span class=\"token operator\">=</span> query<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>or_<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>like_phases<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    res <span class=\"token operator\">=</span> query<span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span>desc<span class=\"token punctuation\">(</span>SomeModel<span class=\"token punctuation\">.</span>createtime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> SomeModel<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    pagination <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>paginate<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        page<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>page_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        per_page<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>page_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        error_out<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    data_models <span class=\"token operator\">=</span> pagination<span class=\"token punctuation\">.</span>items</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    data_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>serialize<span class=\"token punctuation\">(</span>rep<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> rep <span class=\"token keyword\">in</span> data_models<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">return</span> make_response<span class=\"token punctuation\">(</span>data_list<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"pandas批量插入\"><a class=\"anchor\" href=\"#pandas批量插入\">#</a> Pandas 批量插入</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>d_type <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">\"object\"</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        d_type<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">:</span> VARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">elif</span> <span class=\"token string\">\"int\"</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        d_type<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">:</span> INTEGER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">elif</span> <span class=\"token string\">\"date\"</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        d_type<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">:</span> DATE<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>df<span class=\"token punctuation\">.</span>to_sql<span class=\"token punctuation\">(</span><span class=\"token string\">'tb_user'</span><span class=\"token punctuation\">,</span> engine<span class=\"token punctuation\">,</span> if_exists<span class=\"token operator\">=</span><span class=\"token string\">'append'</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>d_type<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"influxdb操作\"><a class=\"anchor\" href=\"#influxdb操作\">#</a> InfluxDB 操作</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>db_name <span class=\"token operator\">=</span> <span class=\"token string\">'some_db_name'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>client <span class=\"token operator\">=</span> InfluxDBClient<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'192.168.0.1'</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">8086</span><span class=\"token punctuation\">,</span> database<span class=\"token operator\">=</span>db_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># delete point</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"db\"</span><span class=\"token punctuation\">:</span> db_name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"q\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"delete from tb_some_table where id='%s'\"</span> <span class=\"token operator\">%</span> bid<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>client<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'query'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> params<span class=\"token operator\">=</span>params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># insert point</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'2022-12-12 00:00:00'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>client<span class=\"token punctuation\">.</span>write_points<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span>orient<span class=\"token operator\">=</span><span class=\"token string\">'records'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"flask-login\"><a class=\"anchor\" href=\"#flask-login\">#</a> Flask login</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>login_user<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"字典遍历\"><a class=\"anchor\" href=\"#字典遍历\">#</a> 字典遍历</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> six<span class=\"token punctuation\">.</span>iteritems<span class=\"token punctuation\">(</span>some_dict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr></table></figure><h1 id=\"pandas基本操作\"><a class=\"anchor\" href=\"#pandas基本操作\">#</a> Pandas 基本操作</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 列重命名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>df<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'name2'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 丢弃列</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>df<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 丢弃空行</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span>subset<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 丢弃重复行</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>drop_duplicates<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>drop_duplicates<span class=\"token punctuation\">(</span>subset<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> keep<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>df<span class=\"token punctuation\">.</span>drop_duplicates<span class=\"token punctuation\">(</span>subset<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> keep<span class=\"token operator\">=</span><span class=\"token string\">'first'</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 列操作</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> as_index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name4'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token string\">','</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 合并两个 df</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">,</span> df2<span class=\"token punctuation\">,</span> how<span class=\"token operator\">=</span><span class=\"token string\">\"left\"</span><span class=\"token punctuation\">,</span> on<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"name1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name2\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 过滤</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name4'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>name1 <span class=\"token operator\">==</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>name1 <span class=\"token operator\">!=</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>name1<span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>contains<span class=\"token punctuation\">(</span><span class=\"token string\">'xxx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token operator\">~</span>df<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Jalen'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Kite'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">></span> <span class=\"token number\">6000</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>notnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> df<span class=\"token punctuation\">:</span> df<span class=\"token punctuation\">.</span>dependency<span class=\"token punctuation\">.</span>notnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Jalen'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jones'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span>df<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token string\">'Jalen'</span> <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>contains<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"(?i)Jalen\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'jalen'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># 填充 nan</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>df<span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>df<span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>df<span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'age1'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age2'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># 变换</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'name2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token string\">'yyy'</span> <span class=\"token keyword\">if</span> x<span class=\"token operator\">==</span><span class=\"token string\">'xxx'</span> <span class=\"token keyword\">else</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"name1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">\"name2\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> util<span class=\"token punctuation\">.</span>get_name<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token string\">'yyy'</span> <span class=\"token keyword\">if</span> x<span class=\"token punctuation\">[</span><span class=\"token string\">'name2'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">'xxx'</span> <span class=\"token keyword\">else</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># 追加多个 df</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df1<span class=\"token punctuation\">,</span> df2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sort<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># 根据逗号拆分成多行</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>df<span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span> expand<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\"># 赋值</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># 获取行数</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>count <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>count <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\"># 分组聚合</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> as_index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> as_index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>groups <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> as_index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">for</span> group <span class=\"token keyword\">in</span> groups<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>max_date <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>env <span class=\"token operator\">==</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'start_date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token string\">'createtime'</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> as_index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># tail(1)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token comment\"># 重置行索引</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>df<span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\"># 时间列转换</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">'create_time'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>to_datetime<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'create_time'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\"># 排序</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>df<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span><span class=\"token string\">'similarity'</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>df<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span><span class=\"token string\">'time'</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>df<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> na_position<span class=\"token operator\">=</span><span class=\"token string\">'first'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\"># 转秩</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'create_time'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_m<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> as_index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>pivot_table<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span><span class=\"token string\">'create_time'</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>df<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'create_time'</span> <span class=\"token keyword\">if</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'create_time'</span> <span class=\"token keyword\">else</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>df<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'create_time'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Date'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token comment\"># 发送 html 格式邮件</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>report_html <span class=\"token operator\">=</span> df_report<span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> border<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> justify<span class=\"token operator\">=</span><span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span> na_rep<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> escape<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>report_html <span class=\"token operator\">=</span> report_html<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;th>'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&lt;th style = \"background-color: #e2fcfd; width:150px\">'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>report_html <span class=\"token operator\">=</span> report_html<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cellspacing=\\\"0\\\" class'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>report_html <span class=\"token operator\">=</span> report_html<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;tbody>'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&lt;tbody style=\"text-align:center\">'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>kwargs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">:</span> title<span class=\"token punctuation\">,</span> <span class=\"token string\">'receiver'</span><span class=\"token punctuation\">:</span> receiver<span class=\"token punctuation\">,</span> <span class=\"token string\">'body'</span><span class=\"token punctuation\">:</span> body_header <span class=\"token operator\">+</span> normal_body <span class=\"token operator\">+</span> report_html <span class=\"token operator\">+</span> body_footer<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>subject <span class=\"token operator\">=</span> <span class=\"token string\">\"xxx\"</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>util<span class=\"token punctuation\">.</span>send_email<span class=\"token punctuation\">(</span>subject<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token comment\"># 读取 excel 表格</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">r\"ddd.xlsx\"</span><span class=\"token punctuation\">,</span> engine<span class=\"token operator\">=</span><span class=\"token string\">'openpyxl'</span><span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'Sheet1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>df<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span><span class=\"token string\">\"xxxx.xlsx\"</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token string\">'ddd'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token comment\"># 读取 csv 文件</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>df<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token comment\"># 取值</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>age <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'Jalen'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>val <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>val <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token comment\"># df 转字典列表</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>df<span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span>orient<span class=\"token operator\">=</span><span class=\"token string\">'records'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token comment\"># 转 list</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>data <span class=\"token operator\">=</span> df1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>df2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>drop_duplicates<span class=\"token punctuation\">(</span>subset<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> keep<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token comment\"># 逐行遍历 df</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> row <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span>iterrows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>  <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token comment\"># 拼接生成新列</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'name2'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h1 id=\"执行dig命令\"><a class=\"anchor\" href=\"#执行dig命令\">#</a> 执行 Dig 命令</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cmd <span class=\"token operator\">=</span> <span class=\"token string\">'dig xxx -t CNAME +short'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>process <span class=\"token operator\">=</span> subprocess<span class=\"token punctuation\">.</span>Popen<span class=\"token punctuation\">(</span>shlex<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> stdout<span class=\"token operator\">=</span>subprocess<span class=\"token punctuation\">.</span>PIPE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>out<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>communicate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"xml转dict\"><a class=\"anchor\" href=\"#xml转dict\">#</a> xml 转 dict</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>xmltodict<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">(</span>xml_str_content<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"通过哨兵连接redis\"><a class=\"anchor\" href=\"#通过哨兵连接redis\">#</a> 通过哨兵连接 redis</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_redis_client</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    sentinel_ip_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'192.168.0.1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'192.168.0.2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'192.168.0.3'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    master_name <span class=\"token operator\">=</span> <span class=\"token string\">'mymaster'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    master_password <span class=\"token operator\">=</span> <span class=\"token string\">'xxx'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    sentinel_port <span class=\"token operator\">=</span> <span class=\"token number\">26379</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    conf <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">'sentinel'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> sentinel_port<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> ip <span class=\"token keyword\">in</span> sentinel_ip_list<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">'master_name'</span><span class=\"token punctuation\">:</span> master_name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">'connection_conf'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token string\">'socket_timeout'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token string\">'retry_on_timeout'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token string\">'socket_keepalive'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token string\">'max_connections'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token string\">'db'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token string\">'encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token string\">'decode_responses'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    redis_sentinel <span class=\"token operator\">=</span> Sentinel<span class=\"token punctuation\">(</span>conf<span class=\"token punctuation\">[</span><span class=\"token string\">'sentinel'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>conf<span class=\"token punctuation\">[</span><span class=\"token string\">'connection_conf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># ip, port = redis_sentinel.discover_master(master_name)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># logger.info('master ip: %s' % ip)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># logger.info('master port: %s' % port)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> redis_sentinel<span class=\"token punctuation\">.</span>master_for<span class=\"token punctuation\">(</span>master_name<span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span>master_password<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"字符串转字典\"><a class=\"anchor\" href=\"#字符串转字典\">#</a> 字符串转字典</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>data_str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>data_str<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"redlock使用\"><a class=\"anchor\" href=\"#redlock使用\">#</a> RedLock 使用</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># Add lock to save</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    lock_name <span class=\"token operator\">=</span> <span class=\"token string\">'lock_%s'</span> <span class=\"token operator\">%</span> number</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    redis_client <span class=\"token operator\">=</span> redisutils<span class=\"token punctuation\">.</span>get_redis_client<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    save_lock <span class=\"token operator\">=</span> Redlock<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span>lock_name<span class=\"token punctuation\">,</span> masters<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>redis_client<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> auto_release_time<span class=\"token operator\">=</span><span class=\"token number\">30</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    save_lock<span class=\"token punctuation\">.</span>acquire<span class=\"token punctuation\">(</span>timeout<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Store data'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    save<span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">,</span> redis_client<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Store end'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    save_lock<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr></table></figure><h1 id=\"事务操作\"><a class=\"anchor\" href=\"#事务操作\">#</a> 事务操作</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>connection <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>trans <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>begin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  sql <span class=\"token operator\">=</span> <span class=\"token string\">\"update tb set age=:age where name=:name\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  connection<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span>age<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  trans<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    trans<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">raise</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    connection<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"kb查询\"><a class=\"anchor\" href=\"#kb查询\">#</a> KB 查询</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>query_body <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"query\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'multi_match'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token string\">'query'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'query_string'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token string\">'fields'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'f1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f4'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'size'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>query <span class=\"token operator\">=</span> es<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>index<span class=\"token operator\">=</span>index<span class=\"token punctuation\">,</span> body<span class=\"token operator\">=</span>query_body<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">[</span><span class=\"token string\">'_source'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> q <span class=\"token keyword\">in</span> query<span class=\"token punctuation\">[</span><span class=\"token string\">'hits'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'hits'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h1 id=\"iso8859数据库存非西欧字符\"><a class=\"anchor\" href=\"#iso8859数据库存非西欧字符\">#</a> ISO8859 数据库存非西欧字符</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 存的时候</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>model<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> val<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">\"unicode_escape\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> val <span class=\"token keyword\">else</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 取的时候</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'ISO-8859-1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'unicode_escape'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> x <span class=\"token keyword\">else</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"kb主页展示表格转树状\"><a class=\"anchor\" href=\"#kb主页展示表格转树状\">#</a> KB 主页展示表格转树状</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data <span class=\"token operator\">=</span> defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"字典拼接\"><a class=\"anchor\" href=\"#字典拼接\">#</a> 字典拼接</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Jalen'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>data1 <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'money'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'no'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>data<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'fat'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'nickname'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'cheng'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"批量插入\"><a class=\"anchor\" href=\"#批量插入\">#</a> 批量插入</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name4'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>data_to_insert <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>xi<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> xi <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>connection <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>raw_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cursor <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cursor<span class=\"token punctuation\">.</span>executemany<span class=\"token punctuation\">(</span><span class=\"token string\">\"insert into tb01 values (:1, :2, :3, :4)\"</span><span class=\"token punctuation\">,</span> data_to_insert<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cursor<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>connection<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"json数据排序\"><a class=\"anchor\" href=\"#json数据排序\">#</a> JSON 数据排序</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">json_ordered</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\" ref: https://stackoverflow.com/questions/25851183/how-to-compare-two-json-</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     objects-with-the-same-elements-in-a-different-order-equa \"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> json_ordered<span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>json_ordered<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> obj</pre></td></tr></table></figure><h1 id=\"多层字典转为一层字典key用点号分隔\"><a class=\"anchor\" href=\"#多层字典转为一层字典key用点号分隔\">#</a> 多层字典转为一层字典，key 用点号分隔</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">split_dict_keys_with_point</span><span class=\"token punctuation\">(</span>tmp_dict<span class=\"token punctuation\">,</span> top_key_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    collection <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> tmp_dict<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> top_key_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                collection<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>k<span class=\"token punctuation\">:</span> v<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                collection<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>top_key_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>k<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">:</span> v<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            top_key_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            stack_res <span class=\"token operator\">=</span> split_dict_keys_with_point<span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> top_key_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            top_key_list<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            collection<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>stack_res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> collection</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    tmp_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token string\">'index'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'some_index'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'2022-12-12 00:00:00'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token string\">'metrics'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'jalen'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token string\">'love'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'eat'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token string\">'properties'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token string\">'address'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HeFei'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token string\">'phone'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1888888888'</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    data <span class=\"token operator\">=</span> util<span class=\"token punctuation\">.</span>split_dict_keys_with_point<span class=\"token punctuation\">(</span>tmp_dict<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"格式化字符串\"><a class=\"anchor\" href=\"#格式化字符串\">#</a> 格式化字符串</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    data_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Jalen'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token string\">'weight'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token string\">'address'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HeFei'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Jones'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">'weight'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">'address'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HeFei'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">'weight'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">'address'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HeiHe'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    fields <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    reports <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    fields_length <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> fields<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        msg_col <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        col_width <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> msg_col<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            col_width<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        fields_length<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>col_width<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>col_width<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">20</span> <span class=\"token keyword\">else</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    markdown <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    report_length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>reports<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    lens<span class=\"token punctuation\">,</span> title <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">for</span> field <span class=\"token keyword\">in</span> fields<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        title<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;:&lt;%d&#125;\"</span> <span class=\"token operator\">%</span> fields_length<span class=\"token punctuation\">[</span>field<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        lens<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>fields_length<span class=\"token punctuation\">[</span>field<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    split_line <span class=\"token operator\">=</span> <span class=\"token string\">\"+%s+\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"-\"</span> <span class=\"token operator\">*</span> i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> lens<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    title <span class=\"token operator\">=</span> <span class=\"token string\">\"|%s|\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"|\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    keep_split_line <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    head_msg <span class=\"token operator\">=</span> <span class=\"token string\">\"%s  \\n%s  \\n%s  \\n\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>split_line<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> split_line<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    msg <span class=\"token operator\">=</span> <span class=\"token string\">\"\\n%s\"</span> <span class=\"token operator\">%</span> head_msg</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">for</span> count<span class=\"token punctuation\">,</span> report <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>reports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        row <span class=\"token operator\">=</span> <span class=\"token string\">\"|%s|\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"|\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;:&lt;%d&#125;\"</span> <span class=\"token operator\">%</span> lens<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> item <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>report<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        msg <span class=\"token operator\">=</span> msg <span class=\"token operator\">+</span> row <span class=\"token operator\">+</span> <span class=\"token string\">\"  \\n\"</span> <span class=\"token operator\">+</span> split_line <span class=\"token operator\">+</span> <span class=\"token string\">\"  \\n\"</span> <span class=\"token keyword\">if</span> keep_split_line <span class=\"token keyword\">else</span> msg <span class=\"token operator\">+</span> row <span class=\"token operator\">+</span> <span class=\"token string\">\"  \\n\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">if</span> report_length <span class=\"token operator\">==</span> count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'End'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": []
        }
    ]
}